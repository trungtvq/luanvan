/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.productbacklog.AddNewProductBacklogReq', null, global);
goog.exportSymbol('proto.productbacklog.DeleteProductBacklogReq', null, global);
goog.exportSymbol('proto.productbacklog.GetAllProductBacklogReq', null, global);
goog.exportSymbol('proto.productbacklog.GetAllProductBacklogRes', null, global);
goog.exportSymbol('proto.productbacklog.ProductBacklogRes', null, global);
goog.exportSymbol('proto.productbacklog.SendToSprintBacklogReq', null, global);
goog.exportSymbol('proto.productbacklog.UpdateProductBacklogReq', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productbacklog.AddNewProductBacklogReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productbacklog.AddNewProductBacklogReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.productbacklog.AddNewProductBacklogReq.displayName = 'proto.productbacklog.AddNewProductBacklogReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.toObject = function(opt_includeInstance) {
  return proto.productbacklog.AddNewProductBacklogReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productbacklog.AddNewProductBacklogReq} msg The msg instance to transform.
 * @return {!Object}
 */
proto.productbacklog.AddNewProductBacklogReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    requesterid: msg.getRequesterid(),
    projectid: msg.getProjectid(),
    role: msg.getRole(),
    want: msg.getWant(),
    so: msg.getSo(),
    statusbacklog: msg.getStatusbacklog(),
    priority: msg.getPriority(),
    estimation: msg.getEstimation(),
    sprintid: msg.getSprintid(),
    cookie: msg.getCookie(),
    title: msg.getTitle()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productbacklog.AddNewProductBacklogReq}
 */
proto.productbacklog.AddNewProductBacklogReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productbacklog.AddNewProductBacklogReq;
  return proto.productbacklog.AddNewProductBacklogReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productbacklog.AddNewProductBacklogReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productbacklog.AddNewProductBacklogReq}
 */
proto.productbacklog.AddNewProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequesterid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWant(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSo(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusbacklog(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriority(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEstimation(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSprintid(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCookie(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.productbacklog.AddNewProductBacklogReq} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.productbacklog.AddNewProductBacklogReq.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRequesterid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getProjectid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getRole();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getWant();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getSo();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getStatusbacklog();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getPriority();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = this.getEstimation();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = this.getSprintid();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = this.getCookie();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = this.getTitle();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.productbacklog.AddNewProductBacklogReq} The clone.
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.cloneMessage = function() {
  return /** @type {!proto.productbacklog.AddNewProductBacklogReq} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string requesterId = 1;
 * @return {string}
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.getRequesterid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.productbacklog.AddNewProductBacklogReq.prototype.setRequesterid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string projectId = 2;
 * @return {string}
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.getProjectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.productbacklog.AddNewProductBacklogReq.prototype.setProjectid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string role = 3;
 * @return {string}
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.productbacklog.AddNewProductBacklogReq.prototype.setRole = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string want = 4;
 * @return {string}
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.getWant = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.productbacklog.AddNewProductBacklogReq.prototype.setWant = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string so = 5;
 * @return {string}
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.getSo = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.productbacklog.AddNewProductBacklogReq.prototype.setSo = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string statusBacklog = 6;
 * @return {string}
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.getStatusbacklog = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.productbacklog.AddNewProductBacklogReq.prototype.setStatusbacklog = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string priority = 7;
 * @return {string}
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.getPriority = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.productbacklog.AddNewProductBacklogReq.prototype.setPriority = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string estimation = 8;
 * @return {string}
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.getEstimation = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.productbacklog.AddNewProductBacklogReq.prototype.setEstimation = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional string sprintId = 9;
 * @return {string}
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.getSprintid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, ""));
};


/** @param {string} value  */
proto.productbacklog.AddNewProductBacklogReq.prototype.setSprintid = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional string cookie = 10;
 * @return {string}
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.getCookie = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, ""));
};


/** @param {string} value  */
proto.productbacklog.AddNewProductBacklogReq.prototype.setCookie = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional string title = 11;
 * @return {string}
 */
proto.productbacklog.AddNewProductBacklogReq.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, ""));
};


/** @param {string} value  */
proto.productbacklog.AddNewProductBacklogReq.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 11, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productbacklog.ProductBacklogRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productbacklog.ProductBacklogRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.productbacklog.ProductBacklogRes.displayName = 'proto.productbacklog.ProductBacklogRes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productbacklog.ProductBacklogRes.prototype.toObject = function(opt_includeInstance) {
  return proto.productbacklog.ProductBacklogRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productbacklog.ProductBacklogRes} msg The msg instance to transform.
 * @return {!Object}
 */
proto.productbacklog.ProductBacklogRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: msg.getError(),
    status: msg.getStatus(),
    productbacklogid: msg.getProductbacklogid()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productbacklog.ProductBacklogRes}
 */
proto.productbacklog.ProductBacklogRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productbacklog.ProductBacklogRes;
  return proto.productbacklog.ProductBacklogRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productbacklog.ProductBacklogRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productbacklog.ProductBacklogRes}
 */
proto.productbacklog.ProductBacklogRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductbacklogid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.productbacklog.ProductBacklogRes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.productbacklog.ProductBacklogRes.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productbacklog.ProductBacklogRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.productbacklog.ProductBacklogRes.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getProductbacklogid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.productbacklog.ProductBacklogRes} The clone.
 */
proto.productbacklog.ProductBacklogRes.prototype.cloneMessage = function() {
  return /** @type {!proto.productbacklog.ProductBacklogRes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.productbacklog.ProductBacklogRes.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.productbacklog.ProductBacklogRes.prototype.setError = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.productbacklog.ProductBacklogRes.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.productbacklog.ProductBacklogRes.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string productBacklogId = 3;
 * @return {string}
 */
proto.productbacklog.ProductBacklogRes.prototype.getProductbacklogid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.productbacklog.ProductBacklogRes.prototype.setProductbacklogid = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productbacklog.UpdateProductBacklogReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productbacklog.UpdateProductBacklogReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.productbacklog.UpdateProductBacklogReq.displayName = 'proto.productbacklog.UpdateProductBacklogReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.toObject = function(opt_includeInstance) {
  return proto.productbacklog.UpdateProductBacklogReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productbacklog.UpdateProductBacklogReq} msg The msg instance to transform.
 * @return {!Object}
 */
proto.productbacklog.UpdateProductBacklogReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    requesterid: msg.getRequesterid(),
    projectid: msg.getProjectid(),
    productbacklogid: msg.getProductbacklogid(),
    role: msg.getRole(),
    want: msg.getWant(),
    so: msg.getSo(),
    statusbacklog: msg.getStatusbacklog(),
    priority: msg.getPriority(),
    estimation: msg.getEstimation(),
    sprint: msg.getSprint(),
    cookie: msg.getCookie(),
    title: msg.getTitle(),
    sprintid: msg.getSprintid()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productbacklog.UpdateProductBacklogReq}
 */
proto.productbacklog.UpdateProductBacklogReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productbacklog.UpdateProductBacklogReq;
  return proto.productbacklog.UpdateProductBacklogReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productbacklog.UpdateProductBacklogReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productbacklog.UpdateProductBacklogReq}
 */
proto.productbacklog.UpdateProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequesterid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductbacklogid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWant(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSo(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusbacklog(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriority(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setEstimation(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSprint(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCookie(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSprintid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.productbacklog.UpdateProductBacklogReq} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.productbacklog.UpdateProductBacklogReq.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRequesterid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getProjectid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getProductbacklogid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getRole();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getWant();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getSo();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getStatusbacklog();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = this.getPriority();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = this.getEstimation();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = this.getSprint();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = this.getCookie();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = this.getTitle();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = this.getSprintid();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.productbacklog.UpdateProductBacklogReq} The clone.
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.cloneMessage = function() {
  return /** @type {!proto.productbacklog.UpdateProductBacklogReq} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string requesterId = 1;
 * @return {string}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.getRequesterid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.productbacklog.UpdateProductBacklogReq.prototype.setRequesterid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string projectId = 2;
 * @return {string}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.getProjectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.productbacklog.UpdateProductBacklogReq.prototype.setProjectid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string productBacklogId = 3;
 * @return {string}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.getProductbacklogid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.productbacklog.UpdateProductBacklogReq.prototype.setProductbacklogid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string role = 4;
 * @return {string}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.productbacklog.UpdateProductBacklogReq.prototype.setRole = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string want = 5;
 * @return {string}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.getWant = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.productbacklog.UpdateProductBacklogReq.prototype.setWant = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string so = 6;
 * @return {string}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.getSo = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.productbacklog.UpdateProductBacklogReq.prototype.setSo = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string statusBacklog = 7;
 * @return {string}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.getStatusbacklog = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.productbacklog.UpdateProductBacklogReq.prototype.setStatusbacklog = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string priority = 8;
 * @return {string}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.getPriority = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.productbacklog.UpdateProductBacklogReq.prototype.setPriority = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional string estimation = 9;
 * @return {string}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.getEstimation = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, ""));
};


/** @param {string} value  */
proto.productbacklog.UpdateProductBacklogReq.prototype.setEstimation = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional string sprint = 10;
 * @return {string}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.getSprint = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, ""));
};


/** @param {string} value  */
proto.productbacklog.UpdateProductBacklogReq.prototype.setSprint = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional string cookie = 11;
 * @return {string}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.getCookie = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, ""));
};


/** @param {string} value  */
proto.productbacklog.UpdateProductBacklogReq.prototype.setCookie = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional string title = 12;
 * @return {string}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, ""));
};


/** @param {string} value  */
proto.productbacklog.UpdateProductBacklogReq.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional string sprintId = 13;
 * @return {string}
 */
proto.productbacklog.UpdateProductBacklogReq.prototype.getSprintid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, ""));
};


/** @param {string} value  */
proto.productbacklog.UpdateProductBacklogReq.prototype.setSprintid = function(value) {
  jspb.Message.setField(this, 13, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productbacklog.DeleteProductBacklogReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productbacklog.DeleteProductBacklogReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.productbacklog.DeleteProductBacklogReq.displayName = 'proto.productbacklog.DeleteProductBacklogReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productbacklog.DeleteProductBacklogReq.prototype.toObject = function(opt_includeInstance) {
  return proto.productbacklog.DeleteProductBacklogReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productbacklog.DeleteProductBacklogReq} msg The msg instance to transform.
 * @return {!Object}
 */
proto.productbacklog.DeleteProductBacklogReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    requesterid: msg.getRequesterid(),
    projectid: msg.getProjectid(),
    productbacklogid: msg.getProductbacklogid(),
    cookie: msg.getCookie()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productbacklog.DeleteProductBacklogReq}
 */
proto.productbacklog.DeleteProductBacklogReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productbacklog.DeleteProductBacklogReq;
  return proto.productbacklog.DeleteProductBacklogReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productbacklog.DeleteProductBacklogReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productbacklog.DeleteProductBacklogReq}
 */
proto.productbacklog.DeleteProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequesterid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductbacklogid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCookie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.productbacklog.DeleteProductBacklogReq} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.productbacklog.DeleteProductBacklogReq.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productbacklog.DeleteProductBacklogReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.productbacklog.DeleteProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRequesterid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getProjectid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getProductbacklogid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getCookie();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.productbacklog.DeleteProductBacklogReq} The clone.
 */
proto.productbacklog.DeleteProductBacklogReq.prototype.cloneMessage = function() {
  return /** @type {!proto.productbacklog.DeleteProductBacklogReq} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string requesterId = 1;
 * @return {string}
 */
proto.productbacklog.DeleteProductBacklogReq.prototype.getRequesterid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.productbacklog.DeleteProductBacklogReq.prototype.setRequesterid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string projectId = 2;
 * @return {string}
 */
proto.productbacklog.DeleteProductBacklogReq.prototype.getProjectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.productbacklog.DeleteProductBacklogReq.prototype.setProjectid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string productBacklogId = 3;
 * @return {string}
 */
proto.productbacklog.DeleteProductBacklogReq.prototype.getProductbacklogid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.productbacklog.DeleteProductBacklogReq.prototype.setProductbacklogid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string cookie = 4;
 * @return {string}
 */
proto.productbacklog.DeleteProductBacklogReq.prototype.getCookie = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.productbacklog.DeleteProductBacklogReq.prototype.setCookie = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productbacklog.SendToSprintBacklogReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productbacklog.SendToSprintBacklogReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.productbacklog.SendToSprintBacklogReq.displayName = 'proto.productbacklog.SendToSprintBacklogReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productbacklog.SendToSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {
  return proto.productbacklog.SendToSprintBacklogReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productbacklog.SendToSprintBacklogReq} msg The msg instance to transform.
 * @return {!Object}
 */
proto.productbacklog.SendToSprintBacklogReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    requesterid: msg.getRequesterid(),
    projectid: msg.getProjectid(),
    productbacklogid: msg.getProductbacklogid(),
    start: msg.getStart(),
    deadline: msg.getDeadline(),
    cookie: msg.getCookie()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productbacklog.SendToSprintBacklogReq}
 */
proto.productbacklog.SendToSprintBacklogReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productbacklog.SendToSprintBacklogReq;
  return proto.productbacklog.SendToSprintBacklogReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productbacklog.SendToSprintBacklogReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productbacklog.SendToSprintBacklogReq}
 */
proto.productbacklog.SendToSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequesterid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductbacklogid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStart(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeadline(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCookie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.productbacklog.SendToSprintBacklogReq} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.productbacklog.SendToSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productbacklog.SendToSprintBacklogReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.productbacklog.SendToSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRequesterid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getProjectid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getProductbacklogid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getStart();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getDeadline();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getCookie();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.productbacklog.SendToSprintBacklogReq} The clone.
 */
proto.productbacklog.SendToSprintBacklogReq.prototype.cloneMessage = function() {
  return /** @type {!proto.productbacklog.SendToSprintBacklogReq} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string requesterId = 1;
 * @return {string}
 */
proto.productbacklog.SendToSprintBacklogReq.prototype.getRequesterid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.productbacklog.SendToSprintBacklogReq.prototype.setRequesterid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string projectId = 2;
 * @return {string}
 */
proto.productbacklog.SendToSprintBacklogReq.prototype.getProjectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.productbacklog.SendToSprintBacklogReq.prototype.setProjectid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string productBacklogId = 3;
 * @return {string}
 */
proto.productbacklog.SendToSprintBacklogReq.prototype.getProductbacklogid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.productbacklog.SendToSprintBacklogReq.prototype.setProductbacklogid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string start = 4;
 * @return {string}
 */
proto.productbacklog.SendToSprintBacklogReq.prototype.getStart = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.productbacklog.SendToSprintBacklogReq.prototype.setStart = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string deadline = 5;
 * @return {string}
 */
proto.productbacklog.SendToSprintBacklogReq.prototype.getDeadline = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.productbacklog.SendToSprintBacklogReq.prototype.setDeadline = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string cookie = 6;
 * @return {string}
 */
proto.productbacklog.SendToSprintBacklogReq.prototype.getCookie = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.productbacklog.SendToSprintBacklogReq.prototype.setCookie = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productbacklog.GetAllProductBacklogReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productbacklog.GetAllProductBacklogReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.productbacklog.GetAllProductBacklogReq.displayName = 'proto.productbacklog.GetAllProductBacklogReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productbacklog.GetAllProductBacklogReq.prototype.toObject = function(opt_includeInstance) {
  return proto.productbacklog.GetAllProductBacklogReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productbacklog.GetAllProductBacklogReq} msg The msg instance to transform.
 * @return {!Object}
 */
proto.productbacklog.GetAllProductBacklogReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    requesterid: msg.getRequesterid(),
    projectid: msg.getProjectid(),
    cookie: msg.getCookie()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productbacklog.GetAllProductBacklogReq}
 */
proto.productbacklog.GetAllProductBacklogReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productbacklog.GetAllProductBacklogReq;
  return proto.productbacklog.GetAllProductBacklogReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productbacklog.GetAllProductBacklogReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productbacklog.GetAllProductBacklogReq}
 */
proto.productbacklog.GetAllProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequesterid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCookie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.productbacklog.GetAllProductBacklogReq} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.productbacklog.GetAllProductBacklogReq.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productbacklog.GetAllProductBacklogReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.productbacklog.GetAllProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRequesterid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getProjectid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getCookie();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.productbacklog.GetAllProductBacklogReq} The clone.
 */
proto.productbacklog.GetAllProductBacklogReq.prototype.cloneMessage = function() {
  return /** @type {!proto.productbacklog.GetAllProductBacklogReq} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string requesterId = 1;
 * @return {string}
 */
proto.productbacklog.GetAllProductBacklogReq.prototype.getRequesterid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.productbacklog.GetAllProductBacklogReq.prototype.setRequesterid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string projectId = 2;
 * @return {string}
 */
proto.productbacklog.GetAllProductBacklogReq.prototype.getProjectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.productbacklog.GetAllProductBacklogReq.prototype.setProjectid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string cookie = 3;
 * @return {string}
 */
proto.productbacklog.GetAllProductBacklogReq.prototype.getCookie = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.productbacklog.GetAllProductBacklogReq.prototype.setCookie = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productbacklog.GetAllProductBacklogRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productbacklog.GetAllProductBacklogRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.productbacklog.GetAllProductBacklogRes.displayName = 'proto.productbacklog.GetAllProductBacklogRes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productbacklog.GetAllProductBacklogRes.prototype.toObject = function(opt_includeInstance) {
  return proto.productbacklog.GetAllProductBacklogRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productbacklog.GetAllProductBacklogRes} msg The msg instance to transform.
 * @return {!Object}
 */
proto.productbacklog.GetAllProductBacklogRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    productbacklogid: msg.getProductbacklogid(),
    role: msg.getRole(),
    want: msg.getWant(),
    so: msg.getSo(),
    statusbacklog: msg.getStatusbacklog(),
    status: msg.getStatus(),
    error: msg.getError(),
    priority: msg.getPriority(),
    estimation: msg.getEstimation(),
    sprintid: msg.getSprintid()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productbacklog.GetAllProductBacklogRes}
 */
proto.productbacklog.GetAllProductBacklogRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productbacklog.GetAllProductBacklogRes;
  return proto.productbacklog.GetAllProductBacklogRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productbacklog.GetAllProductBacklogRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productbacklog.GetAllProductBacklogRes}
 */
proto.productbacklog.GetAllProductBacklogRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductbacklogid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWant(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSo(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusbacklog(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriority(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEstimation(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSprintid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.productbacklog.GetAllProductBacklogRes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.productbacklog.GetAllProductBacklogRes.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productbacklog.GetAllProductBacklogRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.productbacklog.GetAllProductBacklogRes.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getProductbacklogid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getRole();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getWant();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getSo();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getStatusbacklog();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = this.getStatus();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = this.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getPriority();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getEstimation();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = this.getSprintid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.productbacklog.GetAllProductBacklogRes} The clone.
 */
proto.productbacklog.GetAllProductBacklogRes.prototype.cloneMessage = function() {
  return /** @type {!proto.productbacklog.GetAllProductBacklogRes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string productBacklogId = 2;
 * @return {string}
 */
proto.productbacklog.GetAllProductBacklogRes.prototype.getProductbacklogid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.productbacklog.GetAllProductBacklogRes.prototype.setProductbacklogid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string role = 3;
 * @return {string}
 */
proto.productbacklog.GetAllProductBacklogRes.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.productbacklog.GetAllProductBacklogRes.prototype.setRole = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string want = 4;
 * @return {string}
 */
proto.productbacklog.GetAllProductBacklogRes.prototype.getWant = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.productbacklog.GetAllProductBacklogRes.prototype.setWant = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string so = 5;
 * @return {string}
 */
proto.productbacklog.GetAllProductBacklogRes.prototype.getSo = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.productbacklog.GetAllProductBacklogRes.prototype.setSo = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string statusBacklog = 11;
 * @return {string}
 */
proto.productbacklog.GetAllProductBacklogRes.prototype.getStatusbacklog = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, ""));
};


/** @param {string} value  */
proto.productbacklog.GetAllProductBacklogRes.prototype.setStatusbacklog = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional string status = 9;
 * @return {string}
 */
proto.productbacklog.GetAllProductBacklogRes.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, ""));
};


/** @param {string} value  */
proto.productbacklog.GetAllProductBacklogRes.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.productbacklog.GetAllProductBacklogRes.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.productbacklog.GetAllProductBacklogRes.prototype.setError = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string priority = 6;
 * @return {string}
 */
proto.productbacklog.GetAllProductBacklogRes.prototype.getPriority = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.productbacklog.GetAllProductBacklogRes.prototype.setPriority = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string estimation = 7;
 * @return {string}
 */
proto.productbacklog.GetAllProductBacklogRes.prototype.getEstimation = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.productbacklog.GetAllProductBacklogRes.prototype.setEstimation = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string sprintId = 8;
 * @return {string}
 */
proto.productbacklog.GetAllProductBacklogRes.prototype.getSprintid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.productbacklog.GetAllProductBacklogRes.prototype.setSprintid = function(value) {
  jspb.Message.setField(this, 8, value);
};


goog.object.extend(exports, proto.productbacklog);
