/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.profile.GetProfileReq', null, global);
goog.exportSymbol('proto.profile.ProfileRes', null, global);
goog.exportSymbol('proto.profile.UpdateProfileReq', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.profile.GetProfileReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.profile.GetProfileReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.profile.GetProfileReq.displayName = 'proto.profile.GetProfileReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.profile.GetProfileReq.prototype.toObject = function(opt_includeInstance) {
  return proto.profile.GetProfileReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.profile.GetProfileReq} msg The msg instance to transform.
 * @return {!Object}
 */
proto.profile.GetProfileReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    requesterid: msg.getRequesterid(),
    accesstoken: msg.getAccesstoken(),
    username: msg.getUsername()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.profile.GetProfileReq}
 */
proto.profile.GetProfileReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.profile.GetProfileReq;
  return proto.profile.GetProfileReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.profile.GetProfileReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.profile.GetProfileReq}
 */
proto.profile.GetProfileReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequesterid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.profile.GetProfileReq} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.profile.GetProfileReq.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.profile.GetProfileReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.profile.GetProfileReq.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRequesterid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getAccesstoken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.profile.GetProfileReq} The clone.
 */
proto.profile.GetProfileReq.prototype.cloneMessage = function() {
  return /** @type {!proto.profile.GetProfileReq} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string requesterId = 1;
 * @return {string}
 */
proto.profile.GetProfileReq.prototype.getRequesterid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.profile.GetProfileReq.prototype.setRequesterid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string accessToken = 2;
 * @return {string}
 */
proto.profile.GetProfileReq.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.profile.GetProfileReq.prototype.setAccesstoken = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.profile.GetProfileReq.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.profile.GetProfileReq.prototype.setUsername = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.profile.UpdateProfileReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.profile.UpdateProfileReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.profile.UpdateProfileReq.displayName = 'proto.profile.UpdateProfileReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.profile.UpdateProfileReq.prototype.toObject = function(opt_includeInstance) {
  return proto.profile.UpdateProfileReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.profile.UpdateProfileReq} msg The msg instance to transform.
 * @return {!Object}
 */
proto.profile.UpdateProfileReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    usermail: msg.getUsermail(),
    img: msg.getImg(),
    name: msg.getName(),
    address: msg.getAddress(),
    birthday: msg.getBirthday(),
    email: msg.getEmail(),
    fb: msg.getFb(),
    workplace: msg.getWorkplace(),
    skill: msg.getSkill(),
    accesstoken: msg.getAccesstoken()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.profile.UpdateProfileReq}
 */
proto.profile.UpdateProfileReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.profile.UpdateProfileReq;
  return proto.profile.UpdateProfileReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.profile.UpdateProfileReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.profile.UpdateProfileReq}
 */
proto.profile.UpdateProfileReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsermail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImg(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBirthday(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFb(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkplace(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSkill(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.profile.UpdateProfileReq} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.profile.UpdateProfileReq.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.profile.UpdateProfileReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.profile.UpdateProfileReq.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUsermail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getImg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getBirthday();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getEmail();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getFb();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = this.getWorkplace();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = this.getSkill();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = this.getAccesstoken();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.profile.UpdateProfileReq} The clone.
 */
proto.profile.UpdateProfileReq.prototype.cloneMessage = function() {
  return /** @type {!proto.profile.UpdateProfileReq} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string userMail = 1;
 * @return {string}
 */
proto.profile.UpdateProfileReq.prototype.getUsermail = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.profile.UpdateProfileReq.prototype.setUsermail = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string img = 2;
 * @return {string}
 */
proto.profile.UpdateProfileReq.prototype.getImg = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.profile.UpdateProfileReq.prototype.setImg = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.profile.UpdateProfileReq.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.profile.UpdateProfileReq.prototype.setName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string address = 4;
 * @return {string}
 */
proto.profile.UpdateProfileReq.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.profile.UpdateProfileReq.prototype.setAddress = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string birthday = 5;
 * @return {string}
 */
proto.profile.UpdateProfileReq.prototype.getBirthday = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.profile.UpdateProfileReq.prototype.setBirthday = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string email = 6;
 * @return {string}
 */
proto.profile.UpdateProfileReq.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.profile.UpdateProfileReq.prototype.setEmail = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string fb = 7;
 * @return {string}
 */
proto.profile.UpdateProfileReq.prototype.getFb = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.profile.UpdateProfileReq.prototype.setFb = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string workplace = 8;
 * @return {string}
 */
proto.profile.UpdateProfileReq.prototype.getWorkplace = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.profile.UpdateProfileReq.prototype.setWorkplace = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional string skill = 9;
 * @return {string}
 */
proto.profile.UpdateProfileReq.prototype.getSkill = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, ""));
};


/** @param {string} value  */
proto.profile.UpdateProfileReq.prototype.setSkill = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional string accessToken = 10;
 * @return {string}
 */
proto.profile.UpdateProfileReq.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, ""));
};


/** @param {string} value  */
proto.profile.UpdateProfileReq.prototype.setAccesstoken = function(value) {
  jspb.Message.setField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.profile.ProfileRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.profile.ProfileRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.profile.ProfileRes.displayName = 'proto.profile.ProfileRes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.profile.ProfileRes.prototype.toObject = function(opt_includeInstance) {
  return proto.profile.ProfileRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.profile.ProfileRes} msg The msg instance to transform.
 * @return {!Object}
 */
proto.profile.ProfileRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: msg.getStatus(),
    avatar: msg.getAvatar(),
    point: msg.getPoint(),
    name: msg.getName(),
    address: msg.getAddress(),
    birthday: msg.getBirthday(),
    email: msg.getEmail(),
    fb: msg.getFb(),
    workplace: msg.getWorkplace(),
    skill: msg.getSkill(),
    accesstoken: msg.getAccesstoken()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.profile.ProfileRes}
 */
proto.profile.ProfileRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.profile.ProfileRes;
  return proto.profile.ProfileRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.profile.ProfileRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.profile.ProfileRes}
 */
proto.profile.ProfileRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatar(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoint(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBirthday(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFb(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkplace(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSkill(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.profile.ProfileRes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.profile.ProfileRes.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.profile.ProfileRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.profile.ProfileRes.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getAvatar();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getPoint();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getBirthday();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getEmail();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getFb();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = this.getWorkplace();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = this.getSkill();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = this.getAccesstoken();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.profile.ProfileRes} The clone.
 */
proto.profile.ProfileRes.prototype.cloneMessage = function() {
  return /** @type {!proto.profile.ProfileRes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.profile.ProfileRes.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.profile.ProfileRes.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string avatar = 2;
 * @return {string}
 */
proto.profile.ProfileRes.prototype.getAvatar = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.profile.ProfileRes.prototype.setAvatar = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string point = 11;
 * @return {string}
 */
proto.profile.ProfileRes.prototype.getPoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, ""));
};


/** @param {string} value  */
proto.profile.ProfileRes.prototype.setPoint = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.profile.ProfileRes.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.profile.ProfileRes.prototype.setName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string address = 4;
 * @return {string}
 */
proto.profile.ProfileRes.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.profile.ProfileRes.prototype.setAddress = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string birthday = 5;
 * @return {string}
 */
proto.profile.ProfileRes.prototype.getBirthday = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.profile.ProfileRes.prototype.setBirthday = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string email = 6;
 * @return {string}
 */
proto.profile.ProfileRes.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.profile.ProfileRes.prototype.setEmail = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string fb = 7;
 * @return {string}
 */
proto.profile.ProfileRes.prototype.getFb = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.profile.ProfileRes.prototype.setFb = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string workplace = 8;
 * @return {string}
 */
proto.profile.ProfileRes.prototype.getWorkplace = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.profile.ProfileRes.prototype.setWorkplace = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional string skill = 9;
 * @return {string}
 */
proto.profile.ProfileRes.prototype.getSkill = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, ""));
};


/** @param {string} value  */
proto.profile.ProfileRes.prototype.setSkill = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional string accessToken = 10;
 * @return {string}
 */
proto.profile.ProfileRes.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, ""));
};


/** @param {string} value  */
proto.profile.ProfileRes.prototype.setAccesstoken = function(value) {
  jspb.Message.setField(this, 10, value);
};


goog.object.extend(exports, proto.profile);
