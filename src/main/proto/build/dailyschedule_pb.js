/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.dailyschedule.AddNewDailyScheduleReq', null, global);
goog.exportSymbol('proto.dailyschedule.DailyScheduleRes', null, global);
goog.exportSymbol('proto.dailyschedule.DeleteDailyScheduleReq', null, global);
goog.exportSymbol('proto.dailyschedule.GetAllDailyScheduleReq', null, global);
goog.exportSymbol('proto.dailyschedule.UpdateDailyScheduleReq', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dailyschedule.AddNewDailyScheduleReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dailyschedule.AddNewDailyScheduleReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dailyschedule.AddNewDailyScheduleReq.displayName = 'proto.dailyschedule.AddNewDailyScheduleReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.toObject = function(opt_includeInstance) {
  return proto.dailyschedule.AddNewDailyScheduleReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dailyschedule.AddNewDailyScheduleReq} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dailyschedule.AddNewDailyScheduleReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    requesterid: msg.getRequesterid(),
    projectid: msg.getProjectid(),
    title: msg.getTitle(),
    task: msg.getTask(),
    time: msg.getTime(),
    schedulestatus: msg.getSchedulestatus(),
    cookie: msg.getCookie()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dailyschedule.AddNewDailyScheduleReq}
 */
proto.dailyschedule.AddNewDailyScheduleReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dailyschedule.AddNewDailyScheduleReq;
  return proto.dailyschedule.AddNewDailyScheduleReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dailyschedule.AddNewDailyScheduleReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dailyschedule.AddNewDailyScheduleReq}
 */
proto.dailyschedule.AddNewDailyScheduleReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequesterid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTask(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchedulestatus(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCookie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dailyschedule.AddNewDailyScheduleReq} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dailyschedule.AddNewDailyScheduleReq.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRequesterid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getProjectid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getTask();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getTime();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getSchedulestatus();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getCookie();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dailyschedule.AddNewDailyScheduleReq} The clone.
 */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.cloneMessage = function() {
  return /** @type {!proto.dailyschedule.AddNewDailyScheduleReq} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string requesterId = 1;
 * @return {string}
 */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.getRequesterid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.setRequesterid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string projectId = 2;
 * @return {string}
 */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.getProjectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.setProjectid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string task = 4;
 * @return {string}
 */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.getTask = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.setTask = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string time = 5;
 * @return {string}
 */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.setTime = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string scheduleStatus = 6;
 * @return {string}
 */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.getSchedulestatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.setSchedulestatus = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string cookie = 8;
 * @return {string}
 */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.getCookie = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.dailyschedule.AddNewDailyScheduleReq.prototype.setCookie = function(value) {
  jspb.Message.setField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dailyschedule.UpdateDailyScheduleReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dailyschedule.UpdateDailyScheduleReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dailyschedule.UpdateDailyScheduleReq.displayName = 'proto.dailyschedule.UpdateDailyScheduleReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.toObject = function(opt_includeInstance) {
  return proto.dailyschedule.UpdateDailyScheduleReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dailyschedule.UpdateDailyScheduleReq} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dailyschedule.UpdateDailyScheduleReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    requesterid: msg.getRequesterid(),
    projectid: msg.getProjectid(),
    scheduleid: msg.getScheduleid(),
    title: msg.getTitle(),
    task: msg.getTask(),
    time: msg.getTime(),
    schedulestatus: msg.getSchedulestatus(),
    cookie: msg.getCookie()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dailyschedule.UpdateDailyScheduleReq}
 */
proto.dailyschedule.UpdateDailyScheduleReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dailyschedule.UpdateDailyScheduleReq;
  return proto.dailyschedule.UpdateDailyScheduleReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dailyschedule.UpdateDailyScheduleReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dailyschedule.UpdateDailyScheduleReq}
 */
proto.dailyschedule.UpdateDailyScheduleReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequesterid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScheduleid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTask(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchedulestatus(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCookie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dailyschedule.UpdateDailyScheduleReq} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dailyschedule.UpdateDailyScheduleReq.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRequesterid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getProjectid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getScheduleid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getTask();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getTime();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getSchedulestatus();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = this.getCookie();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dailyschedule.UpdateDailyScheduleReq} The clone.
 */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.cloneMessage = function() {
  return /** @type {!proto.dailyschedule.UpdateDailyScheduleReq} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string requesterId = 1;
 * @return {string}
 */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.getRequesterid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.setRequesterid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string projectId = 2;
 * @return {string}
 */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.getProjectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.setProjectid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string scheduleId = 3;
 * @return {string}
 */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.getScheduleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.setScheduleid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string task = 5;
 * @return {string}
 */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.getTask = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.setTask = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string time = 6;
 * @return {string}
 */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.setTime = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string scheduleStatus = 7;
 * @return {string}
 */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.getSchedulestatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.setSchedulestatus = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string cookie = 8;
 * @return {string}
 */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.getCookie = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.dailyschedule.UpdateDailyScheduleReq.prototype.setCookie = function(value) {
  jspb.Message.setField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dailyschedule.DeleteDailyScheduleReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dailyschedule.DeleteDailyScheduleReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dailyschedule.DeleteDailyScheduleReq.displayName = 'proto.dailyschedule.DeleteDailyScheduleReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dailyschedule.DeleteDailyScheduleReq.prototype.toObject = function(opt_includeInstance) {
  return proto.dailyschedule.DeleteDailyScheduleReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dailyschedule.DeleteDailyScheduleReq} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dailyschedule.DeleteDailyScheduleReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    requesterid: msg.getRequesterid(),
    projectid: msg.getProjectid(),
    scheduleid: msg.getScheduleid(),
    cookie: msg.getCookie()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dailyschedule.DeleteDailyScheduleReq}
 */
proto.dailyschedule.DeleteDailyScheduleReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dailyschedule.DeleteDailyScheduleReq;
  return proto.dailyschedule.DeleteDailyScheduleReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dailyschedule.DeleteDailyScheduleReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dailyschedule.DeleteDailyScheduleReq}
 */
proto.dailyschedule.DeleteDailyScheduleReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequesterid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScheduleid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCookie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dailyschedule.DeleteDailyScheduleReq} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dailyschedule.DeleteDailyScheduleReq.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dailyschedule.DeleteDailyScheduleReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dailyschedule.DeleteDailyScheduleReq.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRequesterid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getProjectid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getScheduleid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getCookie();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dailyschedule.DeleteDailyScheduleReq} The clone.
 */
proto.dailyschedule.DeleteDailyScheduleReq.prototype.cloneMessage = function() {
  return /** @type {!proto.dailyschedule.DeleteDailyScheduleReq} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string requesterId = 1;
 * @return {string}
 */
proto.dailyschedule.DeleteDailyScheduleReq.prototype.getRequesterid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dailyschedule.DeleteDailyScheduleReq.prototype.setRequesterid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string projectId = 2;
 * @return {string}
 */
proto.dailyschedule.DeleteDailyScheduleReq.prototype.getProjectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dailyschedule.DeleteDailyScheduleReq.prototype.setProjectid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string scheduleId = 3;
 * @return {string}
 */
proto.dailyschedule.DeleteDailyScheduleReq.prototype.getScheduleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.dailyschedule.DeleteDailyScheduleReq.prototype.setScheduleid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string cookie = 4;
 * @return {string}
 */
proto.dailyschedule.DeleteDailyScheduleReq.prototype.getCookie = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.dailyschedule.DeleteDailyScheduleReq.prototype.setCookie = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dailyschedule.GetAllDailyScheduleReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dailyschedule.GetAllDailyScheduleReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dailyschedule.GetAllDailyScheduleReq.displayName = 'proto.dailyschedule.GetAllDailyScheduleReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dailyschedule.GetAllDailyScheduleReq.prototype.toObject = function(opt_includeInstance) {
  return proto.dailyschedule.GetAllDailyScheduleReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dailyschedule.GetAllDailyScheduleReq} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dailyschedule.GetAllDailyScheduleReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    requesterid: msg.getRequesterid(),
    projectid: msg.getProjectid(),
    cookie: msg.getCookie()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dailyschedule.GetAllDailyScheduleReq}
 */
proto.dailyschedule.GetAllDailyScheduleReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dailyschedule.GetAllDailyScheduleReq;
  return proto.dailyschedule.GetAllDailyScheduleReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dailyschedule.GetAllDailyScheduleReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dailyschedule.GetAllDailyScheduleReq}
 */
proto.dailyschedule.GetAllDailyScheduleReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequesterid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCookie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dailyschedule.GetAllDailyScheduleReq} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dailyschedule.GetAllDailyScheduleReq.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dailyschedule.GetAllDailyScheduleReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dailyschedule.GetAllDailyScheduleReq.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRequesterid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getProjectid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getCookie();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dailyschedule.GetAllDailyScheduleReq} The clone.
 */
proto.dailyschedule.GetAllDailyScheduleReq.prototype.cloneMessage = function() {
  return /** @type {!proto.dailyschedule.GetAllDailyScheduleReq} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string requesterId = 1;
 * @return {string}
 */
proto.dailyschedule.GetAllDailyScheduleReq.prototype.getRequesterid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dailyschedule.GetAllDailyScheduleReq.prototype.setRequesterid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string projectId = 2;
 * @return {string}
 */
proto.dailyschedule.GetAllDailyScheduleReq.prototype.getProjectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dailyschedule.GetAllDailyScheduleReq.prototype.setProjectid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string cookie = 3;
 * @return {string}
 */
proto.dailyschedule.GetAllDailyScheduleReq.prototype.getCookie = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.dailyschedule.GetAllDailyScheduleReq.prototype.setCookie = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dailyschedule.DailyScheduleRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dailyschedule.DailyScheduleRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dailyschedule.DailyScheduleRes.displayName = 'proto.dailyschedule.DailyScheduleRes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dailyschedule.DailyScheduleRes.prototype.toObject = function(opt_includeInstance) {
  return proto.dailyschedule.DailyScheduleRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dailyschedule.DailyScheduleRes} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dailyschedule.DailyScheduleRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: msg.getError(),
    status: msg.getStatus(),
    scheduleid: msg.getScheduleid(),
    title: msg.getTitle(),
    task: msg.getTask(),
    time: msg.getTime(),
    note: msg.getNote(),
    schedulestatus: msg.getSchedulestatus()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dailyschedule.DailyScheduleRes}
 */
proto.dailyschedule.DailyScheduleRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dailyschedule.DailyScheduleRes;
  return proto.dailyschedule.DailyScheduleRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dailyschedule.DailyScheduleRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dailyschedule.DailyScheduleRes}
 */
proto.dailyschedule.DailyScheduleRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScheduleid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTask(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchedulestatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dailyschedule.DailyScheduleRes} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dailyschedule.DailyScheduleRes.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dailyschedule.DailyScheduleRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dailyschedule.DailyScheduleRes.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getScheduleid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getTask();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getTime();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = this.getNote();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = this.getSchedulestatus();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dailyschedule.DailyScheduleRes} The clone.
 */
proto.dailyschedule.DailyScheduleRes.prototype.cloneMessage = function() {
  return /** @type {!proto.dailyschedule.DailyScheduleRes} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.dailyschedule.DailyScheduleRes.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dailyschedule.DailyScheduleRes.prototype.setError = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.dailyschedule.DailyScheduleRes.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dailyschedule.DailyScheduleRes.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string scheduleId = 3;
 * @return {string}
 */
proto.dailyschedule.DailyScheduleRes.prototype.getScheduleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.dailyschedule.DailyScheduleRes.prototype.setScheduleid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.dailyschedule.DailyScheduleRes.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.dailyschedule.DailyScheduleRes.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string task = 5;
 * @return {string}
 */
proto.dailyschedule.DailyScheduleRes.prototype.getTask = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.dailyschedule.DailyScheduleRes.prototype.setTask = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string time = 7;
 * @return {string}
 */
proto.dailyschedule.DailyScheduleRes.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.dailyschedule.DailyScheduleRes.prototype.setTime = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string note = 8;
 * @return {string}
 */
proto.dailyschedule.DailyScheduleRes.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.dailyschedule.DailyScheduleRes.prototype.setNote = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional string scheduleStatus = 9;
 * @return {string}
 */
proto.dailyschedule.DailyScheduleRes.prototype.getSchedulestatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, ""));
};


/** @param {string} value  */
proto.dailyschedule.DailyScheduleRes.prototype.setSchedulestatus = function(value) {
  jspb.Message.setField(this, 9, value);
};


goog.object.extend(exports, proto.dailyschedule);
