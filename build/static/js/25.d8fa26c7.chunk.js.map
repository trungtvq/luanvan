{"version":3,"sources":["../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/inheritsLoose.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardHeader.js","gRPC/productbacklog/productbacklog_grpc_web_pb.js","gRPC/productbacklog/productbacklog_pb.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","views/Workspace/Po/Cover/Cover.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","noGutters","a","bool","className","string","cssModule","object","form","Row","props","Tag","attributes","Object","classes","createElement","defaultProps","__webpack_exports__","inverse","color","block","body","outline","innerRef","oneOfType","func","Card","ref","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","d","module","exports","source","excluded","key","target","sourceKeys","keys","indexOf","subClass","superClass","create","constructor","__proto__","CardBody","CardHeader","grpc","web","require","proto","productbacklog","ProductBacklogClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","credentials_","options_","ProductBacklogPromiseClient","methodInfo_ProductBacklog_addNewProductBacklog","AbstractClientBase","MethodInfo","ProductBacklogRes","request","serializeBinary","deserializeBinary","addNewProductBacklog","metadata","callback","rpcCall","unaryCall","methodInfo_ProductBacklog_updateProductBacklog","updateProductBacklog","methodInfo_ProductBacklog_deleteProductBacklog","deleteProductBacklog","methodInfo_ProductBacklog_sendToSprintBacklog","sendToSprintBacklog","methodInfo_ProductBacklog_sendToUserStory","sendToUserStory","methodInfo_ProductBacklog_getAllProductBacklog","GetAllProductBacklogRes","getAllProductBacklog","serverStreaming","jspb","goog","global","Function","exportSymbol","AddNewProductBacklogReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","role","getRole","want","getWant","so","getSo","statusbacklog","getStatusbacklog","priority","getPriority","estimation","getEstimation","sprintid","getSprintid","accesstoken","getAccesstoken","title","getTitle","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setRequesterid","setProjectid","setRole","setWant","setSo","setStatusbacklog","setPriority","setEstimation","setSprintid","setAccesstoken","setTitle","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","writeString","cloneMessage","getFieldProto3","setField","error","getError","status","getStatus","productbacklogid","getProductbacklogid","setError","setStatus","setProductbacklogid","UpdateProductBacklogReq","sprint","getSprint","setSprint","DeleteProductBacklogReq","SendToSprintBacklogReq","start","getStart","deadline","getDeadline","teamid","getTeamid","setStart","setDeadline","setTeamid","GetAllProductBacklogReq","extend","_extends","assign","arguments","hasOwnProperty","apply","defineProperty","enumerable","configurable","writable","self","ReferenceError","userstory","Cover","_this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","onTextboxChangePriorityUserstory","event","tmpdata","state","dataUserStory","map","p","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","setState","prevState","onTextboxChangeEstimationUserstory","onTextboxChangeSprintUserstory","onTextboxChangePriorityProductBacklog","dataProductBacklog","onTextboxChangeEstimationProductBacklog","onTextboxChangeSprintProductBacklog","loadUserstory","userstoryService","UserStoryClient","GetAllUserStoryReq","getFromStorage","response","getAllUserStory","that","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","on","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","id","getId","getName","as","code","console","log","end","loadProductbacklog","productbacklogService","toggleActionStatus","modalActionStatus","handleStoryToBacklog","item","SendToProductBacklogReq","setId","sendToProductBacklog","err","filter","e","actionStatus","priorityUserstory","estimationUserstory","sprintUserstory","handleBacklogToStory","priorityProductBacklog","estimationProductBacklog","sprintProductBacklog","react__WEBPACK_IMPORTED_MODULE_9___default","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","size","isOpen","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","class","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","htmlFor","reactstrap__WEBPACK_IMPORTED_MODULE_18__","type","name","rows","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_19__","align","onClick","Component"],"mappings":"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","file":"static/js/25.d8fa26c7.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","/**\n * @fileoverview gRPC-Web generated client stub for productbacklog\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.productbacklog = require('./productbacklog_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.productbacklog.ProductBacklogClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.productbacklog.ProductBacklogPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.AddNewProductBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_addNewProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.AddNewProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.AddNewProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.addNewProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/addNewProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_addNewProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.AddNewProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.addNewProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/addNewProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_addNewProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.UpdateProductBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_updateProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.UpdateProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.UpdateProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.updateProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/updateProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_updateProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.UpdateProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.updateProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/updateProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_updateProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.DeleteProductBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_deleteProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.DeleteProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.DeleteProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.deleteProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/deleteProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_deleteProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.DeleteProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.deleteProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/deleteProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_deleteProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.SendToSprintBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_sendToSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.SendToSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.SendToSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.sendToSprintBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/sendToSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_sendToSprintBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.SendToSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.sendToSprintBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/sendToSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_sendToSprintBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.SendToSprintBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_sendToUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.SendToSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.SendToSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.sendToUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/sendToUserStory',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_sendToUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.SendToSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.sendToUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/sendToUserStory',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_sendToUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.GetAllProductBacklogReq,\n *   !proto.productbacklog.GetAllProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_getAllProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.GetAllProductBacklogRes,\n  /** @param {!proto.productbacklog.GetAllProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.GetAllProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.GetAllProductBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.GetAllProductBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.getAllProductBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/productbacklog.ProductBacklog/getAllProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_getAllProductBacklog);\n};\n\n\n/**\n * @param {!proto.productbacklog.GetAllProductBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.GetAllProductBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.getAllProductBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/productbacklog.ProductBacklog/getAllProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_getAllProductBacklog);\n};\n\n\nmodule.exports = proto.productbacklog;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.productbacklog.AddNewProductBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.DeleteProductBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.GetAllProductBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.GetAllProductBacklogRes', null, global);\ngoog.exportSymbol('proto.productbacklog.ProductBacklogRes', null, global);\ngoog.exportSymbol('proto.productbacklog.SendToSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.UpdateProductBacklogReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.AddNewProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.AddNewProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.AddNewProductBacklogReq.displayName = 'proto.productbacklog.AddNewProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.AddNewProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.AddNewProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.AddNewProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    accesstoken: msg.getAccesstoken(),\n    title: msg.getTitle()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.AddNewProductBacklogReq}\n */\nproto.productbacklog.AddNewProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.AddNewProductBacklogReq;\n  return proto.productbacklog.AddNewProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.AddNewProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.AddNewProductBacklogReq}\n */\nproto.productbacklog.AddNewProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.AddNewProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.AddNewProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.AddNewProductBacklogReq} The clone.\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.AddNewProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 6;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string priority = 7;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string estimation = 8;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string sprintId = 9;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string accessToken = 10;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string title = 11;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.ProductBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.ProductBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.ProductBacklogRes.displayName = 'proto.productbacklog.ProductBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.ProductBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.ProductBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.ProductBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.ProductBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    error: msg.getError(),\n    status: msg.getStatus(),\n    productbacklogid: msg.getProductbacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.ProductBacklogRes}\n */\nproto.productbacklog.ProductBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.ProductBacklogRes;\n  return proto.productbacklog.ProductBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.ProductBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.ProductBacklogRes}\n */\nproto.productbacklog.ProductBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.ProductBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.ProductBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.ProductBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.ProductBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.ProductBacklogRes} The clone.\n */\nproto.productbacklog.ProductBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.ProductBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string error = 1;\n * @return {string}\n */\nproto.productbacklog.ProductBacklogRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.ProductBacklogRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string status = 2;\n * @return {string}\n */\nproto.productbacklog.ProductBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.ProductBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.ProductBacklogRes.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.ProductBacklogRes.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.UpdateProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.UpdateProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.UpdateProductBacklogReq.displayName = 'proto.productbacklog.UpdateProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.UpdateProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.UpdateProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.UpdateProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    productbacklogid: msg.getProductbacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprint: msg.getSprint(),\n    accesstoken: msg.getAccesstoken(),\n    title: msg.getTitle(),\n    sprintid: msg.getSprintid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.UpdateProductBacklogReq}\n */\nproto.productbacklog.UpdateProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.UpdateProductBacklogReq;\n  return proto.productbacklog.UpdateProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.UpdateProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.UpdateProductBacklogReq}\n */\nproto.productbacklog.UpdateProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprint(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.UpdateProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.UpdateProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getSprint();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.UpdateProductBacklogReq} The clone.\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.UpdateProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string role = 4;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string want = 5;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string so = 6;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string statusBacklog = 7;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string priority = 8;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string estimation = 9;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string sprint = 10;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getSprint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setSprint = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string accessToken = 11;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string title = 12;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string sprintId = 13;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.DeleteProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.DeleteProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.DeleteProductBacklogReq.displayName = 'proto.productbacklog.DeleteProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.DeleteProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.DeleteProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.DeleteProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    productbacklogid: msg.getProductbacklogid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.DeleteProductBacklogReq}\n */\nproto.productbacklog.DeleteProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.DeleteProductBacklogReq;\n  return proto.productbacklog.DeleteProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.DeleteProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.DeleteProductBacklogReq}\n */\nproto.productbacklog.DeleteProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.DeleteProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.DeleteProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.DeleteProductBacklogReq} The clone.\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.DeleteProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.SendToSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.SendToSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.SendToSprintBacklogReq.displayName = 'proto.productbacklog.SendToSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.SendToSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.SendToSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.SendToSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    productbacklogid: msg.getProductbacklogid(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.SendToSprintBacklogReq}\n */\nproto.productbacklog.SendToSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.SendToSprintBacklogReq;\n  return proto.productbacklog.SendToSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.SendToSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.SendToSprintBacklogReq}\n */\nproto.productbacklog.SendToSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.SendToSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.SendToSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.SendToSprintBacklogReq} The clone.\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.SendToSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string start = 4;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string deadline = 5;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string accessToken = 6;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string teamId = 7;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.GetAllProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.GetAllProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.GetAllProductBacklogReq.displayName = 'proto.productbacklog.GetAllProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.GetAllProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.GetAllProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.GetAllProductBacklogReq}\n */\nproto.productbacklog.GetAllProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.GetAllProductBacklogReq;\n  return proto.productbacklog.GetAllProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.GetAllProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.GetAllProductBacklogReq}\n */\nproto.productbacklog.GetAllProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.GetAllProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.GetAllProductBacklogReq} The clone.\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.GetAllProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.GetAllProductBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.GetAllProductBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.GetAllProductBacklogRes.displayName = 'proto.productbacklog.GetAllProductBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.GetAllProductBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.GetAllProductBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    productbacklogid: msg.getProductbacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    status: msg.getStatus(),\n    error: msg.getError(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    title: msg.getTitle()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.GetAllProductBacklogRes}\n */\nproto.productbacklog.GetAllProductBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.GetAllProductBacklogRes;\n  return proto.productbacklog.GetAllProductBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.GetAllProductBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.GetAllProductBacklogRes}\n */\nproto.productbacklog.GetAllProductBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.GetAllProductBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.GetAllProductBacklogRes} The clone.\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.GetAllProductBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string productBacklogId = 2;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 11;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string status = 9;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string error = 1;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string priority = 6;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string estimation = 7;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string sprintId = 8;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string title = 10;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\ngoog.object.extend(exports, proto.productbacklog);\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","import {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../../../../service/storage'\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Row,\r\n  Table,\r\n  Pagination,\r\n  PaginationItem,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Progress,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  PaginationLink,\r\n} from 'reactstrap';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport cookie from 'react-cookies';\r\nconst proto = {};\r\nproto.userstory = require('../../../../gRPC/userstory/userstory_grpc_web_pb');\r\nproto.productbacklog = require('../../../../gRPC/productbacklog/productbacklog_grpc_web_pb');\r\n\r\nclass Cover extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataUserStory: [],\r\n      dataProductBacklog: [],\r\n      actionStatus: '',    //success or fail when action handleSave\r\n      modalActionStatus: false,\r\n\r\n      priorityUserstory: '',\r\n      estimationUserstory: '',\r\n      sprintUserstory: '',\r\n\r\n      priorityProductBacklog: '',\r\n      estimationProductBacklog: '',\r\n      sprintProductBacklog: '',\r\n\r\n      title: '',\r\n    }\r\n  };\r\n  //userstory\r\n  onTextboxChangePriorityUserstory = (event, title) => {\r\n    const tmpdata = this.state.dataUserStory.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, priority: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataUserStory: tmpdata,\r\n    }));\r\n  }\r\n  onTextboxChangeEstimationUserstory = (event, title) => {\r\n    const tmpdata = this.state.dataUserStory.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, estimation: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataUserStory: tmpdata,\r\n    }));\r\n  }\r\n  onTextboxChangeSprintUserstory = (event, title) => {\r\n    const tmpdata = this.state.dataUserStory.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, sprint: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataUserStory: tmpdata,\r\n    }));\r\n  }\r\n  //ProductBacklog\r\n  onTextboxChangePriorityProductBacklog = (event, title) => {\r\n    const tmpdata = this.state.dataProductBacklog.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, priority: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataProductBacklog: tmpdata,\r\n\r\n    }));\r\n  }\r\n  onTextboxChangeEstimationProductBacklog = (event, title) => {\r\n    const tmpdata = this.state.dataProductBacklog.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, estimation: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataProductBacklog: tmpdata,\r\n\r\n    }));\r\n  }\r\n  onTextboxChangeSprintProductBacklog = (event, title) => {\r\n    const tmpdata = this.state.dataProductBacklog.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, sprint: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataProductBacklog: tmpdata,\r\n\r\n    }));\r\n  }\r\n  loadUserstory = () => {\r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    var GetAllUserStoryReq = new proto.userstory.GetAllUserStoryReq();\r\n    GetAllUserStoryReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllUserStoryReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllUserStoryReq.setProjectid(getFromStorage(\"currentProject\"));\r\n\r\n    var response = userstoryService.getAllUserStory(GetAllUserStoryReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.setState(prevState => ({\r\n          dataUserStory: [...prevState.dataUserStory,\r\n          {\r\n            id: response.getId(),\r\n            title: response.getName(),\r\n            as: response.getRole(),\r\n            want: response.getWant(),\r\n            so: response.getSo()\r\n          }]\r\n        }));\r\n\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n  }\r\n  loadProductbacklog = () => {\r\n    //load productbacklog\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n    var GetAllProductBacklogReq = new proto.productbacklog.GetAllProductBacklogReq();\r\n    GetAllProductBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllProductBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllProductBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    let metadata = {}\r\n    var response = productbacklogService.getAllProductBacklog(GetAllProductBacklogReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.setState(prevState => ({\r\n          dataProductBacklog: [...prevState.dataProductBacklog,\r\n          {\r\n            id: response.getProductbacklogid(),\r\n            title: response.getTitle(),\r\n            as: response.getRole(),\r\n            want: response.getWant(),\r\n            so: response.getSo(),\r\n            priority: response.getPriority(),\r\n            estimation: response.getEstimation(),\r\n            sprint: response.getSprintid(),\r\n            status: response.getStatusbacklog()\r\n          }]\r\n        }));\r\n\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.loadUserstory();\r\n    this.loadProductbacklog();\r\n  }\r\n  toggleActionStatus = () => {\r\n    this.setState(prevState => ({\r\n      modalActionStatus: !prevState.modalActionStatus\r\n    }));\r\n  }\r\n\r\n\r\n  handleStoryToBacklog = (item) => {\r\n\r\n    //query \r\n\r\n\r\n    console.log(\"handleUpdate\")\r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var SendToProductBacklogReq = new proto.userstory.SendToProductBacklogReq();\r\n    SendToProductBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    SendToProductBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    SendToProductBacklogReq.setId(item.id);\r\n    SendToProductBacklogReq.setPriority(item.priority);\r\n    SendToProductBacklogReq.setEstimation(item.estimation);\r\n    SendToProductBacklogReq.setStatusbacklog(item.status);\r\n    SendToProductBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    SendToProductBacklogReq.setSprint(item.sprint);\r\n\r\n    userstoryService.sendToProductBacklog(SendToProductBacklogReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n\r\n          this.setState(prevState => ({\r\n            dataUserStory: [...prevState.dataUserStory.filter(function (e) { return e.id != item.id; })],\r\n            dataProductBacklog: [...prevState.dataProductBacklog, { id: item.id, title: item.title, as: item.as, want: item.want, so: item.so, priority: item.priority, estimation: item.estimation, sprint: item.sprint }]\r\n          }));\r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'SUCCESS',\r\n            priorityUserstory: '',\r\n            estimationUserstory: '',\r\n            sprintUserstory: '',\r\n          });\r\n        \r\n        } else {\r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'FAIL',\r\n          });\r\n\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  handleBacklogToStory = (item) => {\r\n\r\n\r\n\r\n    //query\r\n\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    console.log(\"so\" + this.state.so)\r\n    var SendToSprintBacklogReq = new proto.productbacklog.SendToSprintBacklogReq();\r\n    SendToSprintBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    SendToSprintBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    SendToSprintBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    SendToSprintBacklogReq.setProductbacklogid(item.id);\r\n    productbacklogService.sendToUserStory(SendToSprintBacklogReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n\r\n          this.setState(prevState => ({\r\n            dataProductBacklog:\r\n              [...prevState.dataProductBacklog.filter(function (e) { return e.id != item.id; })],\r\n            dataUserStory:\r\n              [...prevState.dataUserStory,\r\n              {\r\n                id: item.id,\r\n                title: item.title,\r\n                as: item.as,\r\n                want: item.want,\r\n                so: item.so,\r\n                priority: '',\r\n                estimation: '', sprint: ''\r\n              }]\r\n          })); \r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'SUCCESS',\r\n          });\r\n        \r\n        } else {\r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'FAIL',\r\n          });\r\n\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n    let that = this;\r\n    return (\r\n      <Row>\r\n        <Modal size=\"sm\" isOpen={that.state.modalActionStatus} toggle={that.toggleActionStatus} className={that.props.className}>\r\n          <ModalBody>\r\n            <center><h4>{that.state.actionStatus}</h4></center>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Col>\r\n          <Row>\r\n            <Col>\r\n              <div class=\"card border-primary mb-3\">\r\n                <div class=\"card-header bg-primary\">USER STORY</div>\r\n                <div class=\"card-body\">\r\n                  {this.state.dataUserStory.map(function (item, key) {\r\n                    return (\r\n                      <Card>\r\n                        <CardHeader>\r\n                          <i className=\"\"></i><strong>As: {item.as}</strong>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                          <h6>I want: {item.want}</h6>\r\n                          <h6>So that:  {item.so}</h6>\r\n                          <div class=\"row\">\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Label htmlFor=\"text-input\">Priority</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.priority} onChange={e => { that.onTextboxChangePriorityUserstory(e, item.title) }} />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Label htmlFor=\"text-input\">Estimation</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.estimation} onChange={e => { that.onTextboxChangeEstimationUserstory(e, item.title) }} />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div class=\"col col-lg-1 col-md-1 col-sm-1\">\r\n                              <Label htmlFor=\"text-input\">Sprint</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.sprint} onChange={e => { that.onTextboxChangeSprintUserstory(e, item.title) }} />\r\n                            </div>\r\n                          </div>\r\n                          <Button size=\"sm\" color=\"success\" align=\"center\" onClick={() => { that.handleStoryToBacklog(item) }}><i class=\"fa fa-arrow-right\"></i></Button>\r\n                        </CardBody>\r\n                      </Card>\r\n                    )\r\n                  })}\r\n\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col>\r\n              <div class=\"card border-primary mb-3\">\r\n                <div class=\"card-header bg-primary\">\r\n                  PRODUCT BACKLOG\r\n                  </div>\r\n                <div class=\"card-body\">\r\n                  {this.state.dataProductBacklog.map(function (item, key) {\r\n                    return (\r\n                      <Card>\r\n                        <CardHeader>\r\n                          <i className=\"\"></i><strong>As {item.as}</strong>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                          <h6>I want :  {item.want}</h6>\r\n                          <h6> So that:   {item.so}</h6>\r\n\r\n                          <div class=\"row\">\r\n\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Label htmlFor=\"text-input\">Priority</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.priority} onChange={e => { that.onTextboxChangePriorityProductBacklog(e, item.title) }} />\r\n                            </div>\r\n\r\n\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Label htmlFor=\"text-input\">Estimation</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.estimation} onChange={e => { that.onTextboxChangeEstimationProductBacklog(e, item.title) }} />\r\n                            </div>\r\n\r\n\r\n                            <div class=\"col col-lg-1 col-md-1 col-sm-1\">\r\n                              <Label htmlFor=\"text-input\">Sprint</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.sprint} onChange={e => { that.onTextboxChangeSprintProductBacklog(e, item.title) }} />\r\n                            </div>\r\n\r\n                          </div>\r\n                          <Button size=\"sm\" color=\"success\" align=\"center\" onClick={() => { that.handleBacklogToStory(item) }}><i class=\"fa fa-arrow-left\"></i></Button>\r\n                        </CardBody>\r\n                      </Card>\r\n                    )\r\n                  })}\r\n\r\n\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cover;\r\n"],"sourceRoot":""}