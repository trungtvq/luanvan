{"version":3,"sources":["../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/reactstrap/es/ModalHeader.js","../node_modules/reactstrap/es/ModalFooter.js","gRPC/teamtask/teamtask_grpc_web_pb.js","gRPC/teamtask/teamtask_pb.js","views/Workspace/Member/TeamTask/TeamTask.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","n","prop_types__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_5___default","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","_utils__WEBPACK_IMPORTED_MODULE_7__","propTypes","children","a","node","inline","bool","tag","innerRef","oneOfType","object","func","string","className","cssModule","Form","_Component","props","_this","call","this","getRef","bind","Object","submit","_proto","prototype","ref","render","_this$props","Tag","attributes","classes","createElement","defaultProps","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","row","check","disabled","FormGroup","wrapTag","toggle","closeAriaLabel","charCode","number","close","ModalHeader","closeButton","WrapTag","closeIcon","String","fromCharCode","type","onClick","aria-label","aria-hidden","ModalFooter","grpc","web","require","proto","teamtask","TeamTaskClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","TeamTaskPromiseClient","methodInfo_TeamTask_addNewTeamTask","AbstractClientBase","MethodInfo","TeamTaskRes","request","serializeBinary","deserializeBinary","addNewTeamTask","metadata","callback","rpcCall","unaryCall","methodInfo_TeamTask_updateTeamTask","updateTeamTask","methodInfo_TeamTask_registerTeamTask","registerTeamTask","methodInfo_TeamTask_cancelTeamTask","cancelTeamTask","methodInfo_TeamTask_getAllTeamTask","GetAllTeamTaskRes","getAllTeamTask","serverStreaming","module","exports","jspb","goog","global","Function","exportSymbol","AddNewTeamTaskReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","title","getTitle","description","getDescription","priority","getPriority","start","getStart","deadline","getDeadline","assigneearray","getAssigneearray","comment","getComment","status","getStatus","review","getReview","accesstoken","getAccesstoken","sprintid","getSprintid","teamid","getTeamid","sprintbacklogid","getSprintbacklogid","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setRequesterid","setProjectid","setTitle","setDescription","setPriority","setStart","setDeadline","setAssigneearray","setComment","setStatus","setReview","setAccesstoken","setSprintid","setTeamid","setSprintbacklogid","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","length","writeString","cloneMessage","getFieldProto3","setField","teamtaskid","getTeamtaskid","setTeamtaskid","UpdateTeamTaskReq","RegisterTeamTaskReq","assigner","getAssigner","setAssigner","CancelTeamTaskReq","GetAllTeamTaskReq","statusteamtask","getStatusteamtask","setStatusteamtask","extend","sprintbacklog","TeamTask","_this$state","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","toastId","notify","toast","autoClose","success","update","TYPE","SUCCESS","failed","ERROR","onChangeStartDate","date","setState","startDate","onChangeEndDate","endDate","collapse","state","toggleAdd","prevState","modalAdd","toggleAddOpen","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","assignee","updateId","toggleEdit","modalEdit","toggleEditOpen","event","currentTarget","dataset","id","sprintBacklog","onTextboxChangeTitle","target","onTextboxChangeDescription","onTextboxChangePriority","onTextboxChangeSprintBacklog","onTextboxChangeSprint","sprint","console","log","sprintbacklogs","onTextboxChangeAssignee","onTextboxChangeComment","onTextboxChangeReview","onTextboxChangeStatus","loadAllSprint","sprintbacklogService","SprintBacklogClient","GetAllSprintBacklogReq","getFromStorage","sprints","response","getAllSprintBacklog","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","on","arr","split","end","parseInt","push","getBacklogid","role","getRole","want","getWant","so","getSo","estimation","getEstimation","getStatusbacklog","code","setInStorage","loadAllTask","setDate","getDate","d","getMinutes","getHours","getMonth","getFullYear","teamtaskService","that","str","slice","data","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","handleAdd","handleDelete","err","newData","filter","p","handleAssignToMe","map","assign","handleUpdate","fadeIn","Date","react__WEBPACK_IMPORTED_MODULE_8___default","_service_chat__WEBPACK_IMPORTED_MODULE_23__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","xs","md","reactstrap__WEBPACK_IMPORTED_MODULE_11__","name","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_12__","size","color","class","reactstrap__WEBPACK_IMPORTED_MODULE_13__","buttonLabel","reactstrap__WEBPACK_IMPORTED_MODULE_14__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_19__","htmlFor","onChange","rows","num","disable","react_datepicker__WEBPACK_IMPORTED_MODULE_24__","selected","timeInputLabel","dateFormat","showTimeInput","mem","username","reactstrap__WEBPACK_IMPORTED_MODULE_20__","item","key","data-id","data-title","data-description","data-priority","data-start","data-deadline","data-assignee","data-comment","data-status","data-review","data-sprintbacklog","S","action","Component","connect","changeStatusProject","currentProject","projectId"],"mappings":"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","file":"static/js/30.9a985262.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  charCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  close: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'h5',\n  wrapTag: 'div',\n  closeAriaLabel: 'Close',\n  charCode: 215\n};\n\nvar ModalHeader = function ModalHeader(props) {\n  var closeButton;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      toggle = props.toggle,\n      Tag = props.tag,\n      WrapTag = props.wrapTag,\n      closeAriaLabel = props.closeAriaLabel,\n      charCode = props.charCode,\n      close = props.close,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"charCode\", \"close\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-header'), cssModule);\n\n  if (!close && toggle) {\n    var closeIcon = typeof charCode === 'number' ? String.fromCharCode(charCode) : charCode;\n    closeButton = React.createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('close', cssModule),\n      \"aria-label\": closeAriaLabel\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, closeIcon));\n  }\n\n  return React.createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), React.createElement(Tag, {\n    className: mapToCssModules('modal-title', cssModule)\n  }, children), close || closeButton);\n};\n\nModalHeader.propTypes = propTypes;\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar ModalFooter = function ModalFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-footer'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nModalFooter.propTypes = propTypes;\nModalFooter.defaultProps = defaultProps;\nexport default ModalFooter;","/**\n * @fileoverview gRPC-Web generated client stub for teamtask\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.teamtask = require('./teamtask_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.teamtask.TeamTaskClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.teamtask.TeamTaskPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.AddNewTeamTaskReq,\n *   !proto.teamtask.TeamTaskRes>}\n */\nconst methodInfo_TeamTask_addNewTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamTaskRes,\n  /** @param {!proto.teamtask.AddNewTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.AddNewTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.addNewTeamTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.TeamTask/addNewTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_addNewTeamTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.AddNewTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.addNewTeamTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.TeamTask/addNewTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_addNewTeamTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.UpdateTeamTaskReq,\n *   !proto.teamtask.TeamTaskRes>}\n */\nconst methodInfo_TeamTask_updateTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamTaskRes,\n  /** @param {!proto.teamtask.UpdateTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.UpdateTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.updateTeamTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.TeamTask/updateTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_updateTeamTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.UpdateTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.updateTeamTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.TeamTask/updateTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_updateTeamTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.RegisterTeamTaskReq,\n *   !proto.teamtask.TeamTaskRes>}\n */\nconst methodInfo_TeamTask_registerTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamTaskRes,\n  /** @param {!proto.teamtask.RegisterTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.RegisterTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.registerTeamTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.TeamTask/registerTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_registerTeamTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.RegisterTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.registerTeamTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.TeamTask/registerTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_registerTeamTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.CancelTeamTaskReq,\n *   !proto.teamtask.TeamTaskRes>}\n */\nconst methodInfo_TeamTask_cancelTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamTaskRes,\n  /** @param {!proto.teamtask.CancelTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.CancelTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.cancelTeamTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.TeamTask/cancelTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_cancelTeamTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.CancelTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.cancelTeamTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.TeamTask/cancelTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_cancelTeamTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.GetAllTeamTaskReq,\n *   !proto.teamtask.GetAllTeamTaskRes>}\n */\nconst methodInfo_TeamTask_getAllTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.GetAllTeamTaskRes,\n  /** @param {!proto.teamtask.GetAllTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.GetAllTeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.GetAllTeamTaskReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.GetAllTeamTaskRes>}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.getAllTeamTask =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/teamtask.TeamTask/getAllTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_getAllTeamTask);\n};\n\n\n/**\n * @param {!proto.teamtask.GetAllTeamTaskReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.GetAllTeamTaskRes>}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.getAllTeamTask =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/teamtask.TeamTask/getAllTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_getAllTeamTask);\n};\n\n\nmodule.exports = proto.teamtask;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.teamtask.AddNewTeamTaskReq', null, global);\ngoog.exportSymbol('proto.teamtask.CancelTeamTaskReq', null, global);\ngoog.exportSymbol('proto.teamtask.GetAllTeamTaskReq', null, global);\ngoog.exportSymbol('proto.teamtask.GetAllTeamTaskRes', null, global);\ngoog.exportSymbol('proto.teamtask.RegisterTeamTaskReq', null, global);\ngoog.exportSymbol('proto.teamtask.TeamTaskRes', null, global);\ngoog.exportSymbol('proto.teamtask.UpdateTeamTaskReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.AddNewTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.AddNewTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.AddNewTeamTaskReq.displayName = 'proto.teamtask.AddNewTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.AddNewTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.AddNewTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.AddNewTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    title: msg.getTitle(),\n    description: msg.getDescription(),\n    priority: msg.getPriority(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    assigneearray: msg.getAssigneearray(),\n    comment: msg.getComment(),\n    status: msg.getStatus(),\n    review: msg.getReview(),\n    accesstoken: msg.getAccesstoken(),\n    sprintid: msg.getSprintid(),\n    teamid: msg.getTeamid(),\n    sprintbacklogid: msg.getSprintbacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.AddNewTeamTaskReq}\n */\nproto.teamtask.AddNewTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.AddNewTeamTaskReq;\n  return proto.teamtask.AddNewTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.AddNewTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.AddNewTeamTaskReq}\n */\nproto.teamtask.AddNewTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssigneearray(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setComment(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReview(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 15:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintbacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.AddNewTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.AddNewTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getAssigneearray();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getComment();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getReview();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getSprintbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      15,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.AddNewTeamTaskReq} The clone.\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.AddNewTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string title = 3;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string description = 4;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string priority = 5;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string start = 6;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string deadline = 7;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string assigneeArray = 8;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getAssigneearray = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setAssigneearray = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string comment = 9;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getComment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setComment = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string status = 10;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string review = 11;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getReview = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setReview = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string accessToken = 12;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string sprintId = 14;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 14, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string sprintBacklogId = 15;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getSprintbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 15, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setSprintbacklogid = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.TeamTaskRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.TeamTaskRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.TeamTaskRes.displayName = 'proto.teamtask.TeamTaskRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.TeamTaskRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.TeamTaskRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.TeamTaskRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.TeamTaskRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    teamtaskid: msg.getTeamtaskid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.TeamTaskRes}\n */\nproto.teamtask.TeamTaskRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.TeamTaskRes;\n  return proto.teamtask.TeamTaskRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.TeamTaskRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.TeamTaskRes}\n */\nproto.teamtask.TeamTaskRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.TeamTaskRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.TeamTaskRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.TeamTaskRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.TeamTaskRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.TeamTaskRes} The clone.\n */\nproto.teamtask.TeamTaskRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.TeamTaskRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.teamtask.TeamTaskRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamTaskRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamTaskId = 2;\n * @return {string}\n */\nproto.teamtask.TeamTaskRes.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamTaskRes.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.UpdateTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.UpdateTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.UpdateTeamTaskReq.displayName = 'proto.teamtask.UpdateTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.UpdateTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.UpdateTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.UpdateTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamtaskid: msg.getTeamtaskid(),\n    title: msg.getTitle(),\n    description: msg.getDescription(),\n    priority: msg.getPriority(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    assigneearray: msg.getAssigneearray(),\n    comment: msg.getComment(),\n    status: msg.getStatus(),\n    review: msg.getReview(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid(),\n    sprintid: msg.getSprintid(),\n    sprintbacklogid: msg.getSprintbacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.UpdateTeamTaskReq}\n */\nproto.teamtask.UpdateTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.UpdateTeamTaskReq;\n  return proto.teamtask.UpdateTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.UpdateTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.UpdateTeamTaskReq}\n */\nproto.teamtask.UpdateTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssigneearray(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setComment(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReview(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 15:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 16:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintbacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.UpdateTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.UpdateTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getAssigneearray();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getComment();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getReview();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      15,\n      f\n    );\n  }\n  f = this.getSprintbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      16,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.UpdateTeamTaskReq} The clone.\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.UpdateTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamTaskId = 3;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string title = 4;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string description = 5;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string priority = 6;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string start = 7;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string deadline = 8;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string assigneeArray = 9;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getAssigneearray = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setAssigneearray = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string comment = 10;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getComment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setComment = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string status = 11;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string review = 12;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getReview = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setReview = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string accessToken = 13;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string teamId = 14;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 14, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * optional string sprintId = 15;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 15, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * optional string sprintBacklogId = 16;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getSprintbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 16, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setSprintbacklogid = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.RegisterTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.RegisterTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.RegisterTeamTaskReq.displayName = 'proto.teamtask.RegisterTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.RegisterTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.RegisterTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.RegisterTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamtaskid: msg.getTeamtaskid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid(),\n    assigner: msg.getAssigner()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.RegisterTeamTaskReq}\n */\nproto.teamtask.RegisterTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.RegisterTeamTaskReq;\n  return proto.teamtask.RegisterTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.RegisterTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.RegisterTeamTaskReq}\n */\nproto.teamtask.RegisterTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssigner(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.RegisterTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.RegisterTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getAssigner();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.RegisterTeamTaskReq} The clone.\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.RegisterTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamTaskId = 3;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string assigner = 5;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getAssigner = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setAssigner = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.CancelTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.CancelTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.CancelTeamTaskReq.displayName = 'proto.teamtask.CancelTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.CancelTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.CancelTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.CancelTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamtaskid: msg.getTeamtaskid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.CancelTeamTaskReq}\n */\nproto.teamtask.CancelTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.CancelTeamTaskReq;\n  return proto.teamtask.CancelTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.CancelTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.CancelTeamTaskReq}\n */\nproto.teamtask.CancelTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.CancelTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.CancelTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.CancelTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.CancelTeamTaskReq} The clone.\n */\nproto.teamtask.CancelTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.CancelTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamTaskId = 3;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.GetAllTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.GetAllTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.GetAllTeamTaskReq.displayName = 'proto.teamtask.GetAllTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.GetAllTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.GetAllTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid(),\n    sprintid: msg.getSprintid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.GetAllTeamTaskReq}\n */\nproto.teamtask.GetAllTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.GetAllTeamTaskReq;\n  return proto.teamtask.GetAllTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.GetAllTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.GetAllTeamTaskReq}\n */\nproto.teamtask.GetAllTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.GetAllTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.GetAllTeamTaskReq} The clone.\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.GetAllTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string sprintId = 4;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.GetAllTeamTaskRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.GetAllTeamTaskRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.GetAllTeamTaskRes.displayName = 'proto.teamtask.GetAllTeamTaskRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.GetAllTeamTaskRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.GetAllTeamTaskRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamTaskRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    teamtaskid: msg.getTeamtaskid(),\n    title: msg.getTitle(),\n    description: msg.getDescription(),\n    priority: msg.getPriority(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    assigneearray: msg.getAssigneearray(),\n    comment: msg.getComment(),\n    statusteamtask: msg.getStatusteamtask(),\n    status: msg.getStatus(),\n    review: msg.getReview(),\n    teamid: msg.getTeamid(),\n    sprintbacklogid: msg.getSprintbacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.GetAllTeamTaskRes}\n */\nproto.teamtask.GetAllTeamTaskRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.GetAllTeamTaskRes;\n  return proto.teamtask.GetAllTeamTaskRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.GetAllTeamTaskRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.GetAllTeamTaskRes}\n */\nproto.teamtask.GetAllTeamTaskRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssigneearray(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setComment(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusteamtask(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReview(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintbacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.GetAllTeamTaskRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamTaskRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getAssigneearray();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getComment();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getStatusteamtask();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getReview();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getSprintbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.GetAllTeamTaskRes} The clone.\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.GetAllTeamTaskRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string teamTaskId = 1;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string title = 2;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string description = 3;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string priority = 4;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string start = 5;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string deadline = 6;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string assigneeArray = 7;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getAssigneearray = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setAssigneearray = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string comment = 8;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getComment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setComment = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string statusTeamTask = 12;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getStatusteamtask = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setStatusteamtask = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string status = 9;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string review = 10;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getReview = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setReview = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string sprintBacklogId = 14;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getSprintbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 14, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setSprintbacklogid = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\ngoog.object.extend(exports, proto.teamtask);\n","import React, { Component } from 'react';\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Card,\r\n  Button,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport cookie from 'react-cookies';\r\nimport Chat from '../../../../service/chat'\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../../../../service/storage'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst proto = {};\r\nproto.teamtask = require('./../../../../gRPC/teamtask/teamtask_grpc_web_pb');\r\nproto.sprintbacklog = require('./../../../../gRPC/sprintbacklog/sprintbacklog_grpc_web_pb');\r\n\r\nclass TeamTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = {\r\n      collapse: true,\r\n      fadeIn: true,\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      data: [],\r\n      modalAdd: false,\r\n      modalEdit: false,\r\n      title: '',\r\n      description: '',\r\n      priority: \"\",      \r\n      assignee: \"\",\r\n      comment: '',\r\n      status: \"\",\r\n      review: \"\",\r\n      updateId:\"\",\r\n      status:\"\",\r\n      mem:getFromStorage('members'),\r\n      sprintBacklog:\"\",\r\n      sprint:\"\",\r\n\r\n    };\r\n  }\r\n  toastId = null;\r\n\r\n  notify = () => this.toastId = toast(\"Processing... please wait...\", { autoClose: false });\r\n\r\n  success = () => toast.update(this.toastId, { render: \"Success\", type: toast.TYPE.SUCCESS, autoClose: 3000 });\r\n  failed = () => toast.update(this.toastId, { render: \"Failed\", type: toast.TYPE.ERROR, autoClose: 3000 });\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  }\r\n  onChangeEndDate = (date) => {\r\n    this.setState({\r\n      endDate: date\r\n    });\r\n  }\r\n  \r\n  toggle = () => {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  }\r\n  toggleAdd = () => {\r\n    this.setState(prevState => ({\r\n      modalAdd: !prevState.modalAdd\r\n    }));\r\n  }\r\n  toggleAddOpen = () => {\r\n    this.setState(prevState => ({\r\n      modalAdd: !prevState.modalAdd,\r\n      title: '',\r\n      description: '',\r\n      priority: \"\",      \r\n      assignee: \"\",\r\n      comment: '',\r\n      status: \"\",\r\n      review: \"\",\r\n      updateId:\"\",\r\n      status:\"\",\r\n    }));\r\n  }\r\n  toggleEdit = () => {\r\n    this.setState(prevState => ({\r\n      modalEdit: !prevState.modalEdit\r\n    }));\r\n  }\r\n  toggleEditOpen = (event) => {\r\n    let updateId=event.currentTarget.dataset.id\r\n    let   title=event.currentTarget.dataset.title\r\n    let  description=event.currentTarget.dataset.description\r\n    let  start=event.currentTarget.dataset.start\r\n    let   deadline=event.currentTarget.dataset.deadline\r\n    let   priority=event.currentTarget.dataset.priority\r\n    let   status=event.currentTarget.dataset.status\r\n    let   assignee=event.currentTarget.dataset.assignee\r\n    let sprintBacklog=event.currentTarget.dataset.sprintbacklog\r\n    this.setState(prevState => ({\r\n      modalEdit: !prevState.modalEdit,\r\n      updateId,\r\n      title,\r\n      description,\r\n      start,\r\n      deadline,\r\n      priority,\r\n      status,\r\n      assignee,\r\n      sprintBacklog\r\n    }));\r\n  }\r\n\r\n  onTextboxChangeTitle = (event) => {\r\n    this.setState({\r\n      title: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeDescription = (event) => {\r\n    this.setState({\r\n      description: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangePriority = (event) => {\r\n    this.setState({\r\n      priority: event.target.value,\r\n    });\r\n\r\n  }\r\n  onTextboxChangeSprintBacklog = (event) => {\r\n    this.setState({\r\n      sprintBacklog: event.target.value,\r\n    });\r\n\r\n  }\r\n  onTextboxChangeSprint = (event) => {\r\n    this.setState({\r\n      sprint: event.target.value,   \r\n    });\r\n    console.log(event.target.value)\r\n    console.log(this.props.sprintbacklogs)\r\n  }\r\n\r\n \r\n  onTextboxChangeAssignee = (event) => {\r\n    this.setState({\r\n      assignee: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeComment = (event) => {\r\n    this.setState({\r\n      comment: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeReview = (event) => {\r\n    this.setState({\r\n      review: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeStatus = (event) => {\r\n    this.setState({\r\n      status: event.target.value,\r\n    });\r\n  }\r\n  loadAllSprint=()=>{\r\n    const sprintbacklogService = new proto.sprintbacklog.SprintBacklogClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    var GetAllSprintBacklogReq = new proto.sprintbacklog.GetAllSprintBacklogReq();\r\n    GetAllSprintBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllSprintBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllSprintBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    GetAllSprintBacklogReq.setTeamid(getFromStorage(\"teamId\"));\r\n    let sprints=[]\r\n    var response = sprintbacklogService.getAllSprintBacklog(GetAllSprintBacklogReq, metadata)\r\n    let that = this\r\n    \r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        let arr = response.getStart().split('-');\r\n        let start = \"\"\r\n        let end = \"\"\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n\r\n        arr = response.getDeadline().split('-')\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n        sprints.push({\r\n          id: response.getBacklogid(),\r\n          title: response.getTitle(),\r\n          role: response.getRole(),\r\n          want: response.getWant(),\r\n          so: response.getSo(),\r\n          priority: response.getPriority(),\r\n          estimation: response.getEstimation(),\r\n          sprint: response.getSprintid(),\r\n          status: response.getStatusbacklog(),\r\n          start: start,\r\n          deadline: end,\r\n        })      \r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n      setInStorage(\"sprintbacklog\",sprints)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n\r\n  }\r\n  loadAllTask=()=>{\r\n    \r\n    let end = this.state.endDate;\r\n    end.setDate(end.getDate() + 15);\r\n    this.setState({\r\n      endDate: end\r\n    })\r\n//this.notify()\r\n    let d = this.state.startDate;\r\n    let start = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n    d = this.state.endDate;\r\n     end = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var GetAllTeamTaskReq = new proto.teamtask.GetAllTeamTaskReq();\r\n    GetAllTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    GetAllTeamTaskReq.setTeamid(getFromStorage(\"teamId\"));\r\n    GetAllTeamTaskReq.setSprintid(\"this.state.sprintId\");\r\n    \r\n    var response = teamtaskService.getAllTeamTask(GetAllTeamTaskReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        let arr = response.getStart().split('-');\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n        arr = response.getDeadline().split('-')\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n        //processing assign array\r\n          let str=response.getAssigneearray()\r\n          str=str.slice(1,-1)\r\n          arr=str.split(', ')\r\n\r\n      \r\n\r\n          // that.state.mem.map(p=>{\r\n          //   if (arr.indexOf(p.id)!=-1){\r\n          //     console.log(\"exist\")\r\n          //     arr[arr.indexOf(p.id)]=p.username\r\n          //   }\r\n          //   return p\r\n          // })\r\n\r\n        that.setState(prevState => ({\r\n          data: [...prevState.data,\r\n          {\r\n            id: response.getTeamtaskid(),\r\n            title: response.getTitle(),\r\n            description: response.getDescription(),\r\n            assignee: arr,\r\n            priority: response.getPriority(),\r\n            review: response.getReview(),\r\n            comment: response.getComment(),\r\n            status: response.getStatusteamtask(),\r\n            start: start,\r\n            deadline: end,\r\n            sprintBacklog: response.getSprintbacklogid()\r\n          }]\r\n        }));\r\n\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n \r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n  }\r\n  componentDidMount() {   \r\n    this.loadAllSprint()\r\n    this.loadAllTask()\r\n\r\n  }\r\n  handleAdd = () => {\r\n    console.log(\"handle add\")\r\n    let sprint=this.state.sprintBacklog\r\n    console.log(getFromStorage(\"sprintbacklog\").length>0)\r\n    console.log(sprint==\"\")\r\n    console.log(getFromStorage('sprints')[0])\r\n    if (sprint==\"\" && getFromStorage(\"sprintbacklog\").length>0){\r\n      sprint=getFromStorage('sprints')[0].title\r\n    }\r\n    this.notify()\r\n    let d = this.state.startDate;\r\n    let start = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n    d = this.state.endDate;\r\n    let end = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var AddNewTeamTaskReq = new proto.teamtask.AddNewTeamTaskReq();\r\n    AddNewTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    AddNewTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    AddNewTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    AddNewTeamTaskReq.setTeamid(getFromStorage(\"teamId\"));\r\n    AddNewTeamTaskReq.setPriority(this.state.priority);\r\n    AddNewTeamTaskReq.setStart(start);\r\n    AddNewTeamTaskReq.setDeadline(end);\r\n    AddNewTeamTaskReq.setAssigneearray(this.state.assignee)\r\n    AddNewTeamTaskReq.setComment(\"\");\r\n    AddNewTeamTaskReq.setStatus(\"Todo\");\r\n    AddNewTeamTaskReq.setReview(\"\");\r\n    AddNewTeamTaskReq.setTitle(this.state.title);\r\n    AddNewTeamTaskReq.setDescription(this.state.description);\r\n    AddNewTeamTaskReq.setSprintid(this.state.sprint);\r\n    AddNewTeamTaskReq.setSprintbacklogid(this.state.sprintbacklog);\r\n\r\n    \r\n    var response = teamtaskService.addNewTeamTask(AddNewTeamTaskReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      console.log(response.getStatus())\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.toggleAdd()\r\n        that.success()\r\n        let arr = start.split('-');\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n\r\n        arr = end.split('-')\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n        that.setState(prevState => ({\r\n          data: [...prevState.data,\r\n          {\r\n            id: response.getTeamtaskid(),\r\n            title: that.state.title,\r\n            description: that.state.description,\r\n            assignee: that.state.assignee,\r\n            priority: that.state.priority,\r\n            review: \"\",\r\n            comment: \"\",\r\n            status: \"Todo\",\r\n            start: start,\r\n            deadline: end,\r\n            sprintBacklog:sprint,\r\n          }]\r\n        }));\r\n\r\n      }else{\r\n        that.failed()\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n\r\n  };\r\n  handleDelete = (event) => {\r\n    let id = event.currentTarget.dataset.id\r\n    console.log(\"delete\")\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    this.notify()\r\n    var metadata = {};\r\n    var CancelTeamTaskReq = new proto.teamtask.CancelTeamTaskReq();\r\n    CancelTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    CancelTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    CancelTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    CancelTeamTaskReq.setTeamtaskid(id)\r\n    CancelTeamTaskReq.setTeamid(getFromStorage(\"teamId\"))\r\n    let that=this\r\n    teamtaskService.cancelTeamTask(CancelTeamTaskReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n        console.log(\"error\")\r\n      } else { //if success\r\n        //get response\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n            that.success()\r\n            let newData=that.state.data;\r\n            that.setState({\r\n              data:newData.filter(p=>{\r\n                if (p.id==id) return false\r\n                return true\r\n              })\r\n            })\r\n        }else {\r\n          that.failed()\r\n        }\r\n       \r\n      }\r\n    });\r\n  };\r\n  handleAssignToMe=(event)=>{\r\n    let id = event.currentTarget.dataset.id\r\n    console.log(\"handleAssignToMe\")\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    this.notify()\r\n    var metadata = {};\r\n    var RegisterTeamTaskReq = new proto.teamtask.RegisterTeamTaskReq();\r\n    RegisterTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    RegisterTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    RegisterTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    RegisterTeamTaskReq.setTeamtaskid(id)\r\n    RegisterTeamTaskReq.setTeamid(getFromStorage(\"teamId\"))\r\n    RegisterTeamTaskReq.setAssigner(getFromStorage(\"username\"))\r\n    let that=this\r\n    teamtaskService.registerTeamTask(RegisterTeamTaskReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n        console.log(\"error\")\r\n      } else { //if success\r\n        //get response\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n            that.success()\r\n            let newData=that.state.data;\r\n            that.setState({\r\n              data:newData.map(p=>{\r\n                if (p.id==id){\r\n                  return Object.assign(p,{assignee:getFromStorage(\"username\")})\r\n                } \r\n                return p\r\n              })\r\n            })\r\n        }else {\r\n          that.failed()\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\n  \r\n  //TODO: update at assign\r\n  handleUpdate = () => {\r\n    this.notify()\r\n    let d = this.state.startDate;\r\n    let start = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n    d = this.state.endDate;\r\n    let end = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var UpdateTeamTaskReq = new proto.teamtask.UpdateTeamTaskReq();\r\n    UpdateTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    UpdateTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    UpdateTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    UpdateTeamTaskReq.setTeamid(getFromStorage(\"teamId\"));\r\n    UpdateTeamTaskReq.setTeamtaskid(this.state.updateId);\r\n\r\n    UpdateTeamTaskReq.setPriority(this.state.priority);\r\n    UpdateTeamTaskReq.setStart(start);\r\n    UpdateTeamTaskReq.setDeadline(end);\r\n    UpdateTeamTaskReq.setAssigneearray(this.state.assignee)\r\n    UpdateTeamTaskReq.setComment(this.state.comment);\r\n    UpdateTeamTaskReq.setStatus(this.state.status);\r\n    UpdateTeamTaskReq.setReview(this.state.review);\r\n    UpdateTeamTaskReq.setTitle(this.state.title);\r\n    UpdateTeamTaskReq.setDescription(this.state.description);\r\n    UpdateTeamTaskReq.setSprintid(getFromStorage(\"currentSprintId\"));\r\n    UpdateTeamTaskReq.setSprintbacklogid(this.state.sprintBacklog)\r\n    var response = teamtaskService.updateTeamTask(UpdateTeamTaskReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      console.log(response.getStatus())\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.toggleEdit()\r\n        that.success()\r\n        let arr = start.split('-');\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n\r\n        arr = end.split('-')\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n\r\n        \r\n        let newData=that.state.data        \r\n        that.setState({\r\n          data:newData.map(p=>{\r\n            if (p.id==that.state.updateId)    {\r\n              return {\r\n                id: that.state.updateId,\r\n                title: that.state.title,\r\n                description: that.state.description,\r\n                assignee: that.state.assignee,\r\n                priority: that.state.priority,\r\n                review: \"\",\r\n                comment: \"\",\r\n                status: that.state.status,\r\n                start: start,\r\n                deadline: end,\r\n                sprintBacklog:that.state.sprintBacklog\r\n              }\r\n            }                 \r\n            \r\n            return p\r\n          }) \r\n        });\r\n\r\n      }else{\r\n        that.failed()\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n\r\n  };\r\n componentDidUpdate(){\r\n   console.log(\"didupdate\")\r\n   console.log(this.state.sprintbacklog)\r\n   console.log(this.state.sprint)\r\n }\r\n\r\n  render() {    \r\n    let that = this;\r\n    let sprints=this.props.sprints\r\n    console.log(\"sprints\")\r\n    console.log(sprints)\r\n    return (\r\n      <div>\r\n        <Chat />\r\n      <Row>\r\n        <Col>\r\n          <Row>\r\n            <Col xs=\"2\" md=\"2\">\r\n              <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"Search\" />\r\n            </Col>\r\n\r\n            <Col xs=\"0\" md=\"0\">\r\n              <Button type=\"submit\" size=\"sm\" color=\"success\"><i class=\"fa fa-search\"></i></Button>\r\n            </Col>\r\n          </Row>\r\n          <Card>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-lg\">\r\n                <thead class=\"thead\">\r\n                  <tr class=\"bg-primary\">\r\n                    <th>Title <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Description <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Sprint <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Sprint Backlog <i class=\"fa fa-sort\"></i></th>\r\n\r\n                    <th>Priority <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Start day <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Deadline <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Assignee</th>\r\n                    <th>Comment</th>\r\n                    <th>Status</th>\r\n                    <th>Review</th>\r\n                    <th>\r\n                      <div>\r\n                        <Button color=\"primary\" size=\"sm\" className=\"mt-3\" onClick={that.toggleAddOpen}><i class=\"fa fa-plus-square\"></i>{this.props.buttonLabel}</Button>\r\n                       \r\n                        <Modal size=\"lg\" isOpen={that.state.modalAdd} toggle={that.toggleAdd} className={that.props.className}>\r\n                          <ModalHeader toggle={that.toggleAdd}>Team Task</ModalHeader>\r\n                          <ModalBody>\r\n                            <Form className=\"form-horizontal\">\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">title</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"title\" name=\"title\" placeholder=\"title\" value={that.state.title} onChange={that.onTextboxChangeTitle} />\r\n\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"textarea-input\">description</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"textarea\" name=\"description\" id=\"description\" rows=\"9\"\r\n                                    placeholder=\"Content...\" value={that.state.description} onChange={that.onTextboxChangeDescription} />\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">Sprint</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"3\">\r\n                                  <Input type=\"select\" name=\"select\" id=\"select\"  onChange={that.onTextboxChangeSprint}>                                    \r\n                                    { \r\n                                      (sprints!=undefined)?\r\n                                      sprints.map(p=>{\r\n                                        return(\r\n                                          <option value={p.id}>{p.num}</option>\r\n                                        )\r\n                                      }):\r\n                                      \r\n                                        <option disable={true} value=\"\">not have any sprint</option>\r\n                                      \r\n                                    }\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">Sprint Backlog</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"3\">\r\n                                  <Input type=\"select\" name=\"select\" id=\"select\"  onChange={that.onTextboxChangeSprintBacklog}>                                    \r\n                                    { \r\n                                      (that.props.sprintbacklogs!=undefined)?\r\n                                      that.props.sprintbacklogs.map(p=>\r\n                                        p.sprint==that.state.sprint? \r\n                                          <option value={p.title}>{p.title}</option>\r\n                                        :null\r\n                                    ):\r\n                                      \r\n                                        <option disable={true} value=\"\">not have any sprint backlog</option>\r\n                                      \r\n                                    }\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">priority</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"3\">\r\n                                  <Input type=\"select\" name=\"select\" id=\"select\"  onChange={that.onTextboxChangePriority}>\r\n                                    <option value=\"0\">Please select</option>\r\n                                    <option value=\"High\">High</option>\r\n                                    <option value=\"Medium\">Medium</option>\r\n                                    <option value=\"Low\">Low</option>\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"date-input\">Start  </Label>\r\n                                </Col>\r\n                                <Col xs=\"3\" md=\"3\">\r\n                                  <DatePicker\r\n\r\n                                    selected={that.state.startDate}\r\n                                    timeInputLabel=\"Time:\"\r\n                                    onChange={that.onChangeStartDate}\r\n                                    dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                                    showTimeInput\r\n                                  /> </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"date-input\">Deadline </Label>\r\n                                </Col>\r\n                                <Col xs=\"3\" md=\"3\">\r\n                                  <DatePicker\r\n\r\n\r\n                                    selected={that.state.endDate}\r\n                                    timeInputLabel=\"Time:\"\r\n                                    onChange={that.onChangeEndDate}\r\n                                    dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                                    showTimeInput\r\n                                  /> </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">Assignee</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"3\">\r\n                                  <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangeAssignee}>\r\n                                  <option value=\"0\">Please select</option>\r\n                                    { (that.state.mem!=undefined)?\r\n                                      that.state.mem.map(p=>{\r\n                                        return(\r\n                                          <option value={p.username}>{p.username}</option>\r\n                                        )\r\n                                      }):{\r\n                                        \r\n                                      }\r\n                                    }\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n                            </Form>\r\n                          </ModalBody>\r\n                          <ModalFooter>\r\n                            <Button color=\"primary\" onClick={that.handleAdd}>Submit</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={that.toggleAdd}>Cancel</Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </div>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n\r\n\r\n\r\n\r\n\r\n                <tbody>{this.state.data.map(function (item, key) {\r\n\r\n                  return (\r\n                    <tr key={key}>\r\n                      <td>{item.title}</td>\r\n                      <td>{item.description}</td>\r\n                      <td>{item.sprintBacklog}</td>\r\n                      <td>{item.priority}</td>\r\n                      <td>{item.start}</td>\r\n                      <td>{item.deadline}</td>\r\n                      <td>{item.assignee}</td>\r\n                      <td>{item.comment}</td>\r\n                      <td>{item.status}</td>\r\n                      <td>{item.review}</td>\r\n                      <td>\r\n                        <div>\r\n                          <div data-id={item.id} \r\n                           data-title={item.title} data-description={item.description}\r\n                            data-priority={item.priority} data-start={item.start} data-deadline={item.deadline}\r\n                             data-assignee={item.assignee}  data-comment={item.comment}\r\n                              data-status={item.status} data-review={item.review} data-sprintbacklog={item.sprintBacklog} onClick={that.toggleEditOpen}>\r\n                          <Button color=\"warning\" size=\"sm\" S ><i class=\"fa fa-edit\"></i>{that.props.buttonLabel}</Button>\r\n                          </div>\r\n                          <Modal size=\"lg\" isOpen={that.state.modalEdit} toggle={that.toggleEdit} className={that.props.className}>\r\n                            <ModalHeader toggle={that.toggleEdit}>Team task</ModalHeader>\r\n                            <ModalBody>\r\n                              <Form action=\"\" className=\"form-horizontal\">\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"text-input\">Title</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"title\" value={that.state.title} onChange={that.onTextboxChangeTitle}/>\r\n\r\n                                  </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"textarea-input\">Description</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <Input type=\"textarea\" name=\"textarea-input\" id=\"textarea-input\" rows=\"9\"\r\n                                      placeholder=\"Content...\" value={that.state.description} onChange={that.onTextboxChangeDescription} />\r\n                                  </Col>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">Sprint</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"3\">\r\n                                  <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangeSprint}>\r\n                                  <option value={that.state.sprintBacklog}>{that.state.sprintBacklog}</option>\r\n             \r\n                                    { (sprints!=undefined)?\r\n                                      sprints.map(p=>{\r\n                                        return(\r\n                                          <option value={p.id}>{p.num}</option>\r\n                                        )\r\n                                      }):\r\n                                      \r\n                                        <option disable={true} value=\"\">not have any sprint</option>\r\n                                      \r\n                                    }\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">Sprint Backlog</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"3\">\r\n                                  <Input type=\"select\" name=\"select\" id=\"select\"  onChange={that.onTextboxChangeSprintBacklog}>                                    \r\n                                    { \r\n                                      (that.props.sprintbacklogs!=undefined)?\r\n                                      that.props.sprintbacklogs.map(p=>\r\n                                        p.sprint==that.state.sprint? \r\n                                          <option value={p.title}>{p.title}</option>\r\n                                        :null\r\n                                    ):\r\n                                      \r\n                                        <option disable={true} value=\"\">not have any sprint backlog</option>\r\n                                      \r\n                                    }\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label>Priority</Label>\r\n                                  </Col>\r\n                                  <Col md=\"3\">\r\n                                    <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangePriority}>\r\n                                      <option value={that.state.priority}>{that.state.priority}</option>\r\n                                      <option value=\"High\">High</option>\r\n                                      <option value=\"Medium\">Medium</option>\r\n                                      <option value=\"Low\">Low</option>\r\n                                    </Input>\r\n                                  </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"date-input\">Start time</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <DatePicker\r\n\r\n\r\n                                      selected={that.state.startDate}\r\n                                      timeInputLabel=\"Time:\"\r\n                                      onChange={that.onChangeStartDate}\r\n                                      dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                                      showTimeInput\r\n                                    /></Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"date-input\">Deadline </Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <DatePicker\r\n\r\n\r\n                                      selected={that.state.endDate}\r\n                                      timeInputLabel=\"Time:\"\r\n                                      onChange={that.onChangeEndDate}\r\n                                      dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                                      showTimeInput\r\n                                    />    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                      <Col md=\"3\">\r\n                                        <Label htmlFor=\"text-input\">Assignee</Label>\r\n                                      </Col>\r\n                                     <Col xs=\"12\" md=\"3\">\r\n                                        <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangeAssignee}>\r\n                                        <option value={that.state.assignee}>{that.state.assignee}</option>\r\n                                    { (that.state.mem!=undefined)?\r\n                                      that.state.mem.map(p=>{\r\n                                        return(\r\n                                          <option value={p.username}>{p.username}</option>\r\n                                        )\r\n                                      }):{\r\n                                        \r\n                                      }\r\n                                    }\r\n                                        </Input>\r\n                                      </Col>\r\n                                    </FormGroup>   \r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"text-input\">Status</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"3\">\r\n                                    <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangeStatus}>\r\n                                      <option value={that.state.status}>{that.state.status}</option>\r\n                                      <option value=\"done\">done</option>\r\n                                      <option value=\"inprogress\">inprogress</option>\r\n                                      <option value=\"Todo\">to do</option>\r\n                                    </Input>\r\n                                  </Col>\r\n                                </FormGroup>\r\n                              </Form>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                              <Button color=\"primary\" onClick={that.handleUpdate}>Submit</Button>{' '}\r\n                              <Button color=\"secondary\" onClick={that.toggleEdit}>Cancel</Button>\r\n                            </ModalFooter>\r\n                          </Modal>\r\n                        </div>\r\n                        <div data-id={item.id} onClick={that.handleAssignToMe}>\r\n                        <Button size=\"sm\" color=\"success\"><i class=\"fa fa-plus\"> Assign to me</i></Button>\r\n                        </div>\r\n                        <div data-id={item.id} onClick={that.handleDelete}>\r\n\r\n                        <Button size=\"sm\" color=\"danger\"><i class=\"fa fa-minus\"> Delete</i></Button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n\r\n                })}</tbody>\r\n              </table>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  console.log(\"mapStateToProps\")\r\n  const { changeStatusProject } = state\r\n  const currentProject  = changeStatusProject.projectId\r\n  const {sprintbacklogs,sprints}= changeStatusProject\r\n  return {\r\n    currentProject,sprintbacklogs,sprints\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(TeamTask);\r\n"],"sourceRoot":""}