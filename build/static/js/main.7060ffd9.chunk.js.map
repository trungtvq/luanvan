{"version":3,"sources":["actions/index.js","contexts/authContext.js","assets/img/brand/logo.png","service/chat.js","gRPC/auth/auth_grpc_web_pb.js","gRPC/myproject/myproject_grpc_web_pb.js","gRPC/chat/chat_grpc_web_pb.js","gRPC/chat/chat_pb.js","gRPC/auth/auth_pb.js","gRPC/myproject/myproject_pb.js","Client.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","REQUEST_POSTS","RECEIVE_POSTS","SELECT_SUBREDDIT","INVALIDATE_SUBREDDIT","DO_LOGIN","DO_LOGOUT","GET_PROJECT_SELECTED","SET_PROJECT_SELETED","FETCH_ALL_PROJECT","selectSubreddit","invalidateSubreddit","fetchPostsIfNeeded","saveLogin","removeLogin","addProject","deleteProject","updateProject","ADD_PROJECT","UPDATE_PROJECT","DELETE_PROJECT","subreddit","type","fetchPosts","dispatch","requestPosts","fetch","concat","then","response","json","posts","data","children","map","child","receivedAt","Date","now","receivePosts","console","log","getState","state","postsBySubreddit","isFetching","didInvalidate","shouldFetchPosts","id","token","email","name","avatar","topic","start","end","isPrivate","progress","react__WEBPACK_IMPORTED_MODULE_0__","authContext","n","React","createContext","signInEmail","login","logout","module","exports","p","proto","chat","require","Chat","addResponseMessage","res","handleNewUserMessage","newMessage","chatService","ChatClient","SendMsgReq","responseChat","connectChat","on","getMsg","status","_React$createElement","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","react_chat_widget__WEBPACK_IMPORTED_MODULE_7__","this","Object","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","logo","Component","grpc","web","Auth","AuthClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","AuthPromiseClient","methodInfo_Auth_SignIn","AbstractClientBase","MethodInfo","SignInRes","request","serializeBinary","deserializeBinary","prototype","signIn","metadata","callback","rpcCall","unaryCall","methodInfo_Auth_SignUp","signUp","methodInfo_Auth_ResetPassword","ResetRes","resetPassword","methodInfo_Auth_ResetPasswordFinalStep","resetPasswordFinalStep","methodInfo_Auth_SignInGoogle","signInGoogle","methodInfo_Auth_AuthSession","authSession","myproject","MyprojectClient","MyprojectPromiseClient","methodInfo_Myproject_addNewProject","ProjectRes","addNewProject","methodInfo_Myproject_updateProject","methodInfo_Myproject_deleteProject","methodInfo_Myproject_getmyproject","getmyproject","serverStreaming","ChatPromiseClient","methodInfo_Chat_ConnectRenew","SendMsgRes","connectRenew","methodInfo_Chat_ConnectChat","methodInfo_Chat_SendMsg","sendMsg","jspb","goog","global","Function","exportSymbol","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","accesstoken","getAccesstoken","requesterid","getRequesterid","getName","channelid","getChannelid","getType","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setAccesstoken","setRequesterid","setName","setChannelid","setMsg","setType","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","length","writeString","cloneMessage","getFieldProto3","setField","sendername","getSendername","time","getTime","getStatus","setSendername","setTime","setStatus","object","extend","SignInReq","username","getUsername","password","getPassword","setUsername","setPassword","AuthSessionReq","session","getSession","getId","setSession","setId","error","getError","getResponse","getAvatar","setError","setResponse","setAvatar","SignInGoogleReq","SignUpReq","ResetReq","ResetPasswordFinalStepReq","getToken","setToken","AddNewProjectReq","getTopic","projectname","getProjectname","getStart","getEnd","pb_private","getPrivate","detail","getDetail","cookie","getCookie","setTopic","setProjectname","setStart","setEnd","setPrivate","setDetail","setCookie","UpdateProjectReq","projectid","getProjectid","getProgress","setProjectid","setProgress","DeleteProjectReq","GetmyprojectReq","loading","react_default","auth","DefaultLayout","Loadable","loader","Promise","all","e","bind","Login","Register","Page404","Page500","PagePay","AsyncApp","ResetSecond","ResetFirst","HomeMain","HomeContact","HomeService","HomeSolve","HomePayment","HomeFinal","Demo","MyProject","ProjectDone","ProjectTodo","CreateProject","NoProject","ProfileDetail","ProfileEdit","Client","_this","authService","load","err","props","remove","Provider","BrowserRouter","isLogin","Switch","Route","exact","path","component","connect","changeStatusLogin","rootReducer","combineReducers","arguments","action","assign","defineProperty","items","lastUpdated","selectedSubreddit","changeStatusProject","projectId","projectName","updateProjectLoaded","newProject","project","needUpdate","push","ownerName","private","item","key","loggerMiddleware","createLogger","preloadedState","store","createStore","applyMiddleware","thunkMiddleware","App","es","src_Client","Boolean","window","location","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7060ffd9.chunk.js","sourcesContent":["//import fetch from 'cross-fetch'\r\nexport const REQUEST_POSTS = 'REQUEST_POSTS'\r\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\r\nexport const SELECT_SUBREDDIT = 'SELECT_SUBREDDIT'\r\nexport const INVALIDATE_SUBREDDIT = 'INVALIDATE_SUBREDDIT'\r\nexport const DO_LOGIN = 'DO_LOGIN'\r\nexport const DO_LOGOUT = 'DO_LOGOUT'\r\nexport const GET_PROJECT_SELECTED = 'GET_PROJECT_SELECTED'\r\nexport const SET_PROJECT_SELETED = 'SET_PROJECT_SELETED'\r\nexport const FETCH_ALL_PROJECT = 'FETCH_ALL_PROJECT'\r\n\r\n\r\n//hook\r\nexport const NEW_PROJECT_COME = 'NEW_PROJECT_COME'\r\nexport const UPDATE_PROJECT_COME = 'UPDATE_PROJECT_COME'\r\nexport const REMOVE_PROJECT_COME = 'REMOVE_PROJECT_COMEs'\r\n\r\nexport function selectSubreddit(subreddit) {\r\n  return {\r\n    type: SELECT_SUBREDDIT,\r\n    subreddit\r\n  }\r\n}\r\n\r\nexport function invalidateSubreddit(subreddit) {\r\n  return {\r\n    type: INVALIDATE_SUBREDDIT,\r\n    subreddit\r\n  }\r\n}\r\n\r\nfunction requestPosts(subreddit) {\r\n  return {\r\n    type: REQUEST_POSTS,\r\n    subreddit\r\n  }\r\n}\r\n\r\nfunction receivePosts(subreddit, json) {\r\n  return {\r\n    type: RECEIVE_POSTS,\r\n    subreddit,\r\n    posts: json.data.children.map(child => child.data),\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\n\r\nfunction fetchPosts(subreddit) {\r\n  return dispatch => {\r\n    dispatch(requestPosts(subreddit))\r\n    return fetch(`https://www.reddit.com/r/${subreddit}.json`)\r\n      .then(response => response.json())\r\n      .then(json => dispatch(receivePosts(subreddit, json)))\r\n  }\r\n}\r\n\r\nfunction shouldFetchPosts(state, subreddit) {\r\n  const posts = state.postsBySubreddit[subreddit]\r\n  if (!posts) {\r\n    return true\r\n  } else if (posts.isFetching) {\r\n    return false\r\n  } else {\r\n    return posts.didInvalidate\r\n  }\r\n}\r\n\r\nexport function fetchPostsIfNeeded(subreddit) {\r\n  console.log(\"fetchPostsIfNeeded\")  \r\n  return (dispatch, getState) => {\r\n    console.log(dispatch)\r\n    console.log(getState())\r\n    if (shouldFetchPosts(getState(), subreddit)) {\r\n      return dispatch(fetchPosts(subreddit))\r\n    }\r\n  }\r\n}\r\n\r\nexport function subcriptChannel(channelId){\r\n  \r\n}\r\n\r\nexport function saveLogin(id,token,email,name,avatar) {\r\n  return {\r\n    type: DO_LOGIN,\r\n    id,\r\n    token,\r\n    email,\r\n    name,\r\n    avatar\r\n  }\r\n}\r\nexport function removeLogin() {\r\n  return {\r\n    type: DO_LOGOUT\r\n  }\r\n}\r\nexport function getProject(){\r\n  return {\r\n    type: GET_PROJECT_SELECTED\r\n  }\r\n}\r\nexport function setProject(id,name){\r\n  return {\r\n    type: SET_PROJECT_SELETED,\r\n    id,\r\n    name\r\n  }\r\n}\r\nexport function addProject(id,topic,name,start,end,isPrivate,progress){\r\n  return {\r\n    type: ADD_PROJECT,\r\n    id,topic,name,start,end,isPrivate,progress\r\n  }\r\n}\r\nexport function deleteProject(id){\r\n  return {\r\n    type: DELETE_PROJECT,\r\n    id\r\n  }\r\n}\r\nexport function updateProject(id,topic,name,start,end,isPrivate,progress  ){\r\n  return {\r\n    type: UPDATE_PROJECT,\r\n    id,topic,name,start,end,isPrivate,progress\r\n  }\r\n}\r\nexport function fetchmyproject(id,ownerName,topic,name,start,end,isPrivate){\r\n  return {\r\n    type: ADD_PROJECT,\r\n    id,ownerName,topic,name,start,end,isPrivate\r\n  }\r\n}\r\n\r\n//TYPE:\r\nexport const ADD_PROJECT = 'ADD_PROJECT'\r\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT'\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT'\r\nexport const FORCE_RERENDER = 'FORCE_RERENDER'\r\nexport const NOTIFY_COME = 'FORCE_RERENDER'\r\n\r\nfunction fetch_notify(){\r\n\r\n}\r\nfunction fetch_message(){\r\n\r\n}\r\nfunction fetch_task(){\r\n\r\n}\r\nexport function hook(type,id,detail){\r\n  return (dispatch, getState) => {\r\n  switch (type){\r\n    case \"new_message\":\r\n        return dispatch(fetch_message(id,detail))\r\n    case \"new_notify\":\r\n        return dispatch(fetch_notify(id,detail))\r\n    case \"new_task\":\r\n        return dispatch(fetch_task(id,detail))\r\n    \r\n    }\r\n  }\r\n}","import React from \"react\";\r\nconst authContext = React.createContext({\r\n\ttoken:null,\r\n\tsignInEmail: null,\r\n\tlogin: (token,signInEmail)=>{},\r\n\tlogout: ()=>{}\r\n});\r\nexport default authContext;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.c7fd352d.png\";","import React, { Component } from 'react';\r\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\r\n\r\nimport 'react-chat-widget/lib/styles.css';\r\nimport logo from '../assets/img/brand/logo.png';\r\n\r\nconst proto = {};\r\n\r\nproto.chat = require('./../gRPC/chat/chat_grpc_web_pb');\r\nclass Chat extends Component {\r\n    componentDidMount() {\r\n      addResponseMessage(\"Welcome to this awesome chat!\");\r\n      const chatService =new proto.chat.ChatClient('https://www.overlead.co');\r\n      var metadata = {};\r\n\r\n     var SendMsgReq=new proto.chat.SendMsgReq();\r\n     var responseChat = chatService.connectChat(SendMsgReq,metadata)\r\n  \r\n     responseChat.on('data',function(responseChat){\r\n            addResponseMessage(responseChat.getMsg());\r\n      })\r\n  \r\n      responseChat.on('status',function(status){\r\n        console.log(\"client connect\")\r\n      })\r\n  \r\n      responseChat.on('end',function(end){\r\n        console.log(\"client end\")\r\n      })\r\n    }\r\n    addResponseMessage=(res)=>{\r\n      \r\n    }\r\n    handleNewUserMessage = (newMessage) => {\r\n      console.log(`New message incoming! ${newMessage}`);\r\n            // Now send the message throught the backend API    \r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"App\">\r\n          <Widget\r\n            handleNewUserMessage={this.handleNewUserMessage}\r\n            handleNewUserMessage={this.handleNewUserMessage}\r\n            profileAvatar={logo}\r\n            title=\"My new awesome title\"\r\n            subtitle=\"And my cool subtitle\"\r\n          />\r\n        </div>\r\n      );\r\n    } \r\n  }\r\n  export default Chat;","/**\n * @fileoverview gRPC-Web generated client stub for Auth\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.Auth = require('./auth_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.Auth.AuthClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.Auth.AuthPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.SignInReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_SignIn = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.SignInReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.SignInReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.signIn =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/SignIn',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignIn,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.SignInReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.signIn =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/SignIn',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignIn);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.SignUpReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_SignUp = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.SignUpReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.SignUpReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.signUp =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/SignUp',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignUp,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.SignUpReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.signUp =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/SignUp',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignUp);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.ResetReq,\n *   !proto.Auth.ResetRes>}\n */\nconst methodInfo_Auth_ResetPassword = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.ResetRes,\n  /** @param {!proto.Auth.ResetReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.ResetRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.ResetReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.ResetRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.ResetRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.resetPassword =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/ResetPassword',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPassword,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.ResetReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.ResetRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.resetPassword =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/ResetPassword',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPassword);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.ResetPasswordFinalStepReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_ResetPasswordFinalStep = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.ResetPasswordFinalStepReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.ResetPasswordFinalStepReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.resetPasswordFinalStep =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/ResetPasswordFinalStep',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPasswordFinalStep,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.ResetPasswordFinalStepReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.resetPasswordFinalStep =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/ResetPasswordFinalStep',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPasswordFinalStep);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.SignInGoogleReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_SignInGoogle = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.SignInGoogleReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.SignInGoogleReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.signInGoogle =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/SignInGoogle',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignInGoogle,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.SignInGoogleReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.signInGoogle =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/SignInGoogle',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignInGoogle);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.AuthSessionReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_AuthSession = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.AuthSessionReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.AuthSessionReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.authSession =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/AuthSession',\n      request,\n      metadata || {},\n      methodInfo_Auth_AuthSession,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.AuthSessionReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.authSession =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/AuthSession',\n      request,\n      metadata || {},\n      methodInfo_Auth_AuthSession);\n};\n\n\nmodule.exports = proto.Auth;\n\n","/**\n * @fileoverview gRPC-Web generated client stub for myproject\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.myproject = require('./myproject_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.myproject.MyprojectClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.myproject.MyprojectPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.AddNewProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_addNewProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.AddNewProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.AddNewProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.myproject.ProjectRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.addNewProject =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/myproject.Myproject/addNewProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_addNewProject,\n      callback);\n};\n\n\n/**\n * @param {!proto.myproject.AddNewProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.myproject.ProjectRes>}\n *     A native promise that resolves to the response\n */\nproto.myproject.MyprojectPromiseClient.prototype.addNewProject =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/myproject.Myproject/addNewProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_addNewProject);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.UpdateProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_updateProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.UpdateProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.UpdateProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.myproject.ProjectRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.updateProject =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/myproject.Myproject/updateProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_updateProject,\n      callback);\n};\n\n\n/**\n * @param {!proto.myproject.UpdateProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.myproject.ProjectRes>}\n *     A native promise that resolves to the response\n */\nproto.myproject.MyprojectPromiseClient.prototype.updateProject =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/myproject.Myproject/updateProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_updateProject);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.DeleteProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_deleteProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.DeleteProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.DeleteProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.myproject.ProjectRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.deleteProject =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/myproject.Myproject/deleteProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_deleteProject,\n      callback);\n};\n\n\n/**\n * @param {!proto.myproject.DeleteProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.myproject.ProjectRes>}\n *     A native promise that resolves to the response\n */\nproto.myproject.MyprojectPromiseClient.prototype.deleteProject =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/myproject.Myproject/deleteProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_deleteProject);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.GetmyprojectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_getmyproject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.GetmyprojectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.GetmyprojectReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.getmyproject =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/myproject.Myproject/getmyproject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_getmyproject);\n};\n\n\n/**\n * @param {!proto.myproject.GetmyprojectReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectPromiseClient.prototype.getmyproject =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/myproject.Myproject/getmyproject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_getmyproject);\n};\n\n\nmodule.exports = proto.myproject;\n\n","/**\n * @fileoverview gRPC-Web generated client stub for chat\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.chat = require('./chat_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.chat.ChatClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.chat.ChatPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.chat.SendMsgReq,\n *   !proto.chat.SendMsgRes>}\n */\nconst methodInfo_Chat_ConnectRenew = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.chat.SendMsgRes,\n  /** @param {!proto.chat.SendMsgReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.SendMsgRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.chat.SendMsgRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.SendMsgRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.connectRenew =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/ConnectRenew',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectRenew,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.SendMsgRes>}\n *     A native promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.connectRenew =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/ConnectRenew',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectRenew);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.chat.SendMsgReq,\n *   !proto.chat.SendMsgRes>}\n */\nconst methodInfo_Chat_ConnectChat = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.chat.SendMsgRes,\n  /** @param {!proto.chat.SendMsgReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.SendMsgRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.chat.SendMsgRes>}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.connectChat =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/chat.Chat/ConnectChat',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectChat);\n};\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.chat.SendMsgRes>}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatPromiseClient.prototype.connectChat =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/chat.Chat/ConnectChat',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectChat);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.chat.SendMsgReq,\n *   !proto.chat.SendMsgRes>}\n */\nconst methodInfo_Chat_SendMsg = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.chat.SendMsgRes,\n  /** @param {!proto.chat.SendMsgReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.SendMsgRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.chat.SendMsgRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.SendMsgRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.sendMsg =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/SendMsg',\n      request,\n      metadata || {},\n      methodInfo_Chat_SendMsg,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.SendMsgRes>}\n *     A native promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.sendMsg =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/SendMsg',\n      request,\n      metadata || {},\n      methodInfo_Chat_SendMsg);\n};\n\n\nmodule.exports = proto.chat;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.chat.SendMsgReq', null, global);\ngoog.exportSymbol('proto.chat.SendMsgRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.SendMsgReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.SendMsgReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.chat.SendMsgReq.displayName = 'proto.chat.SendMsgReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.SendMsgReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.SendMsgReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.SendMsgReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.chat.SendMsgReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accesstoken: msg.getAccesstoken(),\n    requesterid: msg.getRequesterid(),\n    name: msg.getName(),\n    channelid: msg.getChannelid(),\n    msg: msg.getMsg(),\n    type: msg.getType()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.SendMsgReq}\n */\nproto.chat.SendMsgReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.SendMsgReq;\n  return proto.chat.SendMsgReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.SendMsgReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.SendMsgReq}\n */\nproto.chat.SendMsgReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMsg(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.chat.SendMsgReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.SendMsgReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getChannelid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getMsg();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.chat.SendMsgReq} The clone.\n */\nproto.chat.SendMsgReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.chat.SendMsgReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string accessToken = 1;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string requesterId = 2;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string name = 6;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string channelId = 3;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getChannelid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setChannelid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string msg = 4;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string type = 5;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setType = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.SendMsgRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.SendMsgRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.chat.SendMsgRes.displayName = 'proto.chat.SendMsgRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.SendMsgRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.SendMsgRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.SendMsgRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.chat.SendMsgRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelid: msg.getChannelid(),\n    msg: msg.getMsg(),\n    type: msg.getType(),\n    sendername: msg.getSendername(),\n    time: msg.getTime(),\n    status: msg.getStatus()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.SendMsgRes}\n */\nproto.chat.SendMsgRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.SendMsgRes;\n  return proto.chat.SendMsgRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.SendMsgRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.SendMsgRes}\n */\nproto.chat.SendMsgRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMsg(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSendername(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTime(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.chat.SendMsgRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.SendMsgRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getChannelid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getMsg();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getSendername();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTime();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.chat.SendMsgRes} The clone.\n */\nproto.chat.SendMsgRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.chat.SendMsgRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string channelId = 1;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getChannelid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setChannelid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string msg = 2;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setType = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string senderName = 4;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getSendername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setSendername = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string time = 5;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setTime = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string status = 6;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto.chat);\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.Auth.AuthSessionReq', null, global);\ngoog.exportSymbol('proto.Auth.ResetPasswordFinalStepReq', null, global);\ngoog.exportSymbol('proto.Auth.ResetReq', null, global);\ngoog.exportSymbol('proto.Auth.ResetRes', null, global);\ngoog.exportSymbol('proto.Auth.SignInGoogleReq', null, global);\ngoog.exportSymbol('proto.Auth.SignInReq', null, global);\ngoog.exportSymbol('proto.Auth.SignInRes', null, global);\ngoog.exportSymbol('proto.Auth.SignUpReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignInReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignInReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignInReq.displayName = 'proto.Auth.SignInReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignInReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignInReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignInReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignInReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    password: msg.getPassword()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignInReq}\n */\nproto.Auth.SignInReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignInReq;\n  return proto.Auth.SignInReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignInReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignInReq}\n */\nproto.Auth.SignInReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignInReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignInReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignInReq} The clone.\n */\nproto.Auth.SignInReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignInReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.SignInReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string password = 2;\n * @return {string}\n */\nproto.Auth.SignInReq.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInReq.prototype.setPassword = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.AuthSessionReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.AuthSessionReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.AuthSessionReq.displayName = 'proto.Auth.AuthSessionReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.AuthSessionReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.AuthSessionReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.AuthSessionReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.AuthSessionReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    session: msg.getSession(),\n    id: msg.getId(),\n    time: msg.getTime()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.AuthSessionReq}\n */\nproto.Auth.AuthSessionReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.AuthSessionReq;\n  return proto.Auth.AuthSessionReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.AuthSessionReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.AuthSessionReq}\n */\nproto.Auth.AuthSessionReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSession(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.AuthSessionReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.AuthSessionReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.AuthSessionReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.AuthSessionReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getSession();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTime();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.AuthSessionReq} The clone.\n */\nproto.Auth.AuthSessionReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.AuthSessionReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string session = 1;\n * @return {string}\n */\nproto.Auth.AuthSessionReq.prototype.getSession = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.AuthSessionReq.prototype.setSession = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string id = 2;\n * @return {string}\n */\nproto.Auth.AuthSessionReq.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.AuthSessionReq.prototype.setId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string time = 3;\n * @return {string}\n */\nproto.Auth.AuthSessionReq.prototype.getTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.AuthSessionReq.prototype.setTime = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignInRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignInRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignInRes.displayName = 'proto.Auth.SignInRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignInRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignInRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignInRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignInRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    error: msg.getError(),\n    response: msg.getResponse(),\n    type: msg.getType(),\n    id: msg.getId(),\n    session: msg.getSession(),\n    name: msg.getName(),\n    avatar: msg.getAvatar()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignInRes}\n */\nproto.Auth.SignInRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignInRes;\n  return proto.Auth.SignInRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignInRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignInRes}\n */\nproto.Auth.SignInRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setResponse(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSession(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAvatar(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignInRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignInRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getResponse();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSession();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getAvatar();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignInRes} The clone.\n */\nproto.Auth.SignInRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignInRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string error = 4;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string response = 2;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getResponse = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setResponse = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setType = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string id = 5;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string session = 6;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getSession = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setSession = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string name = 7;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setName = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string avatar = 8;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getAvatar = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setAvatar = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignInGoogleReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignInGoogleReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignInGoogleReq.displayName = 'proto.Auth.SignInGoogleReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignInGoogleReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignInGoogleReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignInGoogleReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignInGoogleReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    name: msg.getName(),\n    avatar: msg.getAvatar()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignInGoogleReq}\n */\nproto.Auth.SignInGoogleReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignInGoogleReq;\n  return proto.Auth.SignInGoogleReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignInGoogleReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignInGoogleReq}\n */\nproto.Auth.SignInGoogleReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAvatar(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignInGoogleReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInGoogleReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignInGoogleReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInGoogleReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAvatar();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignInGoogleReq} The clone.\n */\nproto.Auth.SignInGoogleReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignInGoogleReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.SignInGoogleReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInGoogleReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.Auth.SignInGoogleReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInGoogleReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string avatar = 3;\n * @return {string}\n */\nproto.Auth.SignInGoogleReq.prototype.getAvatar = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInGoogleReq.prototype.setAvatar = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignUpReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignUpReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignUpReq.displayName = 'proto.Auth.SignUpReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignUpReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignUpReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignUpReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignUpReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    password: msg.getPassword(),\n    name: msg.getName()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignUpReq}\n */\nproto.Auth.SignUpReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignUpReq;\n  return proto.Auth.SignUpReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignUpReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignUpReq}\n */\nproto.Auth.SignUpReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignUpReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignUpReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignUpReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignUpReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignUpReq} The clone.\n */\nproto.Auth.SignUpReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignUpReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.SignUpReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignUpReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string password = 2;\n * @return {string}\n */\nproto.Auth.SignUpReq.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignUpReq.prototype.setPassword = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nproto.Auth.SignUpReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignUpReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.ResetReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.ResetReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.ResetReq.displayName = 'proto.Auth.ResetReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.ResetReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.ResetReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.ResetReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.ResetReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: msg.getType(),\n    username: msg.getUsername()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.ResetReq}\n */\nproto.Auth.ResetReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.ResetReq;\n  return proto.Auth.ResetReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.ResetReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.ResetReq}\n */\nproto.Auth.ResetReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.ResetReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.ResetReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.ResetReq} The clone.\n */\nproto.Auth.ResetReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.ResetReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string type = 1;\n * @return {string}\n */\nproto.Auth.ResetReq.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetReq.prototype.setType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string username = 3;\n * @return {string}\n */\nproto.Auth.ResetReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.ResetRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.ResetRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.ResetRes.displayName = 'proto.Auth.ResetRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.ResetRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.ResetRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.ResetRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.ResetRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    error: msg.getError()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.ResetRes}\n */\nproto.Auth.ResetRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.ResetRes;\n  return proto.Auth.ResetRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.ResetRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.ResetRes}\n */\nproto.Auth.ResetRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.ResetRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.ResetRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.ResetRes} The clone.\n */\nproto.Auth.ResetRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.ResetRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.Auth.ResetRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string error = 2;\n * @return {string}\n */\nproto.Auth.ResetRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.ResetPasswordFinalStepReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.ResetPasswordFinalStepReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.ResetPasswordFinalStepReq.displayName = 'proto.Auth.ResetPasswordFinalStepReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.ResetPasswordFinalStepReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.ResetPasswordFinalStepReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.ResetPasswordFinalStepReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    token: msg.getToken(),\n    password: msg.getPassword()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.ResetPasswordFinalStepReq}\n */\nproto.Auth.ResetPasswordFinalStepReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.ResetPasswordFinalStepReq;\n  return proto.Auth.ResetPasswordFinalStepReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.ResetPasswordFinalStepReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.ResetPasswordFinalStepReq}\n */\nproto.Auth.ResetPasswordFinalStepReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToken(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.ResetPasswordFinalStepReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetPasswordFinalStepReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getToken();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.ResetPasswordFinalStepReq} The clone.\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.ResetPasswordFinalStepReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetPasswordFinalStepReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string token = 2;\n * @return {string}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.getToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetPasswordFinalStepReq.prototype.setToken = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string password = 3;\n * @return {string}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetPasswordFinalStepReq.prototype.setPassword = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\ngoog.object.extend(exports, proto.Auth);\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.myproject.AddNewProjectReq', null, global);\ngoog.exportSymbol('proto.myproject.DeleteProjectReq', null, global);\ngoog.exportSymbol('proto.myproject.GetmyprojectReq', null, global);\ngoog.exportSymbol('proto.myproject.ProjectRes', null, global);\ngoog.exportSymbol('proto.myproject.UpdateProjectReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.AddNewProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.AddNewProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.AddNewProjectReq.displayName = 'proto.myproject.AddNewProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.AddNewProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.AddNewProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.AddNewProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.AddNewProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    topic: msg.getTopic(),\n    requesterid: msg.getRequesterid(),\n    projectname: msg.getProjectname(),\n    start: msg.getStart(),\n    end: msg.getEnd(),\n    pb_private: msg.getPrivate(),\n    detail: msg.getDetail(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.AddNewProjectReq}\n */\nproto.myproject.AddNewProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.AddNewProjectReq;\n  return proto.myproject.AddNewProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.AddNewProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.AddNewProjectReq}\n */\nproto.myproject.AddNewProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTopic(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectname(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEnd(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivate(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDetail(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.AddNewProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.AddNewProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.AddNewProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.AddNewProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTopic();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProjectname();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getEnd();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getPrivate();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getDetail();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.AddNewProjectReq} The clone.\n */\nproto.myproject.AddNewProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.AddNewProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string topic = 1;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getTopic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setTopic = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string requesterId = 2;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string projectName = 3;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getProjectname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setProjectname = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string start = 4;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string end = 5;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getEnd = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string private = 6;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getPrivate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string detail = 8;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getDetail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setDetail = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string cookie = 7;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.UpdateProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.UpdateProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.UpdateProjectReq.displayName = 'proto.myproject.UpdateProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.UpdateProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.UpdateProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.UpdateProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.UpdateProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    projectid: msg.getProjectid(),\n    requesterid: msg.getRequesterid(),\n    projectname: msg.getProjectname(),\n    start: msg.getStart(),\n    end: msg.getEnd(),\n    pb_private: msg.getPrivate(),\n    cookie: msg.getCookie(),\n    detail: msg.getDetail(),\n    progress: msg.getProgress(),\n    topic: msg.getTopic()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.UpdateProjectReq}\n */\nproto.myproject.UpdateProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.UpdateProjectReq;\n  return proto.myproject.UpdateProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.UpdateProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.UpdateProjectReq}\n */\nproto.myproject.UpdateProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectname(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEnd(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivate(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDetail(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProgress(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTopic(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.UpdateProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.UpdateProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.UpdateProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.UpdateProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getProjectname();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getEnd();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getPrivate();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getDetail();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getProgress();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getTopic();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.UpdateProjectReq} The clone.\n */\nproto.myproject.UpdateProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.UpdateProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string projectId = 1;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string requesterId = 3;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string projectName = 4;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getProjectname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setProjectname = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string start = 5;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string end = 6;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getEnd = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string private = 7;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getPrivate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string cookie = 8;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string detail = 9;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getDetail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setDetail = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string progress = 10;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getProgress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setProgress = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string topic = 11;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getTopic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setTopic = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.DeleteProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.DeleteProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.DeleteProjectReq.displayName = 'proto.myproject.DeleteProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.DeleteProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.DeleteProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.DeleteProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.DeleteProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    projectid: msg.getProjectid(),\n    cookie: msg.getCookie(),\n    requesterid: msg.getRequesterid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.DeleteProjectReq}\n */\nproto.myproject.DeleteProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.DeleteProjectReq;\n  return proto.myproject.DeleteProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.DeleteProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.DeleteProjectReq}\n */\nproto.myproject.DeleteProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.DeleteProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.DeleteProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.DeleteProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.DeleteProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.DeleteProjectReq} The clone.\n */\nproto.myproject.DeleteProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.DeleteProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.myproject.DeleteProjectReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.DeleteProjectReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string cookie = 3;\n * @return {string}\n */\nproto.myproject.DeleteProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.DeleteProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.myproject.DeleteProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.DeleteProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.GetmyprojectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.GetmyprojectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.GetmyprojectReq.displayName = 'proto.myproject.GetmyprojectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.GetmyprojectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.GetmyprojectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.GetmyprojectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.GetmyprojectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.GetmyprojectReq}\n */\nproto.myproject.GetmyprojectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.GetmyprojectReq;\n  return proto.myproject.GetmyprojectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.GetmyprojectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.GetmyprojectReq}\n */\nproto.myproject.GetmyprojectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.GetmyprojectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.GetmyprojectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.GetmyprojectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.GetmyprojectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.GetmyprojectReq} The clone.\n */\nproto.myproject.GetmyprojectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.GetmyprojectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 3;\n * @return {string}\n */\nproto.myproject.GetmyprojectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.GetmyprojectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string cookie = 2;\n * @return {string}\n */\nproto.myproject.GetmyprojectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.GetmyprojectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.ProjectRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.ProjectRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.ProjectRes.displayName = 'proto.myproject.ProjectRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.ProjectRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.ProjectRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.ProjectRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.ProjectRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    topic: msg.getTopic(),\n    error: msg.getError(),\n    status: msg.getStatus(),\n    projectid: msg.getProjectid(),\n    projectname: msg.getProjectname(),\n    start: msg.getStart(),\n    end: msg.getEnd(),\n    pb_private: msg.getPrivate(),\n    detail: msg.getDetail(),\n    progress: msg.getProgress()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.ProjectRes}\n */\nproto.myproject.ProjectRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.ProjectRes;\n  return proto.myproject.ProjectRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.ProjectRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.ProjectRes}\n */\nproto.myproject.ProjectRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTopic(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectname(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEnd(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivate(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDetail(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProgress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.ProjectRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.ProjectRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.ProjectRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.ProjectRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTopic();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getProjectname();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getEnd();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getPrivate();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getDetail();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getProgress();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.ProjectRes} The clone.\n */\nproto.myproject.ProjectRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.ProjectRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string topic = 10;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getTopic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setTopic = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string error = 1;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string status = 2;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string projectId = 3;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string projectName = 4;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getProjectname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setProjectname = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string start = 5;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string end = 6;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getEnd = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string private = 7;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getPrivate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string detail = 8;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getDetail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setDetail = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string progress = 9;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getProgress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setProgress = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\ngoog.object.extend(exports, proto.myproject);\n","import React, { Component } from 'react';\r\nimport cookie from 'react-cookies';\r\nimport {saveLogin} from './actions'\r\nimport { connect } from 'react-redux'\r\nimport authContext from \"./contexts/authContext\";///////\r\nimport { HashRouter, BrowserRouter, Route, Switch,Redirect } from 'react-router-dom';\r\nimport Chat from './service/chat'\r\nimport Loadable from 'react-loadable';\r\n\r\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\r\n\r\nconst proto = {};\r\nproto.auth = require('./gRPC/auth/auth_grpc_web_pb');\r\n\r\n// Containers layout\r\nconst DefaultLayout = Loadable({\r\n    loader: () => import('./containers/DefaultLayout'),\r\n    loading\r\n});\r\n\r\n\r\nconst Login = Loadable({\r\n    loader: () => import('./views/Pages/Login'),\r\n    loading\r\n});\r\n\r\nconst Register = Loadable({\r\n    loader: () => import('./views/Pages/Register'),\r\n    loading\r\n});\r\n\r\nconst Page404 = Loadable({\r\n    loader: () => import('./views/Pages/Page404'),\r\n    loading\r\n});\r\n\r\nconst Page500 = Loadable({\r\n    loader: () => import('./views/Pages/Page500'),\r\n    loading\r\n});\r\nconst PagePay = Loadable({\r\n    loader: () => import('./views/Pages/PagePay'),\r\n    loading\r\n});\r\n\r\nconst AsyncApp = Loadable({\r\n    loader: () => import('./components/AsyncApp'),\r\n    loading\r\n})\r\n\r\nconst ResetSecond = Loadable({\r\n    loader: () => import('./views/Pages/ResetSecond'),\r\n    loading\r\n});\r\n\r\nconst ResetFirst = Loadable({\r\n    loader: () => import('./views/Pages/ResetFirst'),\r\n    loading\r\n});\r\n\r\n\r\n//Home\r\nconst HomeMain = Loadable({\r\n    loader: () => import('./views/General/Home/Main'),\r\n    loading\r\n});\r\nconst HomeContact = Loadable({\r\n    loader: () => import('./views/General/Home/Contact'),\r\n    loading\r\n});\r\nconst HomeService = Loadable({\r\n    loader: () => import('./views/General/Home/Service'),\r\n    loading\r\n});\r\nconst HomeSolve = Loadable({\r\n    loader: () => import('./views/General/Home/Solve'),\r\n    loading\r\n});\r\nconst HomePayment = Loadable({\r\n    loader: () => import('./views/General/Home/Payment'),\r\n    loading\r\n});\r\nconst HomeFinal = Loadable({\r\n    loader: () => import('./views/General/Home/Final'),\r\n    loading\r\n});\r\n//\r\nconst Demo = Loadable({\r\n    loader: () => import('./homeNav'),\r\n    loading\r\n});\r\n\r\n//PJ\r\nconst MyProject = Loadable({\r\n    loader: () => import('./views/Personal/Project/MyProject'),\r\n    loading\r\n});\r\nconst ProjectDone = Loadable({\r\n    loader: () => import('./views/Personal/Project/ProjectDone'),\r\n    loading\r\n});\r\nconst ProjectTodo = Loadable({\r\n    loader: () => import('./views/Personal/Project/ProjectTodo'),\r\n    loading\r\n});\r\nconst CreateProject = Loadable({\r\n    loader: () => import('./views/Personal/Project/CreateProject'),\r\n    loading\r\n});\r\nconst NoProject = Loadable({\r\n    loader: () => import('./views/Personal/Project/NoProject'),\r\n    loading\r\n});\r\n//\r\n\r\n\r\n//profile\r\nconst ProfileDetail = Loadable({\r\n    loader: () => import('./views/Personal/Profile/detail'),\r\n    loading\r\n});\r\nconst ProfileEdit = Loadable({\r\n    loader: () => import('./views/Personal/Profile/edit'),\r\n    loading\r\n});\r\n\r\nclass Client extends Component {\r\n   \r\n\r\n    componentWillMount(){      \r\n           const authService = new proto.auth.AuthClient('https://www.overlead.co');\r\n           var metadata = {};\r\n           var AuthSessionReq = new proto.auth.AuthSessionReq();\r\n           AuthSessionReq.setSession(cookie.load(\"tokenAccess\"));\r\n           AuthSessionReq.setId(cookie.load(\"userId\"));\r\n           console.log(\"authSession\")\r\n            authService.authSession(AuthSessionReq, metadata, (err, response) => {\r\n              if (err) { \r\n                console.log(err);\r\n              } else { \r\n                console.log(\"SUCCESS\")\r\n                if (response.getStatus()==\"SUCCESS\")\r\n                    this.props.dispatch(saveLogin(cookie.load(\"userId\"),cookie.load(\"tokenAccess\"),cookie.load(\"username\"),cookie.load(\"name\"),cookie.load(\"avatar\")))       \r\n                else {\r\n                    cookie.remove(\"userId\")\r\n                    cookie.remove(\"tokenAccess\")\r\n                    cookie.remove(\"username\")\r\n                    cookie.remove(\"name\")\r\n                    cookie.remove(\"avatar\")\r\n                }         \r\n              }\r\n            });        \r\n    }   \r\n   \r\n    render() {\r\n        return (\r\n                <authContext.Provider>\r\n                    <BrowserRouter>\r\n                        {\r\n                            this.props.isLogin ?<div>  <Switch>\r\n                                <Route exact path=\"/homeNav\" name=\"HomeNav\" component={Demo} />\r\n                                <Route exact path=\"/Home/Main\" name=\"HomeMain\" component={HomeMain} />\r\n                                <Route exact path=\"/Home/Contact\" name=\"HomeContact\" component={HomeContact} />\r\n                                <Route exact path=\"/Home/Service\" name=\"HomeService\" component={HomeService} />\r\n                                <Route exact path=\"/Home/Solve\" name=\"HomeSolve\" component={HomeSolve} />\r\n                                <Route exact path=\"/Home/Payment\" name=\"HomePayment\" component={HomePayment} />\r\n                                <Route exact path=\"/Home/Final\" name=\"HomeFinal\" component={HomeFinal} />\r\n\r\n                                <Route exact path=\"/myproject\" name=\"myproject\" component={MyProject} />\r\n                                <Route exact path=\"/ProjectDone\" name=\"ProjectDone\" component={ProjectDone} />\r\n                                <Route exact path=\"/ProjectTodo\" name=\"ProjectTodo\" component={ProjectTodo} />\r\n                                <Route exact path=\"/CreateProject\" name=\"CreateProject\" component={CreateProject} />\r\n                                <Route exact path=\"/NoProject\" name=\"NoProject\" component={NoProject} />\r\n\r\n                                <Route exact path=\"/Profile/Detail\" name=\"ProfileDetail\" component={ProfileDetail} />\r\n                                <Route exact path=\"/Profile/Edit\" name=\"ProjectTodo\" component={ProfileEdit} />\r\n\r\n\r\n                                <Route exact path=\"/chat\" name=\"Chat Page\" component={Chat} />\r\n\r\n\r\n                                <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\r\n                                <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\r\n                                <Route exact path=\"/pay\" name=\"Page Pay\" component={PagePay} />\r\n                                <Route exact path=\"/async\" name=\"page test\" component={AsyncApp} />\r\n                                <Route exact path=\"/dashboard\" name=\"dashboard\" component={DefaultLayout} />\r\n\r\n\r\n                                <Route path=\"/\" name=\"Home\" component={DefaultLayout} />\r\n                             \r\n                              \r\n                            </Switch>\r\n                            </div>\r\n                                : <div><Switch>\r\n                                    <Route exact path=\"/Home/Final\" name=\"HomeFinal\" component={HomeFinal} />\r\n                                    <Route exact path=\"/register\" name=\"Register Page\" component={Register} />\r\n                                    <Route exact path=\"/ResetFirst\" name=\"ResetSecond Page\" component={ResetFirst} />\r\n                                    <Route exact path=\"/ResetSecond\" name=\"ResetSecond Page\" component={ResetSecond} />\r\n                                    <Route exact path=\"/login\" name=\"Login Page\" component={Login} />\r\n                                    <Route exact path=\"/async\" name=\"page test\" component={AsyncApp} />\r\n\r\n                                    <Route path=\"/\" name=\"Home\" component={HomeFinal} />\r\n\r\n                                </Switch>\r\n                                \r\n                                </div>\r\n                        }\r\n                    </BrowserRouter>\r\n                </authContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { changeStatusLogin } = state\r\n    const { isLogin,  } = changeStatusLogin\r\n    return {\r\n        isLogin,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Client);\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n  SELECT_SUBREDDIT,\r\n  INVALIDATE_SUBREDDIT,\r\n  REQUEST_POSTS,\r\n  RECEIVE_POSTS,\r\n  DO_LOGOUT,\r\n  DO_LOGIN,\r\n  GET_PROJECT_SELECTED,\r\n  SET_PROJECT_SELETED,\r\n  FETCH_ALL_PROJECT,\r\n  UPDATE_PROJECT,\r\n  DELETE_PROJECT,\r\n  ADD_PROJECT,\r\n} from '../actions'\r\nconst proto = {};\r\nproto.myproject = require('../gRPC/myproject/myproject_grpc_web_pb');\r\n\r\nfunction selectedSubreddit(state = 'reactjs', action) {\r\n  switch (action.type) {\r\n    case SELECT_SUBREDDIT:\r\n      return action.subreddit\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction posts(\r\n  state = {\r\n    isFetching: false,\r\n    didInvalidate: false,\r\n    items: []\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case INVALIDATE_SUBREDDIT:\r\n      return Object.assign({}, state, {\r\n        didInvalidate: true\r\n      })\r\n    case REQUEST_POSTS:\r\n      return Object.assign({}, state, {\r\n        isFetching: true,\r\n        didInvalidate: false\r\n      })\r\n    case RECEIVE_POSTS:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        didInvalidate: false,\r\n        items: action.posts,\r\n        lastUpdated: action.receivedAt\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction postsBySubreddit(state = {}, action) {\r\n  switch (action.type) {\r\n    case INVALIDATE_SUBREDDIT:\r\n    case RECEIVE_POSTS:\r\n    case REQUEST_POSTS:\r\n      return Object.assign({}, state, {\r\n        [action.subreddit]: posts(state[action.subreddit], action)\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\nfunction changeStatusLogin(state = {isLogin:false}, action) {\r\n  console.log(\"changeStatusLogin\")\r\n  console.log(action)\r\n  switch (action.type) {\r\n    case DO_LOGIN:    \r\n      return Object.assign({}, {\r\n                id:action.id,\r\n                token:action.token,\r\n                isLogin:true,\r\n                email:action.email,\r\n                name:action.name,\r\n                avatar:action.avatar})      \r\n    case DO_LOGOUT:\r\n      return Object.assign({},{isLogin:false})\r\n    default:\r\n      return state\r\n  }\r\n}\r\nfunction changeStatusProject(state={projectId:\"noid\"},action){\r\n  console.log(\"changeStatusProject\")\r\n  switch (action.type) {    \r\n    case SET_PROJECT_SELETED:\r\n      return Object.assign({},{\r\n        projectId:action.id,\r\n        projectName:action.name\r\n      })\r\n    case GET_PROJECT_SELECTED:    \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction updateProjectLoaded(state={project:[],needUpdate:false},action){\r\n  console.log(\"updateProjectLoaded\")\r\n  let newProject\r\n  switch (action.type) {    \r\n    case FETCH_ALL_PROJECT:\r\n      return Object.assign({},{\r\n        projectId:action.id,\r\n        projectName:action.name\r\n      })\r\n    case ADD_PROJECT:\r\n        state.project.push(Object.assign({},{\r\n            id:action.id,\r\n            ownerName:action.ownerName,\r\n            topic:action.topic,\r\n            projectName:action.name,\r\n            start:action.start,\r\n            end:action.end,\r\n            private:action.isPrivate,     \r\n            progress:action.progress     \r\n        }))\r\n        return Object.assign({}, state,{needUpdate:action.id});\r\n    case UPDATE_PROJECT: \r\n        newProject=[];\r\n        state.project=state.project.map(function (item, key) {\r\n            if (item.id!=action.id) newProject.push(item)\r\n              else{\r\n                newProject.push(Object.assign({},{\r\n                  id:action.id,\r\n                  ownerName:action.ownerName,\r\n                  topic:action.topic,\r\n                  projectName:action.name,\r\n                  start:action.start,\r\n                  end:action.end,\r\n                  private:action.isPrivate,     \r\n                  progress:action.progress\r\n              }))}})      \r\n        return Object.assign({},state, {project:newProject},{needUpdate:action.id});\r\n        \r\n    case DELETE_PROJECT:    \r\n        newProject=[];\r\n        state.project=state.project.map(function (item, key) {\r\n            if (item.id!=action.id) newProject.push(item)\r\n        })\r\n        return Object.assign({},state, {project:newProject},{needUpdate:action.id});\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst rootReducer = combineReducers({\r\n  postsBySubreddit,\r\n  selectedSubreddit,\r\n  changeStatusLogin,\r\n  changeStatusProject,\r\n  updateProjectLoaded,\r\n})\r\n\r\nexport default rootReducer","//style \r\nimport './App.scss';\r\n\r\nimport React, { Component } from 'react';\r\n\r\n//context\r\nimport Client from \"./Client\"\r\n\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n//redux\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from './reducers'\r\nimport { Provider } from 'react-redux'\r\n\r\n//\r\nconst loggerMiddleware = createLogger()\r\n\r\nfunction configureStore(preloadedState) {\r\n  return createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    applyMiddleware(thunkMiddleware, loggerMiddleware)\r\n  )\r\n}\r\n\r\nconst store = configureStore()\r\n\r\n// store.subscribe(() =>{console.log(\"subscribe\")\r\n//  console.log(store.getState())})\r\n\r\nclass App extends Component {\r\n  \r\n\r\n  render() {   \r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <Client />\r\n    </Provider>   \r\n)}}\r\n\r\n\r\nexport default (App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}