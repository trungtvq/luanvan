{"version":3,"sources":["service/storage.js","actions/index.js","service/gRPC/loadAllProject.js","Client.js","reducers/index.js","App.js","service/chat.js","gRPC/team/team_grpc_web_pb.js","service/gRPC/loadAllBacklog.js","service/gRPC/loadAllSprint.js","service/gRPC/loadAllTeam.js","service/gRPC/loadAllMember.js","contexts/authContext.js","gRPC/myproject/myproject_grpc_web_pb.js","gRPC/auth/auth_grpc_web_pb.js","gRPC/sprintbacklog/sprintbacklog_grpc_web_pb.js","gRPC/sprint/sprint_grpc_web_pb.js","assets/img/brand/logo.png","gRPC/chat/chat_grpc_web_pb.js","gRPC/chat/chat_pb.js","gRPC/sprint/sprint_pb.js","gRPC/team/team_pb.js","gRPC/sprintbacklog/sprintbacklog_pb.js","gRPC/myproject/myproject_pb.js","gRPC/auth/auth_pb.js","serviceWorker.js","index.js"],"names":["getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","error","setItem","stringify","__webpack_require__","d","__webpack_exports__","REQUEST_POSTS","RECEIVE_POSTS","SELECT_SUBREDDIT","INVALIDATE_SUBREDDIT","DO_LOGIN","DO_LOGOUT","GET_CURENT_PROJECT","SET_PROJECT","SET_TEAM","LOAD_TEAM","SET_SPRINTS","SET_MEMBERS","SET_SPRINTBACKLOGS","saveLogin","removeLogin","setProject","setTeam","setSprint","setSprintBacklogs","addProject","deleteProject","updateProject","ADD_PROJECT","UPDATE_PROJECT","DELETE_PROJECT","id","token","email","name","avatar","type","sprints","sprintbacklogs","topic","start","end","isPrivate","progress","proto","myproject","require","getAllProject","myprojectService","MyprojectClient","GetAllProjectReq","setRequesterid","setCookie","response","projects","on","getStatus","push","getProjectid","getTopic","projectName","getProjectname","getStart","getEnd","private","getPrivate","getProgress","store","dispatch","status","flag","cp","lastCreated","lastName","map","p","loadAllTeam","loadAllSprint","auth","loading","react_default","a","createElement","className","DefaultLayout","Loadable","loader","Promise","all","e","then","bind","Login","Register","Page404","Page500","PagePay","ResetSecond","ResetFirst","Donate","Demo","MyProject","ProfileDetail","ProfileEdit","Client","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","authService","AuthClient","AuthSessionReq","setSession","setId","assertThisInitialized","authSession","loadAllProject","state","hasProject","hasTeam","authContext","Provider","BrowserRouter","isLogin","Switch","Route","exact","path","component","Chat","Component","connect","changeStatusLogin","updateProjectLoaded","changeStatusProject","currentProject","project","random","rootReducer","combineReducers","postsBySubreddit","arguments","length","undefined","action","assign","defineProperty","subreddit","isFetching","didInvalidate","items","posts","lastUpdated","receivedAt","selectedSubreddit","log","projectId","teamId","teamName","members","newProject","needUpdate","ownerName","item","loggerMiddleware","createLogger","preloadedState","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","App","_Component","apply","inherits","createClass","value","es","src_Client","chat","fetchChat","chatService","ChatClient","SendMsgReq","setAccesstoken","setChannelid","setName","that","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","connectChat","addResponseMessage","getSendername","getMsg","handleNewUserMessage","newMessage","setMsg","sendMsg","react__WEBPACK_IMPORTED_MODULE_6___default","react_chat_widget__WEBPACK_IMPORTED_MODULE_7__","profileAvatar","title","subtitle","grpc","web","teamtask","TeamClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","TeamPromiseClient","methodInfo_Team_addNewTeam","AbstractClientBase","MethodInfo","TeamRes","request","serializeBinary","deserializeBinary","prototype","addNewTeam","metadata","callback","rpcCall","unaryCall","methodInfo_Team_updateTeam","updateTeam","methodInfo_Team_deleteTeam","deleteTeam","methodInfo_Team_addMember","addMember","methodInfo_Team_removeMember","removeMember","methodInfo_Team_updateMember","updateMember","methodInfo_Team_getAllMember","getAllMember","serverStreaming","methodInfo_Team_getAllTeam","GetAllTeamRes","getAllTeam","module","exports","loadAllBacklog","_storage__WEBPACK_IMPORTED_MODULE_0__","_App__WEBPACK_IMPORTED_MODULE_1__","_actions__WEBPACK_IMPORTED_MODULE_2__","sprintbacklogService","sprintbacklog","SprintBacklogClient","GetAllSprintBacklogReq","setProjectid","setTeamid","getAllSprintBacklog","count","data","arr","split","parseInt","getDeadline","getBacklogid","getTitle","role","getRole","want","getWant","so","getSo","sprintName","getSprintname","priority","getPriority","estimation","getEstimation","sprint","getSprintid","getStatusbacklog","deadline","code","team","_actions__WEBPACK_IMPORTED_MODULE_1__","_App__WEBPACK_IMPORTED_MODULE_2__","sprintService","SprintClient","GetAllSprintReq","getAllSprint","getId","num","getNum","goal","getGoal","getStatussprint","_loadAllMember__WEBPACK_IMPORTED_MODULE_3__","_loadAllBacklog__WEBPACK_IMPORTED_MODULE_4__","teamService","teams","GetAllTeamReq","lastTeam","validTeam","getTeamid","getName","loadAllMember","GetAllMemberReq","mem","username","getUsername","react__WEBPACK_IMPORTED_MODULE_0__","n","React","createContext","signInEmail","login","logout","MyprojectPromiseClient","methodInfo_Myproject_addNewProject","ProjectRes","addNewProject","methodInfo_Myproject_updateProject","methodInfo_Myproject_deleteProject","methodInfo_Myproject_getAllProject","Auth","AuthPromiseClient","methodInfo_Auth_SignIn","SignInRes","signIn","methodInfo_Auth_SignUp","signUp","methodInfo_Auth_ResetPassword","ResetRes","resetPassword","methodInfo_Auth_ResetPasswordFinalStep","resetPasswordFinalStep","methodInfo_Auth_SignInGoogle","signInGoogle","methodInfo_Auth_AuthSession","SprintBacklogPromiseClient","methodInfo_SprintBacklog_deleteSprintBacklog","SprintBacklogRes","deleteSprintBacklog","methodInfo_SprintBacklog_getAllSprintBacklog","GetAllSprintBacklogRes","methodInfo_SprintBacklog_updateSprint","updateSprint","SprintPromiseClient","methodInfo_Sprint_deleteSprint","SprintRes","deleteSprint","methodInfo_Sprint_addNewSprint","addNewSprint","methodInfo_Sprint_getAllSprint","GetAllSprintRes","methodInfo_Sprint_setCurrentSprint","setCurrentSprint","methodInfo_Sprint_getSprint","getSprint","ChatPromiseClient","methodInfo_Chat_ConnectRenew","SendMsgRes","connectRenew","methodInfo_Chat_ConnectChat","methodInfo_Chat_SendMsg","jspb","goog","global","Function","exportSymbol","opt_data","Message","initialize","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","accesstoken","getAccesstoken","requesterid","getRequesterid","channelid","getChannelid","getType","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","setType","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","writeString","cloneMessage","getFieldProto3","setField","sendername","time","getTime","setSendername","setTime","setStatus","object","extend","DeleteSprintReq","projectid","sprintid","setSprintid","AddNewSprintReq","setTitle","setNum","setGoal","setStart","setEnd","statussprint","setStatussprint","option","getOption","setOption","teamid","nummember","getNummember","department","getDepartment","description","getDescription","setNummember","setDepartment","setDescription","setUsername","AddNewTeamReq","UpdateTeamReq","DeleteTeamReq","AddMemberReq","memberemail","getMemberemail","setRole","setMemberemail","RemoveMemberReq","UpdateMemberReq","UpdateSprintReq","backlogid","sprintname","setBacklogid","setSprintname","DeleteSprintBacklogReq","backlogname","getBacklogname","setBacklogname","statusbacklog","setWant","setSo","setStatusbacklog","setPriority","setEstimation","setDeadline","AddNewProjectReq","projectname","pb_private","detail","getDetail","cookie","getCookie","setTopic","setProjectname","setPrivate","setDetail","UpdateProjectReq","setProgress","DeleteProjectReq","getError","getMembers","currentsprintid","getCurrentsprintid","setError","setMembers","setCurrentsprintid","SignInReq","password","getPassword","setPassword","session","getSession","getResponse","getAvatar","setResponse","setAvatar","SignInGoogleReq","SignUpReq","ResetReq","ResetPasswordFinalStepReq","getToken","setToken","Boolean","window","location","match","toast","configure","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ebf3bbe.chunk.js","sourcesContent":["export function getFromStorage(key) {\r\n  if (!key) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const valueStr = localStorage.getItem(key);\r\n    if (valueStr) {\r\n      return JSON.parse(valueStr);\r\n    }\r\n    return null;\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function setInStorage(key, obj) {\r\n  if (!key) {\r\n    console.error('Error: Key is missing');\r\n  }\r\n\r\n try {\r\n    localStorage.setItem(key, JSON.stringify(obj));\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}","//import fetch from 'cross-fetch'\r\nexport const REQUEST_POSTS = 'REQUEST_POSTS'\r\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\r\nexport const SELECT_SUBREDDIT = 'SELECT_SUBREDDIT'\r\nexport const INVALIDATE_SUBREDDIT = 'INVALIDATE_SUBREDDIT'\r\nexport const DO_LOGIN = 'DO_LOGIN'\r\nexport const DO_LOGOUT = 'DO_LOGOUT'\r\nexport const GET_CURENT_PROJECT = 'GET_CURENT_PROJECT'\r\nexport const SET_PROJECT = 'SET_PROJECT'\r\n\r\n\r\n//hook\r\nexport const NEW_PROJECT_COME = 'NEW_PROJECT_COME'\r\nexport const UPDATE_PROJECT_COME = 'UPDATE_PROJECT_COME'\r\nexport const REMOVE_PROJECT_COME = 'REMOVE_PROJECT_COMEs'\r\nexport const SET_TEAM = 'SET_TEAM'\r\nexport const LOAD_TEAM = 'LOAD_TEAM'\r\n\r\n//sprint\r\nexport const SET_SPRINTS = 'SET_SPRINTS'\r\nexport const SET_MEMBERS='SET_MEMBERS'\r\nexport const SET_SPRINTBACKLOGS='SET_SPRINTBACKLOGS'\r\n\r\n\r\nexport function selectSubreddit(subreddit) {\r\n  return {\r\n    type: SELECT_SUBREDDIT,\r\n    subreddit\r\n  }\r\n}\r\n\r\nexport function invalidateSubreddit(subreddit) {\r\n  return {\r\n    type: INVALIDATE_SUBREDDIT,\r\n    subreddit\r\n  }\r\n}\r\nfunction requestPosts(subreddit) {\r\n  return {\r\n    type: REQUEST_POSTS,\r\n    subreddit\r\n  }\r\n}\r\n\r\nfunction receivePosts(subreddit, json) {\r\n  return {\r\n    type: RECEIVE_POSTS,\r\n    subreddit,\r\n    posts: json.data.children.map(child => child.data),\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\n\r\nfunction fetchPosts(subreddit) {\r\n  return dispatch => {\r\n    dispatch(requestPosts(subreddit))\r\n    return fetch(`https://www.reddit.com/r/${subreddit}.json`)\r\n      .then(response => response.json())\r\n      .then(json => dispatch(receivePosts(subreddit, json)))\r\n  }\r\n}\r\n\r\nfunction shouldFetchPosts(state, subreddit) {\r\n  const posts = state.postsBySubreddit[subreddit]\r\n  if (!posts) {\r\n    return true\r\n  } else if (posts.isFetching) {\r\n    return false\r\n  } else {\r\n    return posts.didInvalidate\r\n  }\r\n}\r\n\r\nexport function fetchPostsIfNeeded(subreddit) {\r\n  console.log(\"fetchPostsIfNeeded\")  \r\n  return (dispatch, getState) => {\r\n    console.log(dispatch)\r\n    console.log(getState())\r\n    if (shouldFetchPosts(getState(), subreddit)) {\r\n      return dispatch(fetchPosts(subreddit))\r\n    }\r\n  }\r\n}\r\n\r\nexport function subcriptChannel(channelId){\r\n  \r\n}\r\n\r\nexport function saveLogin(id,token,email,name,avatar) {\r\n\r\n  return {\r\n    type: DO_LOGIN,\r\n    id,\r\n    token,\r\n    email,\r\n    name,\r\n    avatar\r\n  }\r\n\r\n}\r\nexport function removeLogin() {\r\n  return {\r\n    type: DO_LOGOUT\r\n  }\r\n}\r\nexport function getProject(){\r\n  return {\r\n    type: GET_CURENT_PROJECT\r\n  }\r\n}\r\nexport function setProject(id,name){\r\n  return {\r\n    type: SET_PROJECT,\r\n    id,\r\n    name\r\n  }\r\n}\r\n\r\nexport function setTeam(id,name){\r\n  return {\r\n    type: SET_TEAM,\r\n    id,\r\n    name\r\n  }\r\n}\r\n\r\nexport function setSprint(sprints){\r\n  return {\r\n    type: SET_SPRINTS,\r\n    sprints\r\n  }\r\n}\r\nexport function setSprintBacklogs(sprintbacklogs){\r\n  return {\r\n    type: SET_SPRINTBACKLOGS,\r\n    sprintbacklogs\r\n  }\r\n}\r\nexport function setMembers(sprint){\r\n  return {\r\n    type: SET_MEMBERS,\r\n    sprint\r\n  }\r\n}\r\n\r\nexport function loadTeam(id,name){\r\n  return {\r\n    type: SET_TEAM,\r\n    id,\r\n    name\r\n  }\r\n}\r\n\r\nexport function addProject(id,topic,name,start,end,isPrivate,progress){\r\n  return {\r\n    type: ADD_PROJECT,\r\n    id,topic,name,start,end,isPrivate,progress\r\n  }\r\n}\r\nexport function deleteProject(id){\r\n  return {\r\n    type: DELETE_PROJECT,\r\n    id\r\n  }\r\n}\r\nexport function updateProject(id,topic,name,start,end,isPrivate,progress  ){\r\n  return {\r\n    type: UPDATE_PROJECT,\r\n    id,topic,name,start,end,isPrivate,progress\r\n  }\r\n}\r\nexport function fetchmyproject(id,ownerName,topic,name,start,end,isPrivate){\r\n  return {\r\n    type: ADD_PROJECT,\r\n    id,ownerName,topic,name,start,end,isPrivate\r\n  }\r\n}\r\n\r\n//TYPE:\r\nexport const ADD_PROJECT = 'ADD_PROJECT'\r\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT'\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT'\r\nexport const FORCE_RERENDER = 'FORCE_RERENDER'\r\nexport const NOTIFY_COME = 'FORCE_RERENDER'\r\n\r\nfunction fetch_notify(){\r\n\r\n}\r\nfunction fetch_message(){\r\n\r\n}\r\nfunction fetch_task(){\r\n\r\n}\r\nexport function hook(type,id,detail){\r\n  return (dispatch, getState) => {\r\n  switch (type){\r\n    case \"new_message\":\r\n        return dispatch(fetch_message(id,detail))\r\n    case \"new_notify\":\r\n        return dispatch(fetch_notify(id,detail))\r\n    case \"new_task\":\r\n        return dispatch(fetch_task(id,detail))\r\n    \r\n    }\r\n  }\r\n}"," import React, { Component } from 'react';\r\n import { Redirect } from 'react-router-dom';\r\nimport { addProject, setProject } from '../../actions'\r\nimport {store} from '../../App'\r\n\r\n import {\r\n    getFromStorage,\r\n    setInStorage\r\n  } from '../storage'\r\n  \r\nimport { setTeam } from '../../actions'\r\nimport loadAllSprint from './loadAllSprint';\r\nimport loadAllTeam from './loadAllTeam';\r\nconst proto = {};\r\nproto.myproject = require('../../gRPC/myproject/myproject_grpc_web_pb');\r\n\r\nconst getAllProject= ()=>{\r\n    const myprojectService = new proto.myproject.MyprojectClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    var GetAllProjectReq = new proto.myproject.GetAllProjectReq();\r\n    GetAllProjectReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllProjectReq.setCookie(getFromStorage(\"accessToken\"));\r\n    let that = this\r\n    var response = myprojectService.getAllProject(GetAllProjectReq, metadata)\r\n    let projects=[]\r\n    response.on('data', function (response) {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n            projects.push({\r\n                id:response.getProjectid(),\r\n                topic:response.getTopic(),\r\n                projectName:response.getProjectname(),\r\n                start:response.getStart(),\r\n                end:response.getEnd(),\r\n                private:response.getPrivate(),\r\n                progress:response.getProgress()\r\n            })\r\n            store.dispatch(addProject(response.getProjectid(), response.getTopic(), response.getProjectname(), response.getStart(), response.getEnd(), response.getPrivate(), response.getProgress()))\r\n            \r\n        }\r\n        \r\n    });\r\n    response.on('status', function (status) {\r\n        let flag = false\r\n        let cp = getFromStorage(\"currentProject\")\r\n        let lastCreated = ''\r\n        let lastName = ''\r\n        projects.map(p => {\r\n            if (p.id == cp ) {\r\n                flag = true\r\n                store.dispatch(setProject(cp, p.projectName))\r\n            }\r\n            lastCreated = p.id\r\n            lastName = p.projectName\r\n            return p\r\n        })\r\n\r\n        if (flag == false){\r\n\r\n            cp=lastCreated          \r\n            store.dispatch(setProject(lastCreated, lastName))\r\n        }\r\n        loadAllTeam(cp)\r\n        loadAllSprint(cp)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n\r\n    });\r\n}\r\nexport default (getAllProject)","import React, { Component } from 'react';\r\nimport cookie from 'react-cookies';\r\nimport { saveLogin, setTeam, addProject, setProject } from './actions'\r\nimport { connect } from 'react-redux'\r\nimport authContext from \"./contexts/authContext\";///////\r\nimport { HashRouter, BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Chat from './service/chat'\r\nimport Loadable from 'react-loadable';\r\nimport {\r\n    getFromStorage,\r\n    setInStorage\r\n} from './service/storage'\r\n\r\nimport getAllProject from './service/gRPC/loadAllProject'\r\nimport { setIn } from 'immutable';\r\nimport loadAllProject from './service/gRPC/loadAllProject';\r\n\r\nconst proto = {};\r\nproto.auth = require('./gRPC/auth/auth_grpc_web_pb');\r\n// Containers layout\r\n\r\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\r\n\r\nconst DefaultLayout = Loadable({\r\n    loader: () => import('./containers/DefaultLayout'),\r\n    loading\r\n});\r\nconst Login = Loadable({\r\n    loader: () => import('./views/Pages/Login'),\r\n    loading\r\n});\r\n\r\nconst Register = Loadable({\r\n    loader: () => import('./views/Pages/Register'),\r\n    loading\r\n});\r\n\r\nconst Page404 = Loadable({\r\n    loader: () => import('./views/Pages/Page404'),\r\n    loading\r\n});\r\n\r\nconst Page500 = Loadable({\r\n    loader: () => import('./views/Pages/Page500'),\r\n    loading\r\n});\r\nconst PagePay = Loadable({\r\n    loader: () => import('./views/Pages/PagePay'),\r\n    loading\r\n});\r\n\r\n\r\nconst ResetSecond = Loadable({\r\n    loader: () => import('./views/Pages/ResetSecond'),\r\n    loading\r\n});\r\n\r\nconst ResetFirst = Loadable({\r\n    loader: () => import('./views/Pages/ResetFirst'),\r\n    loading\r\n});\r\n\r\n\r\n//Home\r\n\r\nconst Donate = Loadable({\r\n    loader: () => import('./views/Pages/Donate'),\r\n    loading\r\n});\r\n\r\n//\r\nconst Demo = Loadable({\r\n    loader: () => import('./containers/HomeNav'),\r\n    loading\r\n});\r\n\r\n//PJ\r\nconst MyProject = Loadable({\r\n    loader: () => import('./views/Personal/Project/MyProject'),\r\n    loading\r\n});\r\nconst DailySchedule = Loadable({\r\n    loader: () => import('./views/Workspace/DailySchedule/DailySchedule'),\r\n    loading\r\n});\r\n\r\n\r\n\r\n\r\n//profile\r\nconst ProfileDetail = Loadable({\r\n    loader: () => import('./views/Personal/Profile/detail'),\r\n    loading\r\n});\r\nconst ProfileEdit = Loadable({\r\n    loader: () => import('./views/Personal/Profile/edit'),\r\n    loading\r\n});\r\n\r\nclass Client extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasProject: false,\r\n            hasTeam: false\r\n        }\r\n    };\r\n    auth = () => {\r\n        const authService = new proto.auth.AuthClient('https://www.overlead.co');\r\n        var metadata = {};\r\n        var AuthSessionReq = new proto.auth.AuthSessionReq();\r\n        AuthSessionReq.setSession(getFromStorage(\"accessToken\"));\r\n        AuthSessionReq.setId(getFromStorage(\"userId\"));\r\n        let that = this\r\n        let dispatch = this.props.dispatch\r\n        authService.authSession(AuthSessionReq, metadata, (err, response) => {\r\n            if (err) {\r\n\r\n\r\n            } else {\r\n                if (response.getStatus() == \"SUCCESS\") {\r\n\r\n                    dispatch(saveLogin(getFromStorage(\"userId\"), getFromStorage(\"accessToken\"), getFromStorage(\"username\"), getFromStorage(\"name\"), getFromStorage(\"avatar\")))\r\n                    loadAllProject()\r\n\r\n\r\n                }\r\n                else {\r\n                    setInStorage(\"userId\", \"\")\r\n                    setInStorage(\"accessToken\", \"\")\r\n                    setInStorage(\"avatar\", \"\")\r\n                    setInStorage(\"name\", \"\")\r\n                    setInStorage(\"username\", \"\")\r\n                }\r\n            }\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.auth();\r\n    }\r\n\r\n   \r\n   \r\n\r\n    render() {\r\n        return (\r\n            <authContext.Provider>\r\n                <BrowserRouter>\r\n                    {\r\n                        this.props.isLogin ?\r\n                            (\r\n                                this.props.hasProject ?\r\n                                    (this.props.hasTeam ?\r\n                                        <Switch>\r\n                                            <Route exact path=\"/homeNav\" name=\"HomeNav\" component={Demo} />\r\n\r\n                                            <Route exact path=\"/donate\" name=\"donate\" component={Donate} />\r\n\r\n                                            <Route exact path=\"/myproject\" name=\"myproject\" component={MyProject} />\r\n\r\n                                            <Route exact path=\"/Profile/Detail\" name=\"ProfileDetail\" component={ProfileDetail} />\r\n                                            <Route exact path=\"/Profile/Edit\" name=\"ProjectTodo\" component={ProfileEdit} />\r\n                                            <Route exact path=\"/Profile/Edit\" name=\"ProjectTodo\" component={ProfileEdit} />\r\n\r\n\r\n                                            <Route exact path=\"/chat\" name=\"Chat Page\" component={Chat} />\r\n\r\n\r\n                                            <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\r\n                                            <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\r\n                                            <Route exact path=\"/pay\" name=\"Page Pay\" component={PagePay} />\r\n                                            <Route exact path=\"/dashboard\" name=\"dashboard\" component={DefaultLayout} />\r\n\r\n\r\n                                            <Route path=\"/\" name=\"Home\" component={DefaultLayout} />\r\n\r\n\r\n                                        </Switch>\r\n                                        :\r\n                                        <Switch>\r\n\r\n                                            <Route exact path=\"/homeNav\" name=\"HomeNav\" component={Demo} />\r\n\r\n                                            <Route exact path=\"/donate\" name=\"donate\" component={Donate} />\r\n\r\n                                            <Route exact path=\"/myproject\" name=\"myproject\" component={MyProject} />\r\n\r\n                                            <Route exact path=\"/Profile/Detail\" name=\"ProfileDetail\" component={ProfileDetail} />\r\n                                            <Route exact path=\"/Profile/Edit\" name=\"ProjectTodo\" component={ProfileEdit} />\r\n\r\n\r\n                                            <Route exact path=\"/chat\" name=\"Chat Page\" component={Chat} />\r\n\r\n\r\n                                            <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\r\n                                            <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\r\n                                            <Route exact path=\"/pay\" name=\"Page Pay\" component={PagePay} />\r\n                                            <Route exact path=\"/dashboard\" name=\"dashboard\" component={DefaultLayout} />\r\n\r\n\r\n                                            <Route path=\"/\" name=\"Home\" component={DefaultLayout} />\r\n\r\n\r\n                                        </Switch>\r\n\r\n                                    ) :\r\n                                    (this.props.hasTeam ?\r\n                                        <Switch>\r\n                                            <Route exact path=\"/homeNav\" name=\"HomeNav\" component={Demo} />\r\n\r\n                                            <Route exact path=\"/donate\" name=\"donate\" component={Donate} />\r\n\r\n                                            <Route exact path=\"/myproject\" name=\"myproject\" component={MyProject} />\r\n\r\n                                            <Route exact path=\"/Profile/Detail\" name=\"ProfileDetail\" component={ProfileDetail} />\r\n                                            <Route exact path=\"/Profile/Edit\" name=\"ProjectTodo\" component={ProfileEdit} />\r\n\r\n\r\n                                            <Route exact path=\"/chat\" name=\"Chat Page\" component={Chat} />\r\n\r\n\r\n                                            <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\r\n                                            <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\r\n                                            <Route exact path=\"/pay\" name=\"Page Pay\" component={PagePay} />\r\n\r\n\r\n                                            <Route path=\"/\" name=\"Home\" component={MyProject} />\r\n\r\n\r\n                                        </Switch>\r\n                                        :\r\n                                        <Switch>\r\n                                            <Route exact path=\"/homeNav\" name=\"HomeNav\" component={Demo} />\r\n\r\n                                            <Route exact path=\"/donate\" name=\"donate\" component={Donate} />\r\n\r\n                                            <Route exact path=\"/myproject\" name=\"myproject\" component={MyProject} />\r\n\r\n                                            <Route exact path=\"/Profile/Detail\" name=\"ProfileDetail\" component={ProfileDetail} />\r\n                                            <Route exact path=\"/Profile/Edit\" name=\"ProjectTodo\" component={ProfileEdit} />\r\n\r\n\r\n                                            <Route exact path=\"/chat\" name=\"Chat Page\" component={Chat} />\r\n\r\n\r\n                                            <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\r\n                                            <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\r\n                                            <Route exact path=\"/pay\" name=\"Page Pay\" component={PagePay} />\r\n\r\n                                            <Route path=\"/\" name=\"Home\" component={MyProject} />\r\n\r\n\r\n                                        </Switch>\r\n                                    )\r\n\r\n\r\n                            )\r\n\r\n                            : <div>\r\n                                <Switch>\r\n                                    <Route exact path=\"/register\" name=\"Register Page\" component={Register} />\r\n                                    <Route exact path=\"/ResetFirst\" name=\"ResetSecond Page\" component={ResetFirst} />\r\n                                    <Route exact path=\"/ResetSecond\" name=\"ResetSecond Page\" component={ResetSecond} />\r\n                                    <Route exact path=\"/login\" name=\"Login Page\" component={Login} />\r\n                                    <Route exact path=\"/donate\" name=\"donate\" component={Donate} />\r\n\r\n                                    <Route path=\"/\" name=\"home\" component={Login} />\r\n\r\n                                </Switch>\r\n\r\n                            </div>\r\n                    }\r\n                </BrowserRouter>\r\n            </authContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { changeStatusLogin, updateProjectLoaded, changeStatusProject } = state\r\n    const { isLogin, } = changeStatusLogin\r\n    const currentProject = updateProjectLoaded.project\r\n    const { hasProject, hasTeam, random } = changeStatusProject\r\n    return {\r\n        isLogin, currentProject, hasProject, hasTeam, random\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Client);\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n  SELECT_SUBREDDIT,\r\n  INVALIDATE_SUBREDDIT,\r\n  REQUEST_POSTS,\r\n  RECEIVE_POSTS,\r\n  DO_LOGOUT,\r\n  DO_LOGIN,\r\n  GET_CURENT_PROJECT,\r\n  SET_PROJECT,\r\n  UPDATE_PROJECT,\r\n  DELETE_PROJECT,\r\n  ADD_PROJECT,\r\n  SET_TEAM,\r\n  LOAD_TEAM,\r\n  SET_MEMBERS,\r\n  SET_SPRINTS,\r\n  SET_SPRINTBACKLOGS\r\n} from '../actions'\r\nimport {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../service/storage'\r\nimport loadAllMember from '../service/gRPC/loadAllMember'\r\nimport loadAllBacklog from '../service/gRPC/loadAllBacklog';\r\nimport loadAllSprint from '../service/gRPC/loadAllSprint';\r\nimport loadAllTeam from '../service/gRPC/loadAllTeam';\r\n\r\nfunction selectedSubreddit(state = 'reactjs', action) {\r\n  switch (action.type) {\r\n    case SELECT_SUBREDDIT:\r\n      return action.subreddit\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction posts(\r\n  state = {\r\n    isFetching: false,\r\n    didInvalidate: false,\r\n    items: []\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case INVALIDATE_SUBREDDIT:\r\n      return Object.assign({}, state, {\r\n        didInvalidate: true\r\n      })\r\n    case REQUEST_POSTS:\r\n      return Object.assign({}, state, {\r\n        isFetching: true,\r\n        didInvalidate: false\r\n      })\r\n    case RECEIVE_POSTS:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        didInvalidate: false,\r\n        items: action.posts,\r\n        lastUpdated: action.receivedAt\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction postsBySubreddit(state = {}, action) {\r\n  switch (action.type) {\r\n    case INVALIDATE_SUBREDDIT:\r\n    case RECEIVE_POSTS:\r\n    case REQUEST_POSTS:\r\n      return Object.assign({}, state, {\r\n        [action.subreddit]: posts(state[action.subreddit], action)\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//update state login\r\nfunction changeStatusLogin(state = {isLogin:false}, action) {\r\n  console.log(\"changeStatusLogin\"+action.type)\r\n  console.log(action)\r\n  switch (action.type) {\r\n    case DO_LOGIN:    \r\n      if (action.avatar!=undefined && action.avatar!=\"\")\r\n      setInStorage('avatar',action.avatar)\r\n      setInStorage('accessToken',action.token)\r\n      setInStorage('userId',action.id)\r\n      return Object.assign({}, {\r\n                id:action.id,\r\n                token:action.token,\r\n                isLogin:true,\r\n                email:action.email,\r\n                name:action.name,\r\n                avatar:action.avatar})      \r\n    case DO_LOGOUT:\r\n      setInStorage('avatar',\"\")\r\n      setInStorage('accessToken',\"\")\r\n      setInStorage('userId',\"\")\r\n      setInStorage('teamId',\"\")\r\n      setInStorage('currentProject',\"\")\r\n      return Object.assign({},{isLogin:false})\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//state of current project\r\nfunction changeStatusProject(state={projectId:\"noid\"},action){\r\n  console.log(\"changeStatusProject\")\r\n  switch (action.type) {    \r\n    case SET_PROJECT:\r\n      setInStorage('currentProject', action.id)\r\n      setInStorage('currentProjectName', action.name)      \r\n      return Object.assign({},state,{\r\n        projectId:action.id,\r\n        projectName:action.name,\r\n        hasProject:action.id==\"\"?false:true,\r\n      })\r\n    case GET_CURENT_PROJECT:    \r\n    case SET_TEAM:\r\n        setInStorage('teamId',action.id)\r\n        setInStorage('teamName',action.name)  \r\n        \r\n        return Object.assign({},state,{\r\n          teamId:action.id,\r\n          teamName:action.name,\r\n          hasTeam:true,     \r\n        })\r\n  \r\n\r\n    case SET_SPRINTS:\r\n        return Object.assign({},state,{\r\n          sprints:action.sprints\r\n        })\r\n\r\n    case SET_SPRINTBACKLOGS:\r\n      console.log(\"setSprintbacklog\")\r\n      return Object.assign({},state,\r\n       { sprintbacklogs:action.sprintbacklogs\r\n      }\r\n        )\r\n   \r\n    case SET_MEMBERS:\r\n        return Object.assign({},state,{\r\n          members:action.members\r\n        })\r\n    case LOAD_TEAM:\r\n    default:\r\n      return state\r\n  }\r\n}\r\nfunction changeStatusTeam(state={},action){\r\n  switch (action.type){\r\n    \r\n    \r\n  }\r\n}\r\nfunction updateProjectLoaded(state={project:[],needUpdate:false},action){\r\n  let newProject\r\n  switch (action.type) {    \r\n    case ADD_PROJECT:\r\n        state.project.push(Object.assign({},{\r\n            id:action.id,\r\n            ownerName:action.ownerName,\r\n            topic:action.topic,\r\n            projectName:action.name,\r\n            start:action.start,\r\n            end:action.end,\r\n            private:action.isPrivate,     \r\n            progress:action.progress     \r\n        }))\r\n        return Object.assign({}, state,{needUpdate:action.id});\r\n    case UPDATE_PROJECT: \r\n        newProject=[];\r\n        state.project=state.project.map(function (item, key) {\r\n            if (item.id!=action.id) newProject.push(item)\r\n              else{\r\n                newProject.push(Object.assign({},{\r\n                  id:action.id,\r\n                  ownerName:action.ownerName,\r\n                  topic:action.topic,\r\n                  projectName:action.name,\r\n                  start:action.start,\r\n                  end:action.end,\r\n                  private:action.isPrivate,     \r\n                  progress:action.progress\r\n              }))}})      \r\n        return Object.assign({},state, {project:newProject},{needUpdate:action.id});\r\n        \r\n    case DELETE_PROJECT:    \r\n        newProject=[];\r\n        state.project=state.project.map(function (item, key) {\r\n            if (item.id!=action.id) newProject.push(item)\r\n        })\r\n        return Object.assign({},state, {project:newProject},{needUpdate:action.id});\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  postsBySubreddit,\r\n  selectedSubreddit,\r\n  changeStatusLogin,\r\n  changeStatusProject,\r\n  updateProjectLoaded,\r\n})\r\n\r\nexport default rootReducer","//style \r\nimport './App.scss';\r\n\r\nimport React, { Component } from 'react';\r\n\r\n//context\r\nimport Client from \"./Client\"\r\n\r\n//redux\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from './reducers'\r\nimport { Provider } from 'react-redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst loggerMiddleware = createLogger()\r\n\r\nfunction configureStore(preloadedState) {\r\n  return createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeWithDevTools(\r\n    applyMiddleware(thunkMiddleware, loggerMiddleware))\r\n  )\r\n}\r\n\r\nexport const store = configureStore()\r\n// store.subscribe(() =>{console.log(\"subscribe\")\r\n//  console.log(store.getState())})\r\nexport class App extends Component {\r\n\r\n  render() {   \r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <Client />\r\n    </Provider>   \r\n)}} \r\n","import React, { Component } from 'react';\r\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\r\n\r\nimport 'react-chat-widget/lib/styles.css';\r\nimport logo from '../assets/img/brand/logo.png';\r\nimport cookie from 'react-cookies';\r\nimport {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../service/storage'\r\nconst proto = {};\r\n\r\nproto.chat = require('./../gRPC/chat/chat_grpc_web_pb');\r\nclass Chat extends Component {\r\n  componentDidMount() {\r\n\r\n    this.fetchChat()\r\n  }\r\n  fetchChat = () => {\r\n    console.log(\"fetchChat\")\r\n    const chatService = new proto.chat.ChatClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var SendMsgReq = new proto.chat.SendMsgReq();\r\n    SendMsgReq.setRequesterid(getFromStorage(\"userId\"));\r\n    SendMsgReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    SendMsgReq.setChannelid(getFromStorage(\"teamId\"));\r\n    //SendMsgReq.setChannelid(getFromStorage(\"currentProject\"));\r\n    SendMsgReq.setName(getFromStorage(\"name\"))\r\n    let that = this\r\n    \r\n\r\n    chatService.connectChat(SendMsgReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n        console.log(\"error\")\r\n        that.fetchChat()\r\n      } else { //if success\r\n        //get response\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          addResponseMessage(response.getSendername() + \" said: \" + response.getMsg());\r\n          that.fetchChat()\r\n          \r\n        } else {\r\n          that.fetchChat()\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  handleNewUserMessage = (newMessage) => {\r\n    const chatService = new proto.chat.ChatClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var SendMsgReq = new proto.chat.SendMsgReq();\r\n    SendMsgReq.setRequesterid(getFromStorage(\"userId\"));\r\n    SendMsgReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    SendMsgReq.setChannelid(getFromStorage(\"teamId\"));\r\n    SendMsgReq.setName(getFromStorage(\"name\"))\r\n    SendMsgReq.setMsg(newMessage)\r\n\r\n    chatService.sendMsg(SendMsgReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n        console.log(\"error\")\r\n      } else {\r\n        console.log(response.getStatus())\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Widget\r\n          handleNewUserMessage={this.handleNewUserMessage}\r\n          profileAvatar={getFromStorage(\"avatar\")}\r\n          title={'Conversation team \"'+ getFromStorage(\"teamName\")+'\"'}\r\n          subtitle=\"Let's help your team\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Chat;","/**\n * @fileoverview gRPC-Web generated client stub for teamtask\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.teamtask = require('./team_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.teamtask.TeamClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.teamtask.TeamPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.AddNewTeamReq,\n *   !proto.teamtask.TeamRes>}\n */\nconst methodInfo_Team_addNewTeam = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamRes,\n  /** @param {!proto.teamtask.AddNewTeamReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.AddNewTeamReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.addNewTeam =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.Team/addNewTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_addNewTeam,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.AddNewTeamReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamPromiseClient.prototype.addNewTeam =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.Team/addNewTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_addNewTeam);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.UpdateTeamReq,\n *   !proto.teamtask.TeamRes>}\n */\nconst methodInfo_Team_updateTeam = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamRes,\n  /** @param {!proto.teamtask.UpdateTeamReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.UpdateTeamReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.updateTeam =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.Team/updateTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_updateTeam,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.UpdateTeamReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamPromiseClient.prototype.updateTeam =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.Team/updateTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_updateTeam);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.DeleteTeamReq,\n *   !proto.teamtask.TeamRes>}\n */\nconst methodInfo_Team_deleteTeam = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamRes,\n  /** @param {!proto.teamtask.DeleteTeamReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.DeleteTeamReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.deleteTeam =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.Team/deleteTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_deleteTeam,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.DeleteTeamReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamPromiseClient.prototype.deleteTeam =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.Team/deleteTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_deleteTeam);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.AddMemberReq,\n *   !proto.teamtask.TeamRes>}\n */\nconst methodInfo_Team_addMember = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamRes,\n  /** @param {!proto.teamtask.AddMemberReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.AddMemberReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.addMember =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.Team/addMember',\n      request,\n      metadata || {},\n      methodInfo_Team_addMember,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.AddMemberReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamPromiseClient.prototype.addMember =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.Team/addMember',\n      request,\n      metadata || {},\n      methodInfo_Team_addMember);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.RemoveMemberReq,\n *   !proto.teamtask.TeamRes>}\n */\nconst methodInfo_Team_removeMember = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamRes,\n  /** @param {!proto.teamtask.RemoveMemberReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.RemoveMemberReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.removeMember =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.Team/removeMember',\n      request,\n      metadata || {},\n      methodInfo_Team_removeMember,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.RemoveMemberReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamPromiseClient.prototype.removeMember =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.Team/removeMember',\n      request,\n      metadata || {},\n      methodInfo_Team_removeMember);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.UpdateMemberReq,\n *   !proto.teamtask.TeamRes>}\n */\nconst methodInfo_Team_updateMember = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamRes,\n  /** @param {!proto.teamtask.UpdateMemberReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.UpdateMemberReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.updateMember =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.Team/updateMember',\n      request,\n      metadata || {},\n      methodInfo_Team_updateMember,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.UpdateMemberReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamPromiseClient.prototype.updateMember =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.Team/updateMember',\n      request,\n      metadata || {},\n      methodInfo_Team_updateMember);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.GetAllMemberReq,\n *   !proto.teamtask.TeamRes>}\n */\nconst methodInfo_Team_getAllMember = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamRes,\n  /** @param {!proto.teamtask.GetAllMemberReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.GetAllMemberReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.getAllMember =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/teamtask.Team/getAllMember',\n      request,\n      metadata || {},\n      methodInfo_Team_getAllMember);\n};\n\n\n/**\n * @param {!proto.teamtask.GetAllMemberReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamPromiseClient.prototype.getAllMember =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/teamtask.Team/getAllMember',\n      request,\n      metadata || {},\n      methodInfo_Team_getAllMember);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.GetAllTeamReq,\n *   !proto.teamtask.GetAllTeamRes>}\n */\nconst methodInfo_Team_getAllTeam = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.GetAllTeamRes,\n  /** @param {!proto.teamtask.GetAllTeamReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.GetAllTeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.GetAllTeamReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.GetAllTeamRes>}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.getAllTeam =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/teamtask.Team/getAllTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_getAllTeam);\n};\n\n\n/**\n * @param {!proto.teamtask.GetAllTeamReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.GetAllTeamRes>}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamPromiseClient.prototype.getAllTeam =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/teamtask.Team/getAllTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_getAllTeam);\n};\n\n\nmodule.exports = proto.teamtask;\n\n","import {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../storage'\r\nimport {store} from '../../App'\r\nimport { setSprintBacklogs } from '../../actions'\r\n\r\nconst proto = {};\r\nproto.team = require('../../gRPC/team/team_grpc_web_pb');\r\nproto.sprintbacklog = require('../../gRPC/sprintbacklog/sprintbacklog_grpc_web_pb');\r\n\r\nexport default function loadAllBacklog() {\r\n  console.log(\"loadAllSprintBacklog\")\r\n    const sprintbacklogService = new proto.sprintbacklog.SprintBacklogClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    var GetAllSprintBacklogReq = new proto.sprintbacklog.GetAllSprintBacklogReq();\r\n    GetAllSprintBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllSprintBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllSprintBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    GetAllSprintBacklogReq.setTeamid(getFromStorage(\"teamId\"));\r\n\r\n    var response = sprintbacklogService.getAllSprintBacklog(GetAllSprintBacklogReq, metadata)\r\n    let that = this\r\n    let count = 1;\r\n    let data=[]\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        count++\r\n        let arr = response.getStart().split('-');\r\n        let start = \"\"\r\n        let end = \"\"\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10) + 1) + \"/\" + arr[4]\r\n        } else {\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10) + 1) + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n        arr = response.getDeadline().split('-')\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10) + 1) + \"/\" + arr[4]\r\n        } else {\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10) + 1) + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n        data.push(\r\n          {\r\n            id: response.getBacklogid(),\r\n            title: response.getTitle(),\r\n            role: response.getRole(),\r\n            want: response.getWant(),\r\n            so: response.getSo(),\r\n            sprintName: response.getSprintname(),\r\n            priority: response.getPriority(),\r\n            estimation: response.getEstimation(),\r\n            sprint: response.getSprintid(),\r\n            status: response.getStatusbacklog(),\r\n            start: start,\r\n            deadline: end\r\n          })\r\n      }\r\n    })\r\n  \r\n  \r\n  response.on('status', function(status) {\r\n    console.log(count)\r\n    if (status.code != 0) console.log(status)\r\n    else {\r\n      setInStorage(\"sprintbacklog\", data)\r\n      store.dispatch(setSprintBacklogs(data))\r\n      \r\n    }\r\n  });\r\n  response.on('end', function(end) {\r\n    console.log(\"end\")\r\n    console.log(end)\r\n  });\r\n\r\n\r\n}","\r\nimport {\r\n    getFromStorage,\r\n    setInStorage\r\n  } from '../storage'\r\n  import { setSprint } from '../../actions'\r\n\r\nimport { store } from '../../App';\r\nconst proto = {};\r\nproto.sprint = require('../../gRPC/sprint/sprint_grpc_web_pb');\r\n\r\n\r\nexport default function loadAllSprint(id){\r\n    console.log(\"loadAllSprint\")\r\n    console.log(id)\r\n    const sprintService = new proto.sprint.SprintClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    var GetAllSprintReq = new proto.sprint.GetAllSprintReq();\r\n    GetAllSprintReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllSprintReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllSprintReq.setProjectid(id);\r\n    let data=[]\r\n    var response = sprintService.getAllSprint(GetAllSprintReq, metadata)\r\n    let that = this\r\n  \r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        let arr = response.getStart().split('-');\r\n        let start = \"\"\r\n        let end = \"\"\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + arr[3] + \"/\" + arr[4]\r\n        } else {\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + arr[3] + \"/\" + arr[4]\r\n        }\r\n        arr = response.getEnd().split('-')\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + arr[3] + \"/\" + arr[4]\r\n        } else {\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + arr[3] + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n        \r\n          data.push(\r\n          {\r\n            id: response.getId(),\r\n            title: response.getTitle(),\r\n            num: response.getNum(),\r\n            goal: response.getGoal(),\r\n            status: response.getStatussprint(),\r\n            start,\r\n            end,\r\n          })\r\n         \r\n      }})\r\n      \r\n    \r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n      else{\r\n        setInStorage('sprints',data)\r\n        store.dispatch(setSprint(data))\r\n      }\r\n    });\r\n\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n  }","\r\nimport {\r\n    getFromStorage,\r\n    setInStorage\r\n  } from '../storage'\r\nimport {store} from '../../App'\r\nimport { setTeam } from '../../actions'\r\nimport loadAllMember from'./loadAllMember'\r\nimport loadAllBacklog from './loadAllBacklog';\r\nconst proto = {};\r\nproto.team = require('../../gRPC/team/team_grpc_web_pb');\r\n\r\n  \r\n function loadAllTeam (id) {\r\n     console.log(\"LOADALLTEAM\"+id)\r\n    const teamService = new proto.team.TeamClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    let teams = []\r\n\r\n    var GetAllTeamReq = new proto.team.GetAllTeamReq();\r\n    GetAllTeamReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllTeamReq.setProjectid(id);\r\n    GetAllTeamReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    let response = teamService.getAllTeam(GetAllTeamReq, metadata)\r\n    let that = this\r\n    let lastTeam = ''\r\n    let lastName = ''\r\n    let validTeam = false\r\n    let teamName=''\r\n    let teamId=getFromStorage(\"teamId\")\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        teams.push({\r\n          id: response.getTeamid(),\r\n          name: response.getName()\r\n        })\r\n        if (teamId == response.getTeamid())\r\n         { validTeam = true\r\n            teamName=response.getName()\r\n        }\r\n        else {\r\n          lastTeam = response.getTeamid()\r\n          lastName = response.getName()\r\n        }\r\n\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code != 0) console.log(status)\r\n        else{\r\n            \r\n            setInStorage('teams', teams)\r\n\r\n            if (validTeam == false) {\r\n              if (lastTeam != '') {\r\n                store.dispatch(setTeam(lastTeam, lastName))\r\n                that.loadAllMember(lastTeam)\r\n              }\r\n            }\r\n            else {\r\n              store.dispatch(setTeam(teamId, teamName))\r\n              loadAllMember(teamId)\r\n              loadAllBacklog()\r\n            }\r\n        }\r\n     \r\n    });\r\n    response.on('end', function (end) {\r\n\r\n    });\r\n\r\n  }\r\n\r\n  export default (loadAllTeam);","\r\nimport {\r\n    getFromStorage,\r\n    setInStorage\r\n  } from '../storage'\r\n\r\nconst proto = {};\r\nproto.team = require('../../gRPC/team/team_grpc_web_pb');\r\n\r\nexport default function loadAllMember(id){\r\n    console.log(\"loadAllMember\")\r\n    const teamService = new proto.team.TeamClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var GetAllMemberReq = new proto.team.GetAllMemberReq();\r\n    GetAllMemberReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllMemberReq.setTeamid(id);\r\n    GetAllMemberReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n\r\n    let mem = []\r\n    let response =  teamService.getAllMember(GetAllMemberReq, metadata)\r\n\r\n     response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        mem.push({ id: response.getId(), name: response.getName(), username: response.getUsername() })\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code != 0) console.log(status)\r\n        else setInStorage('members', mem)\r\n        \r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(end)\r\n    });\r\n}\r\n","import React from \"react\";\r\nconst authContext = React.createContext({\r\n\ttoken:null,\r\n\tsignInEmail: null,\r\n\tlogin: (token,signInEmail)=>{},\r\n\tlogout: ()=>{}\r\n});\r\nexport default authContext;\r\n","/**\n * @fileoverview gRPC-Web generated client stub for myproject\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.myproject = require('./myproject_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.myproject.MyprojectClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.myproject.MyprojectPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.AddNewProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_addNewProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.AddNewProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.AddNewProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.myproject.ProjectRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.addNewProject =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/myproject.Myproject/addNewProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_addNewProject,\n      callback);\n};\n\n\n/**\n * @param {!proto.myproject.AddNewProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.myproject.ProjectRes>}\n *     A native promise that resolves to the response\n */\nproto.myproject.MyprojectPromiseClient.prototype.addNewProject =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/myproject.Myproject/addNewProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_addNewProject);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.UpdateProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_updateProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.UpdateProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.UpdateProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.myproject.ProjectRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.updateProject =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/myproject.Myproject/updateProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_updateProject,\n      callback);\n};\n\n\n/**\n * @param {!proto.myproject.UpdateProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.myproject.ProjectRes>}\n *     A native promise that resolves to the response\n */\nproto.myproject.MyprojectPromiseClient.prototype.updateProject =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/myproject.Myproject/updateProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_updateProject);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.DeleteProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_deleteProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.DeleteProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.DeleteProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.myproject.ProjectRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.deleteProject =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/myproject.Myproject/deleteProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_deleteProject,\n      callback);\n};\n\n\n/**\n * @param {!proto.myproject.DeleteProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.myproject.ProjectRes>}\n *     A native promise that resolves to the response\n */\nproto.myproject.MyprojectPromiseClient.prototype.deleteProject =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/myproject.Myproject/deleteProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_deleteProject);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.GetAllProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_getAllProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.GetAllProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.GetAllProjectReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.getAllProject =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/myproject.Myproject/getAllProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_getAllProject);\n};\n\n\n/**\n * @param {!proto.myproject.GetAllProjectReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectPromiseClient.prototype.getAllProject =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/myproject.Myproject/getAllProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_getAllProject);\n};\n\n\nmodule.exports = proto.myproject;\n\n","/**\n * @fileoverview gRPC-Web generated client stub for Auth\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.Auth = require('./auth_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.Auth.AuthClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.Auth.AuthPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.SignInReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_SignIn = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.SignInReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.SignInReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.signIn =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/SignIn',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignIn,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.SignInReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.signIn =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/SignIn',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignIn);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.SignUpReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_SignUp = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.SignUpReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.SignUpReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.signUp =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/SignUp',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignUp,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.SignUpReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.signUp =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/SignUp',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignUp);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.ResetReq,\n *   !proto.Auth.ResetRes>}\n */\nconst methodInfo_Auth_ResetPassword = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.ResetRes,\n  /** @param {!proto.Auth.ResetReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.ResetRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.ResetReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.ResetRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.ResetRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.resetPassword =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/ResetPassword',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPassword,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.ResetReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.ResetRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.resetPassword =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/ResetPassword',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPassword);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.ResetPasswordFinalStepReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_ResetPasswordFinalStep = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.ResetPasswordFinalStepReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.ResetPasswordFinalStepReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.resetPasswordFinalStep =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/ResetPasswordFinalStep',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPasswordFinalStep,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.ResetPasswordFinalStepReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.resetPasswordFinalStep =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/ResetPasswordFinalStep',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPasswordFinalStep);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.SignInGoogleReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_SignInGoogle = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.SignInGoogleReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.SignInGoogleReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.signInGoogle =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/SignInGoogle',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignInGoogle,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.SignInGoogleReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.signInGoogle =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/SignInGoogle',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignInGoogle);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.AuthSessionReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_AuthSession = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.AuthSessionReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.AuthSessionReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.authSession =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/AuthSession',\n      request,\n      metadata || {},\n      methodInfo_Auth_AuthSession,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.AuthSessionReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.authSession =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/AuthSession',\n      request,\n      metadata || {},\n      methodInfo_Auth_AuthSession);\n};\n\n\nmodule.exports = proto.Auth;\n\n","/**\n * @fileoverview gRPC-Web generated client stub for sprintbacklog\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.sprintbacklog = require('./sprintbacklog_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprintbacklog.SprintBacklogClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprintbacklog.SprintBacklogPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.DeleteSprintBacklogReq,\n *   !proto.sprintbacklog.SprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_deleteSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.SprintBacklogRes,\n  /** @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.SprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.sprintbacklog.SprintBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.SprintBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.deleteSprintBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/deleteSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_deleteSprintBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.sprintbacklog.SprintBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.deleteSprintBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/deleteSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_deleteSprintBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.GetAllSprintBacklogReq,\n *   !proto.sprintbacklog.GetAllSprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_getAllSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.GetAllSprintBacklogRes,\n  /** @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.GetAllSprintBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.getAllSprintBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/getAllSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_getAllSprintBacklog);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.GetAllSprintBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.getAllSprintBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/getAllSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_getAllSprintBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.UpdateSprintReq,\n *   !proto.sprintbacklog.SprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_updateSprint = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.SprintBacklogRes,\n  /** @param {!proto.sprintbacklog.UpdateSprintReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.SprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.UpdateSprintReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.sprintbacklog.SprintBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.SprintBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.updateSprint =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/updateSprint',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_updateSprint,\n      callback);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.UpdateSprintReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.sprintbacklog.SprintBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.updateSprint =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/updateSprint',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_updateSprint);\n};\n\n\nmodule.exports = proto.sprintbacklog;\n\n","/**\n * @fileoverview gRPC-Web generated client stub for sprint\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.sprint = require('./sprint_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprint.SprintClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprint.SprintPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprint.DeleteSprintReq,\n *   !proto.sprint.SprintRes>}\n */\nconst methodInfo_Sprint_deleteSprint = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprint.SprintRes,\n  /** @param {!proto.sprint.DeleteSprintReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprint.SprintRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprint.DeleteSprintReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.sprint.SprintRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.sprint.SprintRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.sprint.SprintClient.prototype.deleteSprint =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/sprint.Sprint/deleteSprint',\n      request,\n      metadata || {},\n      methodInfo_Sprint_deleteSprint,\n      callback);\n};\n\n\n/**\n * @param {!proto.sprint.DeleteSprintReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.sprint.SprintRes>}\n *     A native promise that resolves to the response\n */\nproto.sprint.SprintPromiseClient.prototype.deleteSprint =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/sprint.Sprint/deleteSprint',\n      request,\n      metadata || {},\n      methodInfo_Sprint_deleteSprint);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprint.AddNewSprintReq,\n *   !proto.sprint.SprintRes>}\n */\nconst methodInfo_Sprint_addNewSprint = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprint.SprintRes,\n  /** @param {!proto.sprint.AddNewSprintReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprint.SprintRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprint.AddNewSprintReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.sprint.SprintRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.sprint.SprintRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.sprint.SprintClient.prototype.addNewSprint =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/sprint.Sprint/addNewSprint',\n      request,\n      metadata || {},\n      methodInfo_Sprint_addNewSprint,\n      callback);\n};\n\n\n/**\n * @param {!proto.sprint.AddNewSprintReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.sprint.SprintRes>}\n *     A native promise that resolves to the response\n */\nproto.sprint.SprintPromiseClient.prototype.addNewSprint =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/sprint.Sprint/addNewSprint',\n      request,\n      metadata || {},\n      methodInfo_Sprint_addNewSprint);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprint.GetAllSprintReq,\n *   !proto.sprint.GetAllSprintRes>}\n */\nconst methodInfo_Sprint_getAllSprint = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprint.GetAllSprintRes,\n  /** @param {!proto.sprint.GetAllSprintReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprint.GetAllSprintRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprint.GetAllSprintReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprint.GetAllSprintRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprint.SprintClient.prototype.getAllSprint =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprint.Sprint/getAllSprint',\n      request,\n      metadata || {},\n      methodInfo_Sprint_getAllSprint);\n};\n\n\n/**\n * @param {!proto.sprint.GetAllSprintReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprint.GetAllSprintRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprint.SprintPromiseClient.prototype.getAllSprint =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprint.Sprint/getAllSprint',\n      request,\n      metadata || {},\n      methodInfo_Sprint_getAllSprint);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprint.DeleteSprintReq,\n *   !proto.sprint.SprintRes>}\n */\nconst methodInfo_Sprint_setCurrentSprint = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprint.SprintRes,\n  /** @param {!proto.sprint.DeleteSprintReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprint.SprintRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprint.DeleteSprintReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.sprint.SprintRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.sprint.SprintRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.sprint.SprintClient.prototype.setCurrentSprint =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/sprint.Sprint/setCurrentSprint',\n      request,\n      metadata || {},\n      methodInfo_Sprint_setCurrentSprint,\n      callback);\n};\n\n\n/**\n * @param {!proto.sprint.DeleteSprintReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.sprint.SprintRes>}\n *     A native promise that resolves to the response\n */\nproto.sprint.SprintPromiseClient.prototype.setCurrentSprint =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/sprint.Sprint/setCurrentSprint',\n      request,\n      metadata || {},\n      methodInfo_Sprint_setCurrentSprint);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprint.DeleteSprintReq,\n *   !proto.sprint.GetAllSprintRes>}\n */\nconst methodInfo_Sprint_getSprint = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprint.GetAllSprintRes,\n  /** @param {!proto.sprint.DeleteSprintReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprint.GetAllSprintRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprint.DeleteSprintReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.sprint.GetAllSprintRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.sprint.GetAllSprintRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.sprint.SprintClient.prototype.getSprint =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/sprint.Sprint/getSprint',\n      request,\n      metadata || {},\n      methodInfo_Sprint_getSprint,\n      callback);\n};\n\n\n/**\n * @param {!proto.sprint.DeleteSprintReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.sprint.GetAllSprintRes>}\n *     A native promise that resolves to the response\n */\nproto.sprint.SprintPromiseClient.prototype.getSprint =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/sprint.Sprint/getSprint',\n      request,\n      metadata || {},\n      methodInfo_Sprint_getSprint);\n};\n\n\nmodule.exports = proto.sprint;\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.c7fd352d.png\";","/**\n * @fileoverview gRPC-Web generated client stub for chat\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.chat = require('./chat_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.chat.ChatClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.chat.ChatPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.chat.SendMsgReq,\n *   !proto.chat.SendMsgRes>}\n */\nconst methodInfo_Chat_ConnectRenew = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.chat.SendMsgRes,\n  /** @param {!proto.chat.SendMsgReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.SendMsgRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.chat.SendMsgRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.SendMsgRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.connectRenew =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/ConnectRenew',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectRenew,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.SendMsgRes>}\n *     A native promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.connectRenew =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/ConnectRenew',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectRenew);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.chat.SendMsgReq,\n *   !proto.chat.SendMsgRes>}\n */\nconst methodInfo_Chat_ConnectChat = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.chat.SendMsgRes,\n  /** @param {!proto.chat.SendMsgReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.SendMsgRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.chat.SendMsgRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.SendMsgRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.connectChat =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/ConnectChat',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectChat,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.SendMsgRes>}\n *     A native promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.connectChat =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/ConnectChat',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectChat);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.chat.SendMsgReq,\n *   !proto.chat.SendMsgRes>}\n */\nconst methodInfo_Chat_SendMsg = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.chat.SendMsgRes,\n  /** @param {!proto.chat.SendMsgReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.SendMsgRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.chat.SendMsgRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.SendMsgRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.sendMsg =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/SendMsg',\n      request,\n      metadata || {},\n      methodInfo_Chat_SendMsg,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.SendMsgRes>}\n *     A native promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.sendMsg =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/SendMsg',\n      request,\n      metadata || {},\n      methodInfo_Chat_SendMsg);\n};\n\n\nmodule.exports = proto.chat;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.chat.SendMsgReq', null, global);\ngoog.exportSymbol('proto.chat.SendMsgRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.SendMsgReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.SendMsgReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.chat.SendMsgReq.displayName = 'proto.chat.SendMsgReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.SendMsgReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.SendMsgReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.SendMsgReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.chat.SendMsgReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accesstoken: msg.getAccesstoken(),\n    requesterid: msg.getRequesterid(),\n    name: msg.getName(),\n    channelid: msg.getChannelid(),\n    msg: msg.getMsg(),\n    type: msg.getType()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.SendMsgReq}\n */\nproto.chat.SendMsgReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.SendMsgReq;\n  return proto.chat.SendMsgReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.SendMsgReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.SendMsgReq}\n */\nproto.chat.SendMsgReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMsg(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.chat.SendMsgReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.SendMsgReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getChannelid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getMsg();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.chat.SendMsgReq} The clone.\n */\nproto.chat.SendMsgReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.chat.SendMsgReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string accessToken = 1;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string requesterId = 2;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string name = 6;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string channelId = 3;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getChannelid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setChannelid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string msg = 4;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string type = 5;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setType = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.SendMsgRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.SendMsgRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.chat.SendMsgRes.displayName = 'proto.chat.SendMsgRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.SendMsgRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.SendMsgRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.SendMsgRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.chat.SendMsgRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelid: msg.getChannelid(),\n    msg: msg.getMsg(),\n    type: msg.getType(),\n    sendername: msg.getSendername(),\n    time: msg.getTime(),\n    status: msg.getStatus()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.SendMsgRes}\n */\nproto.chat.SendMsgRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.SendMsgRes;\n  return proto.chat.SendMsgRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.SendMsgRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.SendMsgRes}\n */\nproto.chat.SendMsgRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMsg(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSendername(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTime(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.chat.SendMsgRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.SendMsgRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getChannelid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getMsg();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getSendername();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTime();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.chat.SendMsgRes} The clone.\n */\nproto.chat.SendMsgRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.chat.SendMsgRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string channelId = 1;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getChannelid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setChannelid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string msg = 2;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setType = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string senderName = 4;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getSendername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setSendername = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string time = 5;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setTime = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string status = 6;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto.chat);\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.sprint.AddNewSprintReq', null, global);\ngoog.exportSymbol('proto.sprint.DeleteSprintReq', null, global);\ngoog.exportSymbol('proto.sprint.GetAllSprintReq', null, global);\ngoog.exportSymbol('proto.sprint.GetAllSprintRes', null, global);\ngoog.exportSymbol('proto.sprint.SprintRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprint.DeleteSprintReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprint.DeleteSprintReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprint.DeleteSprintReq.displayName = 'proto.sprint.DeleteSprintReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprint.DeleteSprintReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprint.DeleteSprintReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprint.DeleteSprintReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprint.DeleteSprintReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    sprintid: msg.getSprintid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprint.DeleteSprintReq}\n */\nproto.sprint.DeleteSprintReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprint.DeleteSprintReq;\n  return proto.sprint.DeleteSprintReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprint.DeleteSprintReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprint.DeleteSprintReq}\n */\nproto.sprint.DeleteSprintReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprint.DeleteSprintReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprint.DeleteSprintReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprint.DeleteSprintReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprint.DeleteSprintReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprint.DeleteSprintReq} The clone.\n */\nproto.sprint.DeleteSprintReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprint.DeleteSprintReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprint.DeleteSprintReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.DeleteSprintReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprint.DeleteSprintReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.DeleteSprintReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string sprintId = 3;\n * @return {string}\n */\nproto.sprint.DeleteSprintReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.DeleteSprintReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.sprint.DeleteSprintReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.DeleteSprintReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprint.AddNewSprintReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprint.AddNewSprintReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprint.AddNewSprintReq.displayName = 'proto.sprint.AddNewSprintReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprint.AddNewSprintReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprint.AddNewSprintReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprint.AddNewSprintReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprint.AddNewSprintReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken(),\n    title: msg.getTitle(),\n    num: msg.getNum(),\n    goal: msg.getGoal(),\n    start: msg.getStart(),\n    end: msg.getEnd()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprint.AddNewSprintReq}\n */\nproto.sprint.AddNewSprintReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprint.AddNewSprintReq;\n  return proto.sprint.AddNewSprintReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprint.AddNewSprintReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprint.AddNewSprintReq}\n */\nproto.sprint.AddNewSprintReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNum(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setGoal(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEnd(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprint.AddNewSprintReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprint.AddNewSprintReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprint.AddNewSprintReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprint.AddNewSprintReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getNum();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getGoal();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getEnd();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprint.AddNewSprintReq} The clone.\n */\nproto.sprint.AddNewSprintReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprint.AddNewSprintReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprint.AddNewSprintReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.AddNewSprintReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprint.AddNewSprintReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.AddNewSprintReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.sprint.AddNewSprintReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.AddNewSprintReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string title = 5;\n * @return {string}\n */\nproto.sprint.AddNewSprintReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.AddNewSprintReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string num = 6;\n * @return {string}\n */\nproto.sprint.AddNewSprintReq.prototype.getNum = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.AddNewSprintReq.prototype.setNum = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string goal = 7;\n * @return {string}\n */\nproto.sprint.AddNewSprintReq.prototype.getGoal = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.AddNewSprintReq.prototype.setGoal = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string start = 8;\n * @return {string}\n */\nproto.sprint.AddNewSprintReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.AddNewSprintReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string end = 9;\n * @return {string}\n */\nproto.sprint.AddNewSprintReq.prototype.getEnd = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.AddNewSprintReq.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprint.SprintRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprint.SprintRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprint.SprintRes.displayName = 'proto.sprint.SprintRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprint.SprintRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprint.SprintRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprint.SprintRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprint.SprintRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    id: msg.getId()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprint.SprintRes}\n */\nproto.sprint.SprintRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprint.SprintRes;\n  return proto.sprint.SprintRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprint.SprintRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprint.SprintRes}\n */\nproto.sprint.SprintRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprint.SprintRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprint.SprintRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprint.SprintRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprint.SprintRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprint.SprintRes} The clone.\n */\nproto.sprint.SprintRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprint.SprintRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.sprint.SprintRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.SprintRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string id = 3;\n * @return {string}\n */\nproto.sprint.SprintRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.SprintRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprint.GetAllSprintReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprint.GetAllSprintReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprint.GetAllSprintReq.displayName = 'proto.sprint.GetAllSprintReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprint.GetAllSprintReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprint.GetAllSprintReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprint.GetAllSprintReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprint.GetAllSprintReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprint.GetAllSprintReq}\n */\nproto.sprint.GetAllSprintReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprint.GetAllSprintReq;\n  return proto.sprint.GetAllSprintReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprint.GetAllSprintReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprint.GetAllSprintReq}\n */\nproto.sprint.GetAllSprintReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprint.GetAllSprintReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprint.GetAllSprintReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprint.GetAllSprintReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprint.GetAllSprintReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprint.GetAllSprintReq} The clone.\n */\nproto.sprint.GetAllSprintReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprint.GetAllSprintReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprint.GetAllSprintReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.GetAllSprintReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprint.GetAllSprintReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.GetAllSprintReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.sprint.GetAllSprintReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.GetAllSprintReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprint.GetAllSprintRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprint.GetAllSprintRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprint.GetAllSprintRes.displayName = 'proto.sprint.GetAllSprintRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprint.GetAllSprintRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprint.GetAllSprintRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprint.GetAllSprintRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprint.GetAllSprintRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: msg.getId(),\n    statussprint: msg.getStatussprint(),\n    title: msg.getTitle(),\n    num: msg.getNum(),\n    goal: msg.getGoal(),\n    start: msg.getStart(),\n    end: msg.getEnd(),\n    status: msg.getStatus()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprint.GetAllSprintRes}\n */\nproto.sprint.GetAllSprintRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprint.GetAllSprintRes;\n  return proto.sprint.GetAllSprintRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprint.GetAllSprintRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprint.GetAllSprintRes}\n */\nproto.sprint.GetAllSprintRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatussprint(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNum(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setGoal(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEnd(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprint.GetAllSprintRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprint.GetAllSprintRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprint.GetAllSprintRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprint.GetAllSprintRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getStatussprint();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getNum();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getGoal();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getEnd();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprint.GetAllSprintRes} The clone.\n */\nproto.sprint.GetAllSprintRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprint.GetAllSprintRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string id = 2;\n * @return {string}\n */\nproto.sprint.GetAllSprintRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.GetAllSprintRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string statusSprint = 4;\n * @return {string}\n */\nproto.sprint.GetAllSprintRes.prototype.getStatussprint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.GetAllSprintRes.prototype.setStatussprint = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string title = 5;\n * @return {string}\n */\nproto.sprint.GetAllSprintRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.GetAllSprintRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string num = 6;\n * @return {string}\n */\nproto.sprint.GetAllSprintRes.prototype.getNum = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.GetAllSprintRes.prototype.setNum = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string goal = 7;\n * @return {string}\n */\nproto.sprint.GetAllSprintRes.prototype.getGoal = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.GetAllSprintRes.prototype.setGoal = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string start = 8;\n * @return {string}\n */\nproto.sprint.GetAllSprintRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.GetAllSprintRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string end = 9;\n * @return {string}\n */\nproto.sprint.GetAllSprintRes.prototype.getEnd = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.GetAllSprintRes.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.sprint.GetAllSprintRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprint.GetAllSprintRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.sprint);\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.teamtask.AddMemberReq', null, global);\ngoog.exportSymbol('proto.teamtask.AddNewTeamReq', null, global);\ngoog.exportSymbol('proto.teamtask.DeleteTeamReq', null, global);\ngoog.exportSymbol('proto.teamtask.GetAllMemberReq', null, global);\ngoog.exportSymbol('proto.teamtask.GetAllTeamReq', null, global);\ngoog.exportSymbol('proto.teamtask.GetAllTeamRes', null, global);\ngoog.exportSymbol('proto.teamtask.RemoveMemberReq', null, global);\ngoog.exportSymbol('proto.teamtask.TeamRes', null, global);\ngoog.exportSymbol('proto.teamtask.UpdateMemberReq', null, global);\ngoog.exportSymbol('proto.teamtask.UpdateTeamReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.GetAllTeamReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.GetAllTeamReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.GetAllTeamReq.displayName = 'proto.teamtask.GetAllTeamReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.GetAllTeamReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.GetAllTeamReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    accesstoken: msg.getAccesstoken(),\n    projectid: msg.getProjectid(),\n    option: msg.getOption()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.GetAllTeamReq}\n */\nproto.teamtask.GetAllTeamReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.GetAllTeamReq;\n  return proto.teamtask.GetAllTeamReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.GetAllTeamReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.GetAllTeamReq}\n */\nproto.teamtask.GetAllTeamReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOption(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.GetAllTeamReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.GetAllTeamReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getOption();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.GetAllTeamReq} The clone.\n */\nproto.teamtask.GetAllTeamReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.GetAllTeamReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.GetAllTeamReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string accessToken = 2;\n * @return {string}\n */\nproto.teamtask.GetAllTeamReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string projectId = 3;\n * @return {string}\n */\nproto.teamtask.GetAllTeamReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string option = 4;\n * @return {string}\n */\nproto.teamtask.GetAllTeamReq.prototype.getOption = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamReq.prototype.setOption = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.GetAllTeamRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.GetAllTeamRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.GetAllTeamRes.displayName = 'proto.teamtask.GetAllTeamRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.GetAllTeamRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.GetAllTeamRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    teamid: msg.getTeamid(),\n    status: msg.getStatus(),\n    nummember: msg.getNummember(),\n    name: msg.getName(),\n    department: msg.getDepartment(),\n    description: msg.getDescription()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.GetAllTeamRes}\n */\nproto.teamtask.GetAllTeamRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.GetAllTeamRes;\n  return proto.teamtask.GetAllTeamRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.GetAllTeamRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.GetAllTeamRes}\n */\nproto.teamtask.GetAllTeamRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNummember(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDepartment(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.GetAllTeamRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.GetAllTeamRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getNummember();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDepartment();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.GetAllTeamRes} The clone.\n */\nproto.teamtask.GetAllTeamRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.GetAllTeamRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string teamId = 1;\n * @return {string}\n */\nproto.teamtask.GetAllTeamRes.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamRes.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string status = 2;\n * @return {string}\n */\nproto.teamtask.GetAllTeamRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string numMember = 3;\n * @return {string}\n */\nproto.teamtask.GetAllTeamRes.prototype.getNummember = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamRes.prototype.setNummember = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string name = 4;\n * @return {string}\n */\nproto.teamtask.GetAllTeamRes.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamRes.prototype.setName = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string department = 6;\n * @return {string}\n */\nproto.teamtask.GetAllTeamRes.prototype.getDepartment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamRes.prototype.setDepartment = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string description = 7;\n * @return {string}\n */\nproto.teamtask.GetAllTeamRes.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamRes.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.TeamRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.TeamRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.TeamRes.displayName = 'proto.teamtask.TeamRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.TeamRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.TeamRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.TeamRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.TeamRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    id: msg.getId(),\n    username: msg.getUsername(),\n    name: msg.getName(),\n    option: msg.getOption()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.TeamRes}\n */\nproto.teamtask.TeamRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.TeamRes;\n  return proto.teamtask.TeamRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.TeamRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.TeamRes}\n */\nproto.teamtask.TeamRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOption(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.TeamRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.TeamRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.TeamRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.TeamRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getOption();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.TeamRes} The clone.\n */\nproto.teamtask.TeamRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.TeamRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.teamtask.TeamRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string id = 2;\n * @return {string}\n */\nproto.teamtask.TeamRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string username = 3;\n * @return {string}\n */\nproto.teamtask.TeamRes.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamRes.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string name = 4;\n * @return {string}\n */\nproto.teamtask.TeamRes.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamRes.prototype.setName = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string option = 5;\n * @return {string}\n */\nproto.teamtask.TeamRes.prototype.getOption = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamRes.prototype.setOption = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.AddNewTeamReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.AddNewTeamReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.AddNewTeamReq.displayName = 'proto.teamtask.AddNewTeamReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.AddNewTeamReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.AddNewTeamReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.AddNewTeamReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.AddNewTeamReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    name: msg.getName(),\n    description: msg.getDescription(),\n    department: msg.getDepartment(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.AddNewTeamReq}\n */\nproto.teamtask.AddNewTeamReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.AddNewTeamReq;\n  return proto.teamtask.AddNewTeamReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.AddNewTeamReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.AddNewTeamReq}\n */\nproto.teamtask.AddNewTeamReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDepartment(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.AddNewTeamReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.AddNewTeamReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.AddNewTeamReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.AddNewTeamReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDepartment();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.AddNewTeamReq} The clone.\n */\nproto.teamtask.AddNewTeamReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.AddNewTeamReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.AddNewTeamReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.AddNewTeamReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nproto.teamtask.AddNewTeamReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string description = 4;\n * @return {string}\n */\nproto.teamtask.AddNewTeamReq.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamReq.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string department = 5;\n * @return {string}\n */\nproto.teamtask.AddNewTeamReq.prototype.getDepartment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamReq.prototype.setDepartment = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string accessToken = 6;\n * @return {string}\n */\nproto.teamtask.AddNewTeamReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.UpdateTeamReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.UpdateTeamReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.UpdateTeamReq.displayName = 'proto.teamtask.UpdateTeamReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.UpdateTeamReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.UpdateTeamReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.UpdateTeamReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.UpdateTeamReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    teamid: msg.getTeamid(),\n    name: msg.getName(),\n    description: msg.getDescription(),\n    department: msg.getDepartment(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.UpdateTeamReq}\n */\nproto.teamtask.UpdateTeamReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.UpdateTeamReq;\n  return proto.teamtask.UpdateTeamReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.UpdateTeamReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.UpdateTeamReq}\n */\nproto.teamtask.UpdateTeamReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDepartment(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.UpdateTeamReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.UpdateTeamReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.UpdateTeamReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.UpdateTeamReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDepartment();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.UpdateTeamReq} The clone.\n */\nproto.teamtask.UpdateTeamReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.UpdateTeamReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.UpdateTeamReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamId = 2;\n * @return {string}\n */\nproto.teamtask.UpdateTeamReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nproto.teamtask.UpdateTeamReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string description = 4;\n * @return {string}\n */\nproto.teamtask.UpdateTeamReq.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamReq.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string department = 5;\n * @return {string}\n */\nproto.teamtask.UpdateTeamReq.prototype.getDepartment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamReq.prototype.setDepartment = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string accessToken = 6;\n * @return {string}\n */\nproto.teamtask.UpdateTeamReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.DeleteTeamReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.DeleteTeamReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.DeleteTeamReq.displayName = 'proto.teamtask.DeleteTeamReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.DeleteTeamReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.DeleteTeamReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.DeleteTeamReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.DeleteTeamReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    teamid: msg.getTeamid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.DeleteTeamReq}\n */\nproto.teamtask.DeleteTeamReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.DeleteTeamReq;\n  return proto.teamtask.DeleteTeamReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.DeleteTeamReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.DeleteTeamReq}\n */\nproto.teamtask.DeleteTeamReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.DeleteTeamReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.DeleteTeamReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.DeleteTeamReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.DeleteTeamReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.DeleteTeamReq} The clone.\n */\nproto.teamtask.DeleteTeamReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.DeleteTeamReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.DeleteTeamReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.DeleteTeamReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamId = 2;\n * @return {string}\n */\nproto.teamtask.DeleteTeamReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.DeleteTeamReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string projectId = 3;\n * @return {string}\n */\nproto.teamtask.DeleteTeamReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.DeleteTeamReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.DeleteTeamReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.DeleteTeamReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.AddMemberReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.AddMemberReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.AddMemberReq.displayName = 'proto.teamtask.AddMemberReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.AddMemberReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.AddMemberReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.AddMemberReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.AddMemberReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    teamid: msg.getTeamid(),\n    role: msg.getRole(),\n    memberemail: msg.getMemberemail(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.AddMemberReq}\n */\nproto.teamtask.AddMemberReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.AddMemberReq;\n  return proto.teamtask.AddMemberReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.AddMemberReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.AddMemberReq}\n */\nproto.teamtask.AddMemberReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMemberemail(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.AddMemberReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.AddMemberReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.AddMemberReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.AddMemberReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getMemberemail();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.AddMemberReq} The clone.\n */\nproto.teamtask.AddMemberReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.AddMemberReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.AddMemberReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddMemberReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamId = 3;\n * @return {string}\n */\nproto.teamtask.AddMemberReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddMemberReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string role = 2;\n * @return {string}\n */\nproto.teamtask.AddMemberReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddMemberReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string memberEmail = 5;\n * @return {string}\n */\nproto.teamtask.AddMemberReq.prototype.getMemberemail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddMemberReq.prototype.setMemberemail = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.AddMemberReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddMemberReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.RemoveMemberReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.RemoveMemberReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.RemoveMemberReq.displayName = 'proto.teamtask.RemoveMemberReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.RemoveMemberReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.RemoveMemberReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.RemoveMemberReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.RemoveMemberReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    teamid: msg.getTeamid(),\n    accesstoken: msg.getAccesstoken(),\n    memberemail: msg.getMemberemail()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.RemoveMemberReq}\n */\nproto.teamtask.RemoveMemberReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.RemoveMemberReq;\n  return proto.teamtask.RemoveMemberReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.RemoveMemberReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.RemoveMemberReq}\n */\nproto.teamtask.RemoveMemberReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMemberemail(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.RemoveMemberReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.RemoveMemberReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.RemoveMemberReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.RemoveMemberReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getMemberemail();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.RemoveMemberReq} The clone.\n */\nproto.teamtask.RemoveMemberReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.RemoveMemberReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.RemoveMemberReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RemoveMemberReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamId = 3;\n * @return {string}\n */\nproto.teamtask.RemoveMemberReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RemoveMemberReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.RemoveMemberReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RemoveMemberReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string memberEmail = 5;\n * @return {string}\n */\nproto.teamtask.RemoveMemberReq.prototype.getMemberemail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RemoveMemberReq.prototype.setMemberemail = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.UpdateMemberReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.UpdateMemberReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.UpdateMemberReq.displayName = 'proto.teamtask.UpdateMemberReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.UpdateMemberReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.UpdateMemberReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.UpdateMemberReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.UpdateMemberReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    teamid: msg.getTeamid(),\n    accesstoken: msg.getAccesstoken(),\n    memberemail: msg.getMemberemail(),\n    role: msg.getRole()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.UpdateMemberReq}\n */\nproto.teamtask.UpdateMemberReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.UpdateMemberReq;\n  return proto.teamtask.UpdateMemberReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.UpdateMemberReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.UpdateMemberReq}\n */\nproto.teamtask.UpdateMemberReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMemberemail(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.UpdateMemberReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.UpdateMemberReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.UpdateMemberReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.UpdateMemberReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getMemberemail();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.UpdateMemberReq} The clone.\n */\nproto.teamtask.UpdateMemberReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.UpdateMemberReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.UpdateMemberReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateMemberReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamId = 3;\n * @return {string}\n */\nproto.teamtask.UpdateMemberReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateMemberReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.UpdateMemberReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateMemberReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string memberEmail = 5;\n * @return {string}\n */\nproto.teamtask.UpdateMemberReq.prototype.getMemberemail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateMemberReq.prototype.setMemberemail = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string role = 2;\n * @return {string}\n */\nproto.teamtask.UpdateMemberReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateMemberReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.GetAllMemberReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.GetAllMemberReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.GetAllMemberReq.displayName = 'proto.teamtask.GetAllMemberReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.GetAllMemberReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.GetAllMemberReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.GetAllMemberReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.GetAllMemberReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    teamid: msg.getTeamid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.GetAllMemberReq}\n */\nproto.teamtask.GetAllMemberReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.GetAllMemberReq;\n  return proto.teamtask.GetAllMemberReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.GetAllMemberReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.GetAllMemberReq}\n */\nproto.teamtask.GetAllMemberReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.GetAllMemberReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllMemberReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.GetAllMemberReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllMemberReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.GetAllMemberReq} The clone.\n */\nproto.teamtask.GetAllMemberReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.GetAllMemberReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.GetAllMemberReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllMemberReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamId = 3;\n * @return {string}\n */\nproto.teamtask.GetAllMemberReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllMemberReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.GetAllMemberReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllMemberReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\ngoog.object.extend(exports, proto.teamtask);\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.sprintbacklog.DeleteSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.sprintbacklog.GetAllSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.sprintbacklog.GetAllSprintBacklogRes', null, global);\ngoog.exportSymbol('proto.sprintbacklog.SprintBacklogRes', null, global);\ngoog.exportSymbol('proto.sprintbacklog.UpdateSprintReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.UpdateSprintReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.UpdateSprintReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.UpdateSprintReq.displayName = 'proto.sprintbacklog.UpdateSprintReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.UpdateSprintReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.UpdateSprintReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.UpdateSprintReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.UpdateSprintReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    backlogid: msg.getBacklogid(),\n    accesstoken: msg.getAccesstoken(),\n    sprintid: msg.getSprintid(),\n    sprintname: msg.getSprintname(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.UpdateSprintReq}\n */\nproto.sprintbacklog.UpdateSprintReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.UpdateSprintReq;\n  return proto.sprintbacklog.UpdateSprintReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.UpdateSprintReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.UpdateSprintReq}\n */\nproto.sprintbacklog.UpdateSprintReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintname(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.UpdateSprintReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.UpdateSprintReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.UpdateSprintReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.UpdateSprintReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSprintname();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.UpdateSprintReq} The clone.\n */\nproto.sprintbacklog.UpdateSprintReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.UpdateSprintReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.UpdateSprintReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.UpdateSprintReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.UpdateSprintReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.UpdateSprintReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.UpdateSprintReq.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.UpdateSprintReq.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.sprintbacklog.UpdateSprintReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.UpdateSprintReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string sprintId = 5;\n * @return {string}\n */\nproto.sprintbacklog.UpdateSprintReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.UpdateSprintReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string sprintName = 6;\n * @return {string}\n */\nproto.sprintbacklog.UpdateSprintReq.prototype.getSprintname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.UpdateSprintReq.prototype.setSprintname = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string teamId = 7;\n * @return {string}\n */\nproto.sprintbacklog.UpdateSprintReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.UpdateSprintReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.DeleteSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.DeleteSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.DeleteSprintBacklogReq.displayName = 'proto.sprintbacklog.DeleteSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.DeleteSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    backlogid: msg.getBacklogid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.DeleteSprintBacklogReq;\n  return proto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq} The clone.\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.DeleteSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string teamId = 5;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.SprintBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.SprintBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.SprintBacklogRes.displayName = 'proto.sprintbacklog.SprintBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.SprintBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.SprintBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.SprintBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    backlogid: msg.getBacklogid(),\n    backlogname: msg.getBacklogname()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.SprintBacklogRes}\n */\nproto.sprintbacklog.SprintBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.SprintBacklogRes;\n  return proto.sprintbacklog.SprintBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.SprintBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.SprintBacklogRes}\n */\nproto.sprintbacklog.SprintBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogname(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.SprintBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.SprintBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getBacklogname();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.SprintBacklogRes} The clone.\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.SprintBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string backlogName = 4;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getBacklogname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setBacklogname = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.GetAllSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.GetAllSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.GetAllSprintBacklogReq.displayName = 'proto.sprintbacklog.GetAllSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.GetAllSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.GetAllSprintBacklogReq;\n  return proto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq} The clone.\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.GetAllSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string teamId = 4;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.GetAllSprintBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.GetAllSprintBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.GetAllSprintBacklogRes.displayName = 'proto.sprintbacklog.GetAllSprintBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.GetAllSprintBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    title: msg.getTitle(),\n    backlogid: msg.getBacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    status: msg.getStatus(),\n    sprintname: msg.getSprintname()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.GetAllSprintBacklogRes;\n  return proto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintname(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getSprintname();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes} The clone.\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.GetAllSprintBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string title = 1;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string backlogId = 2;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 11;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string priority = 6;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string estimation = 7;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string sprintId = 8;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string start = 12;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string deadline = 10;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string status = 9;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string sprintName = 13;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSprintname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSprintname = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\ngoog.object.extend(exports, proto.sprintbacklog);\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.myproject.AddNewProjectReq', null, global);\ngoog.exportSymbol('proto.myproject.DeleteProjectReq', null, global);\ngoog.exportSymbol('proto.myproject.GetAllProjectReq', null, global);\ngoog.exportSymbol('proto.myproject.ProjectRes', null, global);\ngoog.exportSymbol('proto.myproject.UpdateProjectReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.AddNewProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.AddNewProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.AddNewProjectReq.displayName = 'proto.myproject.AddNewProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.AddNewProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.AddNewProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.AddNewProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.AddNewProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    topic: msg.getTopic(),\n    requesterid: msg.getRequesterid(),\n    projectname: msg.getProjectname(),\n    start: msg.getStart(),\n    end: msg.getEnd(),\n    pb_private: msg.getPrivate(),\n    detail: msg.getDetail(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.AddNewProjectReq}\n */\nproto.myproject.AddNewProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.AddNewProjectReq;\n  return proto.myproject.AddNewProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.AddNewProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.AddNewProjectReq}\n */\nproto.myproject.AddNewProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTopic(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectname(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEnd(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivate(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDetail(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.AddNewProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.AddNewProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.AddNewProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.AddNewProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTopic();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProjectname();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getEnd();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getPrivate();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getDetail();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.AddNewProjectReq} The clone.\n */\nproto.myproject.AddNewProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.AddNewProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string topic = 1;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getTopic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setTopic = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string requesterId = 2;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string projectName = 3;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getProjectname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setProjectname = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string start = 4;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string end = 5;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getEnd = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string private = 6;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getPrivate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string detail = 8;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getDetail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setDetail = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string cookie = 7;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.UpdateProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.UpdateProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.UpdateProjectReq.displayName = 'proto.myproject.UpdateProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.UpdateProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.UpdateProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.UpdateProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.UpdateProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    projectid: msg.getProjectid(),\n    requesterid: msg.getRequesterid(),\n    projectname: msg.getProjectname(),\n    start: msg.getStart(),\n    end: msg.getEnd(),\n    pb_private: msg.getPrivate(),\n    cookie: msg.getCookie(),\n    detail: msg.getDetail(),\n    progress: msg.getProgress(),\n    topic: msg.getTopic()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.UpdateProjectReq}\n */\nproto.myproject.UpdateProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.UpdateProjectReq;\n  return proto.myproject.UpdateProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.UpdateProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.UpdateProjectReq}\n */\nproto.myproject.UpdateProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectname(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEnd(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivate(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDetail(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProgress(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTopic(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.UpdateProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.UpdateProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.UpdateProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.UpdateProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getProjectname();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getEnd();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getPrivate();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getDetail();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getProgress();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getTopic();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.UpdateProjectReq} The clone.\n */\nproto.myproject.UpdateProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.UpdateProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string projectId = 1;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string requesterId = 3;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string projectName = 4;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getProjectname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setProjectname = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string start = 5;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string end = 6;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getEnd = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string private = 7;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getPrivate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string cookie = 8;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string detail = 9;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getDetail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setDetail = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string progress = 10;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getProgress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setProgress = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string topic = 11;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getTopic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setTopic = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.DeleteProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.DeleteProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.DeleteProjectReq.displayName = 'proto.myproject.DeleteProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.DeleteProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.DeleteProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.DeleteProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.DeleteProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    projectid: msg.getProjectid(),\n    cookie: msg.getCookie(),\n    requesterid: msg.getRequesterid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.DeleteProjectReq}\n */\nproto.myproject.DeleteProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.DeleteProjectReq;\n  return proto.myproject.DeleteProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.DeleteProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.DeleteProjectReq}\n */\nproto.myproject.DeleteProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.DeleteProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.DeleteProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.DeleteProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.DeleteProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.DeleteProjectReq} The clone.\n */\nproto.myproject.DeleteProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.DeleteProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.myproject.DeleteProjectReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.DeleteProjectReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string cookie = 3;\n * @return {string}\n */\nproto.myproject.DeleteProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.DeleteProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.myproject.DeleteProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.DeleteProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.GetAllProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.GetAllProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.GetAllProjectReq.displayName = 'proto.myproject.GetAllProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.GetAllProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.GetAllProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.GetAllProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.GetAllProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.GetAllProjectReq}\n */\nproto.myproject.GetAllProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.GetAllProjectReq;\n  return proto.myproject.GetAllProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.GetAllProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.GetAllProjectReq}\n */\nproto.myproject.GetAllProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.GetAllProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.GetAllProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.GetAllProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.GetAllProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.GetAllProjectReq} The clone.\n */\nproto.myproject.GetAllProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.GetAllProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 3;\n * @return {string}\n */\nproto.myproject.GetAllProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.GetAllProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string cookie = 2;\n * @return {string}\n */\nproto.myproject.GetAllProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.GetAllProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.ProjectRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.ProjectRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.ProjectRes.displayName = 'proto.myproject.ProjectRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.ProjectRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.ProjectRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.ProjectRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.ProjectRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    topic: msg.getTopic(),\n    error: msg.getError(),\n    status: msg.getStatus(),\n    projectid: msg.getProjectid(),\n    projectname: msg.getProjectname(),\n    start: msg.getStart(),\n    end: msg.getEnd(),\n    pb_private: msg.getPrivate(),\n    detail: msg.getDetail(),\n    progress: msg.getProgress(),\n    members: msg.getMembers(),\n    currentsprintid: msg.getCurrentsprintid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.ProjectRes}\n */\nproto.myproject.ProjectRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.ProjectRes;\n  return proto.myproject.ProjectRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.ProjectRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.ProjectRes}\n */\nproto.myproject.ProjectRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTopic(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectname(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEnd(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivate(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDetail(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProgress(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMembers(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCurrentsprintid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.ProjectRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.ProjectRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.ProjectRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.ProjectRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTopic();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getProjectname();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getEnd();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getPrivate();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getDetail();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getProgress();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getMembers();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getCurrentsprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.ProjectRes} The clone.\n */\nproto.myproject.ProjectRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.ProjectRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string topic = 10;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getTopic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setTopic = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string error = 1;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string status = 2;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string projectId = 3;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string projectName = 4;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getProjectname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setProjectname = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string start = 5;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string end = 6;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getEnd = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string private = 7;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getPrivate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string detail = 8;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getDetail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setDetail = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string progress = 9;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getProgress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setProgress = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string members = 11;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getMembers = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setMembers = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string currentSprintId = 12;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getCurrentsprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setCurrentsprintid = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\ngoog.object.extend(exports, proto.myproject);\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.Auth.AuthSessionReq', null, global);\ngoog.exportSymbol('proto.Auth.ResetPasswordFinalStepReq', null, global);\ngoog.exportSymbol('proto.Auth.ResetReq', null, global);\ngoog.exportSymbol('proto.Auth.ResetRes', null, global);\ngoog.exportSymbol('proto.Auth.SignInGoogleReq', null, global);\ngoog.exportSymbol('proto.Auth.SignInReq', null, global);\ngoog.exportSymbol('proto.Auth.SignInRes', null, global);\ngoog.exportSymbol('proto.Auth.SignUpReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignInReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignInReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignInReq.displayName = 'proto.Auth.SignInReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignInReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignInReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignInReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignInReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    password: msg.getPassword()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignInReq}\n */\nproto.Auth.SignInReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignInReq;\n  return proto.Auth.SignInReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignInReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignInReq}\n */\nproto.Auth.SignInReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignInReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignInReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignInReq} The clone.\n */\nproto.Auth.SignInReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignInReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.SignInReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string password = 2;\n * @return {string}\n */\nproto.Auth.SignInReq.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInReq.prototype.setPassword = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.AuthSessionReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.AuthSessionReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.AuthSessionReq.displayName = 'proto.Auth.AuthSessionReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.AuthSessionReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.AuthSessionReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.AuthSessionReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.AuthSessionReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    session: msg.getSession(),\n    id: msg.getId(),\n    time: msg.getTime()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.AuthSessionReq}\n */\nproto.Auth.AuthSessionReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.AuthSessionReq;\n  return proto.Auth.AuthSessionReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.AuthSessionReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.AuthSessionReq}\n */\nproto.Auth.AuthSessionReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSession(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.AuthSessionReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.AuthSessionReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.AuthSessionReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.AuthSessionReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getSession();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTime();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.AuthSessionReq} The clone.\n */\nproto.Auth.AuthSessionReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.AuthSessionReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string session = 1;\n * @return {string}\n */\nproto.Auth.AuthSessionReq.prototype.getSession = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.AuthSessionReq.prototype.setSession = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string id = 2;\n * @return {string}\n */\nproto.Auth.AuthSessionReq.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.AuthSessionReq.prototype.setId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string time = 3;\n * @return {string}\n */\nproto.Auth.AuthSessionReq.prototype.getTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.AuthSessionReq.prototype.setTime = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignInRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignInRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignInRes.displayName = 'proto.Auth.SignInRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignInRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignInRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignInRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignInRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    error: msg.getError(),\n    response: msg.getResponse(),\n    type: msg.getType(),\n    id: msg.getId(),\n    session: msg.getSession(),\n    name: msg.getName(),\n    avatar: msg.getAvatar()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignInRes}\n */\nproto.Auth.SignInRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignInRes;\n  return proto.Auth.SignInRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignInRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignInRes}\n */\nproto.Auth.SignInRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setResponse(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSession(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAvatar(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignInRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignInRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getResponse();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSession();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getAvatar();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignInRes} The clone.\n */\nproto.Auth.SignInRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignInRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string error = 4;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string response = 2;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getResponse = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setResponse = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setType = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string id = 5;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string session = 6;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getSession = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setSession = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string name = 7;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setName = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string avatar = 8;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getAvatar = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setAvatar = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignInGoogleReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignInGoogleReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignInGoogleReq.displayName = 'proto.Auth.SignInGoogleReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignInGoogleReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignInGoogleReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignInGoogleReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignInGoogleReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    name: msg.getName(),\n    avatar: msg.getAvatar()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignInGoogleReq}\n */\nproto.Auth.SignInGoogleReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignInGoogleReq;\n  return proto.Auth.SignInGoogleReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignInGoogleReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignInGoogleReq}\n */\nproto.Auth.SignInGoogleReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAvatar(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignInGoogleReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInGoogleReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignInGoogleReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInGoogleReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAvatar();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignInGoogleReq} The clone.\n */\nproto.Auth.SignInGoogleReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignInGoogleReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.SignInGoogleReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInGoogleReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.Auth.SignInGoogleReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInGoogleReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string avatar = 3;\n * @return {string}\n */\nproto.Auth.SignInGoogleReq.prototype.getAvatar = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInGoogleReq.prototype.setAvatar = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignUpReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignUpReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignUpReq.displayName = 'proto.Auth.SignUpReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignUpReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignUpReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignUpReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignUpReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    password: msg.getPassword(),\n    name: msg.getName()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignUpReq}\n */\nproto.Auth.SignUpReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignUpReq;\n  return proto.Auth.SignUpReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignUpReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignUpReq}\n */\nproto.Auth.SignUpReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignUpReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignUpReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignUpReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignUpReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignUpReq} The clone.\n */\nproto.Auth.SignUpReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignUpReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.SignUpReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignUpReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string password = 2;\n * @return {string}\n */\nproto.Auth.SignUpReq.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignUpReq.prototype.setPassword = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nproto.Auth.SignUpReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignUpReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.ResetReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.ResetReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.ResetReq.displayName = 'proto.Auth.ResetReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.ResetReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.ResetReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.ResetReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.ResetReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: msg.getType(),\n    username: msg.getUsername()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.ResetReq}\n */\nproto.Auth.ResetReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.ResetReq;\n  return proto.Auth.ResetReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.ResetReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.ResetReq}\n */\nproto.Auth.ResetReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.ResetReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.ResetReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.ResetReq} The clone.\n */\nproto.Auth.ResetReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.ResetReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string type = 1;\n * @return {string}\n */\nproto.Auth.ResetReq.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetReq.prototype.setType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string username = 3;\n * @return {string}\n */\nproto.Auth.ResetReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.ResetRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.ResetRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.ResetRes.displayName = 'proto.Auth.ResetRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.ResetRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.ResetRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.ResetRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.ResetRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    error: msg.getError()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.ResetRes}\n */\nproto.Auth.ResetRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.ResetRes;\n  return proto.Auth.ResetRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.ResetRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.ResetRes}\n */\nproto.Auth.ResetRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.ResetRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.ResetRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.ResetRes} The clone.\n */\nproto.Auth.ResetRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.ResetRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.Auth.ResetRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string error = 2;\n * @return {string}\n */\nproto.Auth.ResetRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.ResetPasswordFinalStepReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.ResetPasswordFinalStepReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.ResetPasswordFinalStepReq.displayName = 'proto.Auth.ResetPasswordFinalStepReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.ResetPasswordFinalStepReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.ResetPasswordFinalStepReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.ResetPasswordFinalStepReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    token: msg.getToken(),\n    password: msg.getPassword()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.ResetPasswordFinalStepReq}\n */\nproto.Auth.ResetPasswordFinalStepReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.ResetPasswordFinalStepReq;\n  return proto.Auth.ResetPasswordFinalStepReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.ResetPasswordFinalStepReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.ResetPasswordFinalStepReq}\n */\nproto.Auth.ResetPasswordFinalStepReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToken(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.ResetPasswordFinalStepReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetPasswordFinalStepReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getToken();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.ResetPasswordFinalStepReq} The clone.\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.ResetPasswordFinalStepReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetPasswordFinalStepReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string token = 2;\n * @return {string}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.getToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetPasswordFinalStepReq.prototype.setToken = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string password = 3;\n * @return {string}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetPasswordFinalStepReq.prototype.setPassword = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\ngoog.object.extend(exports, proto.Auth);\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { toast } from 'react-toastify';\r\ntoast.configure()\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}