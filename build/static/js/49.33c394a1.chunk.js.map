{"version":3,"sources":["views/Workspace/Po/Cover/Cover.js","gRPC/userstory/userstory_grpc_web_pb.js","gRPC/userstory/userstory_pb.js"],"names":["proto","userstory","require","productbacklog","Cover","props","_this","Object","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onTextboxChangePriorityUserstory","event","title","tmpdata","state","dataUserStory","map","p","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","priority","target","value","setState","prevState","onTextboxChangeEstimationUserstory","estimation","onTextboxChangeSprintUserstory","sprint","onTextboxChangePriorityProductBacklog","dataProductBacklog","onTextboxChangeEstimationProductBacklog","onTextboxChangeSprintProductBacklog","loadUserstory","userstoryService","UserStoryClient","GetAllUserStoryReq","setRequesterid","getFromStorage","setAccesstoken","setProjectid","response","getAllUserStory","that","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","on","getStatus","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","id","getId","getName","as","getRole","want","getWant","so","getSo","status","code","console","log","end","loadProductbacklog","productbacklogService","ProductBacklogClient","GetAllProductBacklogReq","getAllProductBacklog","getProductbacklogid","getTitle","getPriority","getEstimation","getSprintid","getStatusbacklog","toggleActionStatus","modalActionStatus","handleStoryToBacklog","item","SendToProductBacklogReq","setId","setPriority","setEstimation","setStatusbacklog","setSprint","sendToProductBacklog","err","filter","e","actionStatus","priorityUserstory","estimationUserstory","sprintUserstory","handleBacklogToStory","SendToSprintBacklogReq","setProductbacklogid","sendToUserStory","priorityProductBacklog","estimationProductBacklog","sprintProductBacklog","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","size","isOpen","toggle","className","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","class","key","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","htmlFor","reactstrap__WEBPACK_IMPORTED_MODULE_18__","type","name","rows","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_19__","color","align","onClick","Component","grpc","web","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","UserStoryPromiseClient","methodInfo_UserStory_addNewUserStory","AbstractClientBase","MethodInfo","UserStoryRes","request","serializeBinary","deserializeBinary","prototype","addNewUserStory","metadata","callback","rpcCall","unaryCall","methodInfo_UserStory_updateUserStory","updateUserStory","methodInfo_UserStory_deleteUserStory","deleteUserStory","methodInfo_UserStory_sendToProductBacklog","methodInfo_UserStory_getAllUserStory","GetAllUserStoryRes","serverStreaming","module","exports","jspb","goog","global","Function","exportSymbol","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","statusbacklog","accesstoken","getAccesstoken","getSprint","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","length","writeString","cloneMessage","getFieldProto3","setField","AddNewUserStoryReq","role","setRole","setWant","setSo","setName","setStatus","UpdateUserStoryReq","userstoryid","getUserstoryid","setUserstoryid","DeleteUserStoryReq","object","extend"],"mappings":"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","file":"static/js/49.33c394a1.chunk.js","sourcesContent":["import {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../../../../service/storage'\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Row,\r\n  Table,\r\n  Pagination,\r\n  PaginationItem,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Progress,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  PaginationLink,\r\n} from 'reactstrap';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport cookie from 'react-cookies';\r\nconst proto = {};\r\nproto.userstory = require('../../../../gRPC/userstory/userstory_grpc_web_pb');\r\nproto.productbacklog = require('../../../../gRPC/productbacklog/productbacklog_grpc_web_pb');\r\n\r\nclass Cover extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataUserStory: [],\r\n      dataProductBacklog: [],\r\n      actionStatus: '',    //success or fail when action handleSave\r\n      modalActionStatus: false,\r\n\r\n      priorityUserstory: '',\r\n      estimationUserstory: '',\r\n      sprintUserstory: '',\r\n\r\n      priorityProductBacklog: '',\r\n      estimationProductBacklog: '',\r\n      sprintProductBacklog: '',\r\n\r\n      title: '',\r\n    }\r\n  };\r\n  //userstory\r\n  onTextboxChangePriorityUserstory = (event, title) => {\r\n    const tmpdata = this.state.dataUserStory.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, priority: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataUserStory: tmpdata,\r\n    }));\r\n  }\r\n  onTextboxChangeEstimationUserstory = (event, title) => {\r\n    const tmpdata = this.state.dataUserStory.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, estimation: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataUserStory: tmpdata,\r\n    }));\r\n  }\r\n  onTextboxChangeSprintUserstory = (event, title) => {\r\n    const tmpdata = this.state.dataUserStory.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, sprint: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataUserStory: tmpdata,\r\n    }));\r\n  }\r\n  //ProductBacklog\r\n  onTextboxChangePriorityProductBacklog = (event, title) => {\r\n    const tmpdata = this.state.dataProductBacklog.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, priority: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataProductBacklog: tmpdata,\r\n\r\n    }));\r\n  }\r\n  onTextboxChangeEstimationProductBacklog = (event, title) => {\r\n    const tmpdata = this.state.dataProductBacklog.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, estimation: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataProductBacklog: tmpdata,\r\n\r\n    }));\r\n  }\r\n  onTextboxChangeSprintProductBacklog = (event, title) => {\r\n    const tmpdata = this.state.dataProductBacklog.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, sprint: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataProductBacklog: tmpdata,\r\n\r\n    }));\r\n  }\r\n  loadUserstory = () => {\r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    var GetAllUserStoryReq = new proto.userstory.GetAllUserStoryReq();\r\n    GetAllUserStoryReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllUserStoryReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllUserStoryReq.setProjectid(getFromStorage(\"currentProject\"));\r\n\r\n    var response = userstoryService.getAllUserStory(GetAllUserStoryReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.setState(prevState => ({\r\n          dataUserStory: [...prevState.dataUserStory,\r\n          {\r\n            id: response.getId(),\r\n            title: response.getName(),\r\n            as: response.getRole(),\r\n            want: response.getWant(),\r\n            so: response.getSo()\r\n          }]\r\n        }));\r\n\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n  }\r\n  loadProductbacklog = () => {\r\n    //load productbacklog\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n    var GetAllProductBacklogReq = new proto.productbacklog.GetAllProductBacklogReq();\r\n    GetAllProductBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllProductBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllProductBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    let metadata = {}\r\n    var response = productbacklogService.getAllProductBacklog(GetAllProductBacklogReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.setState(prevState => ({\r\n          dataProductBacklog: [...prevState.dataProductBacklog,\r\n          {\r\n            id: response.getProductbacklogid(),\r\n            title: response.getTitle(),\r\n            as: response.getRole(),\r\n            want: response.getWant(),\r\n            so: response.getSo(),\r\n            priority: response.getPriority(),\r\n            estimation: response.getEstimation(),\r\n            sprint: response.getSprintid(),\r\n            status: response.getStatusbacklog()\r\n          }]\r\n        }));\r\n\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.loadUserstory();\r\n    this.loadProductbacklog();\r\n  }\r\n  toggleActionStatus = () => {\r\n    this.setState(prevState => ({\r\n      modalActionStatus: !prevState.modalActionStatus\r\n    }));\r\n  }\r\n\r\n\r\n  handleStoryToBacklog = (item) => {\r\n\r\n    //query \r\n\r\n\r\n    console.log(\"handleUpdate\")\r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var SendToProductBacklogReq = new proto.userstory.SendToProductBacklogReq();\r\n    SendToProductBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    SendToProductBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    SendToProductBacklogReq.setId(item.id);\r\n    SendToProductBacklogReq.setPriority(item.priority);\r\n    SendToProductBacklogReq.setEstimation(item.estimation);\r\n    SendToProductBacklogReq.setStatusbacklog(item.status);\r\n    SendToProductBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    SendToProductBacklogReq.setSprint(item.sprint);\r\n\r\n    userstoryService.sendToProductBacklog(SendToProductBacklogReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n\r\n          this.setState(prevState => ({\r\n            dataUserStory: [...prevState.dataUserStory.filter(function (e) { return e.id != item.id; })],\r\n            dataProductBacklog: [...prevState.dataProductBacklog, { id: item.id, title: item.title, as: item.as, want: item.want, so: item.so, priority: item.priority, estimation: item.estimation, sprint: item.sprint }]\r\n          }));\r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'SUCCESS',\r\n            priorityUserstory: '',\r\n            estimationUserstory: '',\r\n            sprintUserstory: '',\r\n          });\r\n        \r\n        } else {\r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'FAIL',\r\n          });\r\n\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  handleBacklogToStory = (item) => {\r\n\r\n\r\n\r\n    //query\r\n\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    console.log(\"so\" + this.state.so)\r\n    var SendToSprintBacklogReq = new proto.productbacklog.SendToSprintBacklogReq();\r\n    SendToSprintBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    SendToSprintBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    SendToSprintBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    SendToSprintBacklogReq.setProductbacklogid(item.id);\r\n    productbacklogService.sendToUserStory(SendToSprintBacklogReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n\r\n          this.setState(prevState => ({\r\n            dataProductBacklog:\r\n              [...prevState.dataProductBacklog.filter(function (e) { return e.id != item.id; })],\r\n            dataUserStory:\r\n              [...prevState.dataUserStory,\r\n              {\r\n                id: item.id,\r\n                title: item.title,\r\n                as: item.as,\r\n                want: item.want,\r\n                so: item.so,\r\n                priority: '',\r\n                estimation: '', sprint: ''\r\n              }]\r\n          })); \r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'SUCCESS',\r\n          });\r\n        \r\n        } else {\r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'FAIL',\r\n          });\r\n\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n    let that = this;\r\n    return (\r\n      <Row>\r\n        <Modal size=\"sm\" isOpen={that.state.modalActionStatus} toggle={that.toggleActionStatus} className={that.props.className}>\r\n          <ModalBody>\r\n            <center><h4>{that.state.actionStatus}</h4></center>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Col>\r\n          <Row>\r\n            <Col>\r\n              <div class=\"card border-primary mb-3\">\r\n                <div class=\"card-header bg-primary\">USER STORY</div>\r\n                <div class=\"card-body\">\r\n                  {this.state.dataUserStory.map(function (item, key) {\r\n                    return (\r\n                      <Card>\r\n                        <CardHeader>\r\n                          <i className=\"\"></i><strong>As: {item.as}</strong>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                          <h6>I want: {item.want}</h6>\r\n                          <h6>So that:  {item.so}</h6>\r\n                          <div class=\"row\">\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Label htmlFor=\"text-input\">Priority</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.priority} onChange={e => { that.onTextboxChangePriorityUserstory(e, item.title) }} />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Label htmlFor=\"text-input\">Estimation</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.estimation} onChange={e => { that.onTextboxChangeEstimationUserstory(e, item.title) }} />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div class=\"col col-lg-1 col-md-1 col-sm-1\">\r\n                              <Label htmlFor=\"text-input\">Sprint</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.sprint} onChange={e => { that.onTextboxChangeSprintUserstory(e, item.title) }} />\r\n                            </div>\r\n                          </div>\r\n                          <Button size=\"sm\" color=\"success\" align=\"center\" onClick={() => { that.handleStoryToBacklog(item) }}><i class=\"fa fa-arrow-right\"></i></Button>\r\n                        </CardBody>\r\n                      </Card>\r\n                    )\r\n                  })}\r\n\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col>\r\n              <div class=\"card border-primary mb-3\">\r\n                <div class=\"card-header bg-primary\">\r\n                  PRODUCT BACKLOG\r\n                  </div>\r\n                <div class=\"card-body\">\r\n                  {this.state.dataProductBacklog.map(function (item, key) {\r\n                    return (\r\n                      <Card>\r\n                        <CardHeader>\r\n                          <i className=\"\"></i><strong>As {item.as}</strong>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                          <h6>I want :  {item.want}</h6>\r\n                          <h6> So that:   {item.so}</h6>\r\n\r\n                          <div class=\"row\">\r\n\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Label htmlFor=\"text-input\">Priority</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.priority} onChange={e => { that.onTextboxChangePriorityProductBacklog(e, item.title) }} />\r\n                            </div>\r\n\r\n\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Label htmlFor=\"text-input\">Estimation</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.estimation} onChange={e => { that.onTextboxChangeEstimationProductBacklog(e, item.title) }} />\r\n                            </div>\r\n\r\n\r\n                            <div class=\"col col-lg-1 col-md-1 col-sm-1\">\r\n                              <Label htmlFor=\"text-input\">Sprint</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.sprint} onChange={e => { that.onTextboxChangeSprintProductBacklog(e, item.title) }} />\r\n                            </div>\r\n\r\n                          </div>\r\n                          <Button size=\"sm\" color=\"success\" align=\"center\" onClick={() => { that.handleBacklogToStory(item) }}><i class=\"fa fa-arrow-left\"></i></Button>\r\n                        </CardBody>\r\n                      </Card>\r\n                    )\r\n                  })}\r\n\r\n\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cover;\r\n","/**\n * @fileoverview gRPC-Web generated client stub for userstory\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.userstory = require('./userstory_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.userstory.UserStoryClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.userstory.UserStoryPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.AddNewUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_addNewUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.AddNewUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.AddNewUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.addNewUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/addNewUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_addNewUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.AddNewUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.addNewUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/addNewUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_addNewUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.UpdateUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_updateUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.UpdateUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.UpdateUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.updateUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/updateUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_updateUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.UpdateUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.updateUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/updateUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_updateUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.DeleteUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_deleteUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.DeleteUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.DeleteUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.deleteUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/deleteUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_deleteUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.DeleteUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.deleteUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/deleteUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_deleteUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.SendToProductBacklogReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_sendToProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.SendToProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.SendToProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.sendToProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/sendToProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_UserStory_sendToProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.SendToProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.sendToProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/sendToProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_UserStory_sendToProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.GetAllUserStoryReq,\n *   !proto.userstory.GetAllUserStoryRes>}\n */\nconst methodInfo_UserStory_getAllUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.GetAllUserStoryRes,\n  /** @param {!proto.userstory.GetAllUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.GetAllUserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.GetAllUserStoryReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.GetAllUserStoryRes>}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.getAllUserStory =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/userstory.UserStory/getAllUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_getAllUserStory);\n};\n\n\n/**\n * @param {!proto.userstory.GetAllUserStoryReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.GetAllUserStoryRes>}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryPromiseClient.prototype.getAllUserStory =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/userstory.UserStory/getAllUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_getAllUserStory);\n};\n\n\nmodule.exports = proto.userstory;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.userstory.AddNewUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.DeleteUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.GetAllUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.GetAllUserStoryRes', null, global);\ngoog.exportSymbol('proto.userstory.SendToProductBacklogReq', null, global);\ngoog.exportSymbol('proto.userstory.UpdateUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.UserStoryRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.SendToProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.SendToProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.SendToProductBacklogReq.displayName = 'proto.userstory.SendToProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.SendToProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.SendToProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.SendToProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.SendToProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    id: msg.getId(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    statusbacklog: msg.getStatusbacklog(),\n    accesstoken: msg.getAccesstoken(),\n    sprint: msg.getSprint()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.SendToProductBacklogReq}\n */\nproto.userstory.SendToProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.SendToProductBacklogReq;\n  return proto.userstory.SendToProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.SendToProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.SendToProductBacklogReq}\n */\nproto.userstory.SendToProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.SendToProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.SendToProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.SendToProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.SendToProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getSprint();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.SendToProductBacklogReq} The clone.\n */\nproto.userstory.SendToProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.SendToProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string id = 3;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setId = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string priority = 4;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string estimation = 5;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 6;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string accessToken = 7;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string sprint = 8;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getSprint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setSprint = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.AddNewUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.AddNewUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.AddNewUserStoryReq.displayName = 'proto.userstory.AddNewUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.AddNewUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.AddNewUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.AddNewUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.AddNewUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    accesstoken: msg.getAccesstoken(),\n    name: msg.getName()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.AddNewUserStoryReq}\n */\nproto.userstory.AddNewUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.AddNewUserStoryReq;\n  return proto.userstory.AddNewUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.AddNewUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.AddNewUserStoryReq}\n */\nproto.userstory.AddNewUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.AddNewUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.AddNewUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.AddNewUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.AddNewUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.AddNewUserStoryReq} The clone.\n */\nproto.userstory.AddNewUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.AddNewUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string accessToken = 6;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string name = 7;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.UserStoryRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.UserStoryRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.UserStoryRes.displayName = 'proto.userstory.UserStoryRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.UserStoryRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.UserStoryRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.UserStoryRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.UserStoryRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    id: msg.getId()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.UserStoryRes}\n */\nproto.userstory.UserStoryRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.UserStoryRes;\n  return proto.userstory.UserStoryRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.UserStoryRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.UserStoryRes}\n */\nproto.userstory.UserStoryRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.UserStoryRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UserStoryRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.UserStoryRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UserStoryRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.UserStoryRes} The clone.\n */\nproto.userstory.UserStoryRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.UserStoryRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.userstory.UserStoryRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UserStoryRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string id = 2;\n * @return {string}\n */\nproto.userstory.UserStoryRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UserStoryRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.UpdateUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.UpdateUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.UpdateUserStoryReq.displayName = 'proto.userstory.UpdateUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.UpdateUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.UpdateUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.UpdateUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.UpdateUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    userstoryid: msg.getUserstoryid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.UpdateUserStoryReq}\n */\nproto.userstory.UpdateUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.UpdateUserStoryReq;\n  return proto.userstory.UpdateUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.UpdateUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.UpdateUserStoryReq}\n */\nproto.userstory.UpdateUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserstoryid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.UpdateUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UpdateUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.UpdateUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UpdateUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getUserstoryid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.UpdateUserStoryReq} The clone.\n */\nproto.userstory.UpdateUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.UpdateUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string userStoryId = 3;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getUserstoryid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setUserstoryid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string role = 4;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string want = 5;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string so = 6;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string accessToken = 7;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.DeleteUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.DeleteUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.DeleteUserStoryReq.displayName = 'proto.userstory.DeleteUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.DeleteUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.DeleteUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.DeleteUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.DeleteUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    userstoryid: msg.getUserstoryid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.DeleteUserStoryReq}\n */\nproto.userstory.DeleteUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.DeleteUserStoryReq;\n  return proto.userstory.DeleteUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.DeleteUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.DeleteUserStoryReq}\n */\nproto.userstory.DeleteUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserstoryid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.DeleteUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.DeleteUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.DeleteUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.DeleteUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getUserstoryid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.DeleteUserStoryReq} The clone.\n */\nproto.userstory.DeleteUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.DeleteUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string userStoryId = 3;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getUserstoryid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setUserstoryid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.GetAllUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.GetAllUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.GetAllUserStoryReq.displayName = 'proto.userstory.GetAllUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.GetAllUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.GetAllUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.GetAllUserStoryReq}\n */\nproto.userstory.GetAllUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.GetAllUserStoryReq;\n  return proto.userstory.GetAllUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.GetAllUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.GetAllUserStoryReq}\n */\nproto.userstory.GetAllUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.GetAllUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.GetAllUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.GetAllUserStoryReq} The clone.\n */\nproto.userstory.GetAllUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.GetAllUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.GetAllUserStoryRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.GetAllUserStoryRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.GetAllUserStoryRes.displayName = 'proto.userstory.GetAllUserStoryRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.GetAllUserStoryRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.GetAllUserStoryRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    status: msg.getStatus(),\n    id: msg.getId(),\n    name: msg.getName()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.GetAllUserStoryRes}\n */\nproto.userstory.GetAllUserStoryRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.GetAllUserStoryRes;\n  return proto.userstory.GetAllUserStoryRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.GetAllUserStoryRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.GetAllUserStoryRes}\n */\nproto.userstory.GetAllUserStoryRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.GetAllUserStoryRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.GetAllUserStoryRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.GetAllUserStoryRes} The clone.\n */\nproto.userstory.GetAllUserStoryRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.GetAllUserStoryRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string role = 1;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string want = 2;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string so = 3;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string status = 4;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string id = 5;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string name = 6;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setName = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto.userstory);\n"],"sourceRoot":""}