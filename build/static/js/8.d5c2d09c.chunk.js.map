{"version":3,"sources":["../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/ModalHeader.js","gRPC/sprintbacklog/sprintbacklog_grpc_web_pb.js","gRPC/sprintbacklog/sprintbacklog_pb.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","n","prop_types__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_5___default","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","_utils__WEBPACK_IMPORTED_MODULE_7__","propTypes","children","a","node","inline","bool","tag","innerRef","oneOfType","object","func","string","className","cssModule","Form","_Component","props","_this","call","this","getRef","bind","Object","submit","_proto","prototype","ref","render","_this$props","Tag","attributes","classes","createElement","defaultProps","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","wrapTag","toggle","closeAriaLabel","charCode","number","close","ModalHeader","closeButton","WrapTag","closeIcon","String","fromCharCode","type","onClick","aria-label","aria-hidden","grpc","web","require","proto","sprintbacklog","SprintBacklogClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","SprintBacklogPromiseClient","methodInfo_SprintBacklog_deleteSprintBacklog","AbstractClientBase","MethodInfo","SprintBacklogRes","request","serializeBinary","deserializeBinary","deleteSprintBacklog","metadata","callback","rpcCall","unaryCall","methodInfo_SprintBacklog_getAllSprintBacklog","GetAllSprintBacklogRes","getAllSprintBacklog","serverStreaming","module","exports","jspb","goog","global","Function","exportSymbol","DeleteSprintBacklogReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","backlogid","getBacklogid","accesstoken","getAccesstoken","teamid","getTeamid","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setRequesterid","setProjectid","setBacklogid","setAccesstoken","setTeamid","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","length","writeString","cloneMessage","getFieldProto3","setField","status","getStatus","setStatus","GetAllSprintBacklogReq","title","getTitle","role","getRole","want","getWant","so","getSo","statusbacklog","getStatusbacklog","priority","getPriority","estimation","getEstimation","sprintid","getSprintid","start","getStart","deadline","getDeadline","setTitle","setRole","setWant","setSo","setStatusbacklog","setPriority","setEstimation","setSprintid","setStart","setDeadline","extend"],"mappings":"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","file":"static/js/8.d5c2d09c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  charCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  close: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'h5',\n  wrapTag: 'div',\n  closeAriaLabel: 'Close',\n  charCode: 215\n};\n\nvar ModalHeader = function ModalHeader(props) {\n  var closeButton;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      toggle = props.toggle,\n      Tag = props.tag,\n      WrapTag = props.wrapTag,\n      closeAriaLabel = props.closeAriaLabel,\n      charCode = props.charCode,\n      close = props.close,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"charCode\", \"close\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-header'), cssModule);\n\n  if (!close && toggle) {\n    var closeIcon = typeof charCode === 'number' ? String.fromCharCode(charCode) : charCode;\n    closeButton = React.createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('close', cssModule),\n      \"aria-label\": closeAriaLabel\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, closeIcon));\n  }\n\n  return React.createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), React.createElement(Tag, {\n    className: mapToCssModules('modal-title', cssModule)\n  }, children), close || closeButton);\n};\n\nModalHeader.propTypes = propTypes;\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","/**\n * @fileoverview gRPC-Web generated client stub for sprintbacklog\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.sprintbacklog = require('./sprintbacklog_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprintbacklog.SprintBacklogClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprintbacklog.SprintBacklogPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.DeleteSprintBacklogReq,\n *   !proto.sprintbacklog.SprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_deleteSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.SprintBacklogRes,\n  /** @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.SprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.sprintbacklog.SprintBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.SprintBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.deleteSprintBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/deleteSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_deleteSprintBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.sprintbacklog.SprintBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.deleteSprintBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/deleteSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_deleteSprintBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.GetAllSprintBacklogReq,\n *   !proto.sprintbacklog.GetAllSprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_getAllSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.GetAllSprintBacklogRes,\n  /** @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.GetAllSprintBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.getAllSprintBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/getAllSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_getAllSprintBacklog);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.GetAllSprintBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.getAllSprintBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/getAllSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_getAllSprintBacklog);\n};\n\n\nmodule.exports = proto.sprintbacklog;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.sprintbacklog.DeleteSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.sprintbacklog.GetAllSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.sprintbacklog.GetAllSprintBacklogRes', null, global);\ngoog.exportSymbol('proto.sprintbacklog.SprintBacklogRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.DeleteSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.DeleteSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.DeleteSprintBacklogReq.displayName = 'proto.sprintbacklog.DeleteSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.DeleteSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    backlogid: msg.getBacklogid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.DeleteSprintBacklogReq;\n  return proto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq} The clone.\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.DeleteSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string teamId = 5;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.SprintBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.SprintBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.SprintBacklogRes.displayName = 'proto.sprintbacklog.SprintBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.SprintBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.SprintBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.SprintBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    backlogid: msg.getBacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.SprintBacklogRes}\n */\nproto.sprintbacklog.SprintBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.SprintBacklogRes;\n  return proto.sprintbacklog.SprintBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.SprintBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.SprintBacklogRes}\n */\nproto.sprintbacklog.SprintBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.SprintBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.SprintBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.SprintBacklogRes} The clone.\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.SprintBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.GetAllSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.GetAllSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.GetAllSprintBacklogReq.displayName = 'proto.sprintbacklog.GetAllSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.GetAllSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.GetAllSprintBacklogReq;\n  return proto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq} The clone.\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.GetAllSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string teamId = 4;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.GetAllSprintBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.GetAllSprintBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.GetAllSprintBacklogRes.displayName = 'proto.sprintbacklog.GetAllSprintBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.GetAllSprintBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    title: msg.getTitle(),\n    backlogid: msg.getBacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    status: msg.getStatus()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.GetAllSprintBacklogRes;\n  return proto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes} The clone.\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.GetAllSprintBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string title = 1;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string backlogId = 2;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 11;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string priority = 6;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string estimation = 7;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string sprintId = 8;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string start = 12;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string deadline = 10;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string status = 9;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\ngoog.object.extend(exports, proto.sprintbacklog);\n"],"sourceRoot":""}