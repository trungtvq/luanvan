{"version":3,"sources":["contexts/authContext.js","assets/img/brand/logo.png","service/chat.js","gRPC/auth/auth_grpc_web_pb.js","gRPC/myproject/myproject_grpc_web_pb.js","actions/index.js","gRPC/chat/chat_grpc_web_pb.js","gRPC/chat/chat_pb.js","gRPC/auth/auth_pb.js","gRPC/myproject/myproject_pb.js","Client.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","authContext","n","React","createContext","token","signInEmail","login","logout","module","exports","p","proto","chat","require","Chat","handleNewUserMessage","newMessage","chatService","ChatClient","SendMsgReq","setRequesterid","cookie","load","setAccesstoken","setChannelid","setName","setMsg","addResponseMessage","sendMsg","err","response","console","log","getStatus","connectChat","on","getSendername","getMsg","status","end","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","react_chat_widget__WEBPACK_IMPORTED_MODULE_6__","this","profileAvatar","logo","title","subtitle","Component","grpc","web","Auth","AuthClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","AuthPromiseClient","methodInfo_Auth_SignIn","AbstractClientBase","MethodInfo","SignInRes","request","serializeBinary","deserializeBinary","prototype","signIn","metadata","callback","rpcCall","unaryCall","methodInfo_Auth_SignUp","signUp","methodInfo_Auth_ResetPassword","ResetRes","resetPassword","methodInfo_Auth_ResetPasswordFinalStep","resetPasswordFinalStep","methodInfo_Auth_SignInGoogle","signInGoogle","methodInfo_Auth_AuthSession","authSession","myproject","MyprojectClient","MyprojectPromiseClient","methodInfo_Myproject_addNewProject","ProjectRes","addNewProject","methodInfo_Myproject_updateProject","updateProject","methodInfo_Myproject_deleteProject","deleteProject","methodInfo_Myproject_getAllProject","getAllProject","serverStreaming","d","__webpack_exports__","REQUEST_POSTS","RECEIVE_POSTS","SELECT_SUBREDDIT","INVALIDATE_SUBREDDIT","DO_LOGIN","DO_LOGOUT","GET_PROJECT_SELECTED","SET_PROJECT_SELETED","FETCH_ALL_PROJECT","selectSubreddit","invalidateSubreddit","fetchPostsIfNeeded","saveLogin","removeLogin","addProject","ADD_PROJECT","UPDATE_PROJECT","DELETE_PROJECT","subreddit","type","fetchPosts","dispatch","requestPosts","fetch","concat","then","json","posts","data","children","map","child","receivedAt","Date","now","receivePosts","getState","state","postsBySubreddit","isFetching","didInvalidate","shouldFetchPosts","id","email","name","avatar","topic","start","isPrivate","progress","ChatPromiseClient","methodInfo_Chat_ConnectRenew","SendMsgRes","connectRenew","methodInfo_Chat_ConnectChat","methodInfo_Chat_SendMsg","jspb","goog","global","Function","exportSymbol","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","accesstoken","getAccesstoken","requesterid","getRequesterid","getName","channelid","getChannelid","getType","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setType","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","length","writeString","cloneMessage","getFieldProto3","setField","sendername","time","getTime","setSendername","setTime","setStatus","object","extend","SignInReq","username","getUsername","password","getPassword","setUsername","setPassword","AuthSessionReq","session","getSession","getId","setSession","setId","error","getError","getResponse","getAvatar","setError","setResponse","setAvatar","SignInGoogleReq","SignUpReq","ResetReq","ResetPasswordFinalStepReq","getToken","setToken","AddNewProjectReq","getTopic","projectname","getProjectname","getStart","getEnd","pb_private","getPrivate","detail","getDetail","getCookie","setTopic","setProjectname","setStart","setEnd","setPrivate","setDetail","setCookie","UpdateProjectReq","projectid","getProjectid","getProgress","setProjectid","setProgress","DeleteProjectReq","GetAllProjectReq","members","getMembers","setMembers","loading","react_default","auth","DefaultLayout","Loadable","loader","Promise","all","e","bind","Login","Register","Page404","Page500","PagePay","AsyncApp","ResetSecond","ResetFirst","HomeMain","HomeContact","HomeService","HomeSolve","HomePayment","HomeFinal","Demo","MyProject","ProjectDone","ProjectTodo","CreateProject","NoProject","ProfileDetail","ProfileEdit","Client","_this","authService","props","remove","Provider","BrowserRouter","isLogin","Switch","Route","exact","path","component","connect","changeStatusLogin","rootReducer","combineReducers","arguments","action","Object","assign","defineProperty","items","lastUpdated","selectedSubreddit","changeStatusProject","projectId","projectName","updateProjectLoaded","newProject","project","needUpdate","push","ownerName","private","item","key","loggerMiddleware","createLogger","preloadedState","store","createStore","applyMiddleware","thunkMiddleware","App","es","src_Client","Boolean","window","location","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27ea0a76.chunk.js","sourcesContent":["import React from \"react\";\r\nconst authContext = React.createContext({\r\n\ttoken:null,\r\n\tsignInEmail: null,\r\n\tlogin: (token,signInEmail)=>{},\r\n\tlogout: ()=>{}\r\n});\r\nexport default authContext;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.c7fd352d.png\";","import React, { Component } from 'react';\r\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\r\n\r\nimport 'react-chat-widget/lib/styles.css';\r\nimport logo from '../assets/img/brand/logo.png';\r\nimport cookie from 'react-cookies';\r\n\r\nconst proto = {};\r\n\r\nproto.chat = require('./../gRPC/chat/chat_grpc_web_pb');\r\nclass Chat extends Component {\r\n    componentDidMount() {\r\n      addResponseMessage(\"Welcome to this awesome chat!\");\r\n      const chatService =new proto.chat.ChatClient('https://www.overlead.co');\r\n      var metadata = {};\r\n\r\n     var SendMsgReq=new proto.chat.SendMsgReq();\r\n     SendMsgReq.setRequesterid(cookie.load(\"userId\"));\r\n     SendMsgReq.setAccesstoken(cookie.load(\"accessToken\"));\r\n     SendMsgReq.setChannelid(cookie.load(\"currentProject\"));\r\n     SendMsgReq.setName(cookie.load(\"name\"))\r\n     var response = chatService.connectChat(SendMsgReq,metadata)\r\n  \r\n     response.on('data',function(response){\r\n          console.log(response.getStatus())\r\n          addResponseMessage(response.getSendername()+\" said: \"+ response.getMsg());\r\n          console.log(\"response\"+response.getMsg())\r\n        })\r\n  \r\n        response.on('status',function(status){\r\n        console.log(\"client connect\")\r\n      })\r\n  \r\n      response.on('end',function(end){\r\n        console.log(\"client end\")\r\n      })\r\n    }\r\n    handleNewUserMessage = (newMessage) => {\r\n      const chatService =new proto.chat.ChatClient('https://www.overlead.co');\r\n      var metadata = {};\r\n\r\n     var SendMsgReq=new proto.chat.SendMsgReq();\r\n     SendMsgReq.setRequesterid(cookie.load(\"userId\"));\r\n     SendMsgReq.setAccesstoken(cookie.load(\"accessToken\"));\r\n     SendMsgReq.setChannelid(cookie.load(\"currentProject\"));\r\n     SendMsgReq.setName(cookie.load(\"name\"))\r\n     SendMsgReq.setMsg(newMessage)\r\n     addResponseMessage(\"tests\");\r\n\r\n      chatService.sendMsg(SendMsgReq,metadata,(err, response) => {\r\n      if (err) { //if error\r\n         console.log(err);\r\n         console.log(\"error\")\r\n      } else { \r\n        console.log(response.getStatus())\r\n      }\r\n    })}\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"App\">\r\n          <Widget\r\n            handleNewUserMessage={this.handleNewUserMessage}\r\n            profileAvatar={logo}\r\n            title=\"My new awesome title\"\r\n            subtitle=\"And my cool subtitle\"\r\n          />\r\n        </div>\r\n      );\r\n    } \r\n  }\r\n  export default Chat;","/**\n * @fileoverview gRPC-Web generated client stub for Auth\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.Auth = require('./auth_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.Auth.AuthClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.Auth.AuthPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.SignInReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_SignIn = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.SignInReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.SignInReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.signIn =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/SignIn',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignIn,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.SignInReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.signIn =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/SignIn',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignIn);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.SignUpReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_SignUp = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.SignUpReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.SignUpReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.signUp =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/SignUp',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignUp,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.SignUpReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.signUp =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/SignUp',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignUp);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.ResetReq,\n *   !proto.Auth.ResetRes>}\n */\nconst methodInfo_Auth_ResetPassword = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.ResetRes,\n  /** @param {!proto.Auth.ResetReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.ResetRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.ResetReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.ResetRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.ResetRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.resetPassword =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/ResetPassword',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPassword,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.ResetReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.ResetRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.resetPassword =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/ResetPassword',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPassword);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.ResetPasswordFinalStepReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_ResetPasswordFinalStep = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.ResetPasswordFinalStepReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.ResetPasswordFinalStepReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.resetPasswordFinalStep =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/ResetPasswordFinalStep',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPasswordFinalStep,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.ResetPasswordFinalStepReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.resetPasswordFinalStep =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/ResetPasswordFinalStep',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPasswordFinalStep);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.SignInGoogleReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_SignInGoogle = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.SignInGoogleReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.SignInGoogleReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.signInGoogle =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/SignInGoogle',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignInGoogle,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.SignInGoogleReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.signInGoogle =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/SignInGoogle',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignInGoogle);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.AuthSessionReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_AuthSession = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.AuthSessionReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.AuthSessionReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.authSession =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/AuthSession',\n      request,\n      metadata || {},\n      methodInfo_Auth_AuthSession,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.AuthSessionReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.authSession =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/AuthSession',\n      request,\n      metadata || {},\n      methodInfo_Auth_AuthSession);\n};\n\n\nmodule.exports = proto.Auth;\n\n","/**\n * @fileoverview gRPC-Web generated client stub for myproject\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.myproject = require('./myproject_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.myproject.MyprojectClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.myproject.MyprojectPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.AddNewProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_addNewProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.AddNewProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.AddNewProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.myproject.ProjectRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.addNewProject =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/myproject.Myproject/addNewProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_addNewProject,\n      callback);\n};\n\n\n/**\n * @param {!proto.myproject.AddNewProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.myproject.ProjectRes>}\n *     A native promise that resolves to the response\n */\nproto.myproject.MyprojectPromiseClient.prototype.addNewProject =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/myproject.Myproject/addNewProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_addNewProject);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.UpdateProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_updateProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.UpdateProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.UpdateProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.myproject.ProjectRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.updateProject =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/myproject.Myproject/updateProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_updateProject,\n      callback);\n};\n\n\n/**\n * @param {!proto.myproject.UpdateProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.myproject.ProjectRes>}\n *     A native promise that resolves to the response\n */\nproto.myproject.MyprojectPromiseClient.prototype.updateProject =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/myproject.Myproject/updateProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_updateProject);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.DeleteProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_deleteProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.DeleteProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.DeleteProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.myproject.ProjectRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.deleteProject =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/myproject.Myproject/deleteProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_deleteProject,\n      callback);\n};\n\n\n/**\n * @param {!proto.myproject.DeleteProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.myproject.ProjectRes>}\n *     A native promise that resolves to the response\n */\nproto.myproject.MyprojectPromiseClient.prototype.deleteProject =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/myproject.Myproject/deleteProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_deleteProject);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.GetAllProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_getAllProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.GetAllProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.GetAllProjectReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.getAllProject =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/myproject.Myproject/getAllProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_getAllProject);\n};\n\n\n/**\n * @param {!proto.myproject.GetAllProjectReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectPromiseClient.prototype.getAllProject =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/myproject.Myproject/getAllProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_getAllProject);\n};\n\n\nmodule.exports = proto.myproject;\n\n","//import fetch from 'cross-fetch'\r\nexport const REQUEST_POSTS = 'REQUEST_POSTS'\r\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\r\nexport const SELECT_SUBREDDIT = 'SELECT_SUBREDDIT'\r\nexport const INVALIDATE_SUBREDDIT = 'INVALIDATE_SUBREDDIT'\r\nexport const DO_LOGIN = 'DO_LOGIN'\r\nexport const DO_LOGOUT = 'DO_LOGOUT'\r\nexport const GET_PROJECT_SELECTED = 'GET_PROJECT_SELECTED'\r\nexport const SET_PROJECT_SELETED = 'SET_PROJECT_SELETED'\r\nexport const FETCH_ALL_PROJECT = 'FETCH_ALL_PROJECT'\r\n\r\n\r\n//hook\r\nexport const NEW_PROJECT_COME = 'NEW_PROJECT_COME'\r\nexport const UPDATE_PROJECT_COME = 'UPDATE_PROJECT_COME'\r\nexport const REMOVE_PROJECT_COME = 'REMOVE_PROJECT_COMEs'\r\n\r\nexport function selectSubreddit(subreddit) {\r\n  return {\r\n    type: SELECT_SUBREDDIT,\r\n    subreddit\r\n  }\r\n}\r\n\r\nexport function invalidateSubreddit(subreddit) {\r\n  return {\r\n    type: INVALIDATE_SUBREDDIT,\r\n    subreddit\r\n  }\r\n}\r\n\r\nfunction requestPosts(subreddit) {\r\n  return {\r\n    type: REQUEST_POSTS,\r\n    subreddit\r\n  }\r\n}\r\n\r\nfunction receivePosts(subreddit, json) {\r\n  return {\r\n    type: RECEIVE_POSTS,\r\n    subreddit,\r\n    posts: json.data.children.map(child => child.data),\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\n\r\nfunction fetchPosts(subreddit) {\r\n  return dispatch => {\r\n    dispatch(requestPosts(subreddit))\r\n    return fetch(`https://www.reddit.com/r/${subreddit}.json`)\r\n      .then(response => response.json())\r\n      .then(json => dispatch(receivePosts(subreddit, json)))\r\n  }\r\n}\r\n\r\nfunction shouldFetchPosts(state, subreddit) {\r\n  const posts = state.postsBySubreddit[subreddit]\r\n  if (!posts) {\r\n    return true\r\n  } else if (posts.isFetching) {\r\n    return false\r\n  } else {\r\n    return posts.didInvalidate\r\n  }\r\n}\r\n\r\nexport function fetchPostsIfNeeded(subreddit) {\r\n  console.log(\"fetchPostsIfNeeded\")  \r\n  return (dispatch, getState) => {\r\n    console.log(dispatch)\r\n    console.log(getState())\r\n    if (shouldFetchPosts(getState(), subreddit)) {\r\n      return dispatch(fetchPosts(subreddit))\r\n    }\r\n  }\r\n}\r\n\r\nexport function subcriptChannel(channelId){\r\n  \r\n}\r\n\r\nexport function saveLogin(id,token,email,name,avatar) {\r\n  return {\r\n    type: DO_LOGIN,\r\n    id,\r\n    token,\r\n    email,\r\n    name,\r\n    avatar\r\n  }\r\n}\r\nexport function removeLogin() {\r\n  return {\r\n    type: DO_LOGOUT\r\n  }\r\n}\r\nexport function getProject(){\r\n  return {\r\n    type: GET_PROJECT_SELECTED\r\n  }\r\n}\r\nexport function setProject(id,name){\r\n  return {\r\n    type: SET_PROJECT_SELETED,\r\n    id,\r\n    name\r\n  }\r\n}\r\nexport function addProject(id,topic,name,start,end,isPrivate,progress){\r\n  return {\r\n    type: ADD_PROJECT,\r\n    id,topic,name,start,end,isPrivate,progress\r\n  }\r\n}\r\nexport function deleteProject(id){\r\n  return {\r\n    type: DELETE_PROJECT,\r\n    id\r\n  }\r\n}\r\nexport function updateProject(id,topic,name,start,end,isPrivate,progress  ){\r\n  return {\r\n    type: UPDATE_PROJECT,\r\n    id,topic,name,start,end,isPrivate,progress\r\n  }\r\n}\r\nexport function fetchmyproject(id,ownerName,topic,name,start,end,isPrivate){\r\n  return {\r\n    type: ADD_PROJECT,\r\n    id,ownerName,topic,name,start,end,isPrivate\r\n  }\r\n}\r\n\r\n//TYPE:\r\nexport const ADD_PROJECT = 'ADD_PROJECT'\r\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT'\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT'\r\nexport const FORCE_RERENDER = 'FORCE_RERENDER'\r\nexport const NOTIFY_COME = 'FORCE_RERENDER'\r\n\r\nfunction fetch_notify(){\r\n\r\n}\r\nfunction fetch_message(){\r\n\r\n}\r\nfunction fetch_task(){\r\n\r\n}\r\nexport function hook(type,id,detail){\r\n  return (dispatch, getState) => {\r\n  switch (type){\r\n    case \"new_message\":\r\n        return dispatch(fetch_message(id,detail))\r\n    case \"new_notify\":\r\n        return dispatch(fetch_notify(id,detail))\r\n    case \"new_task\":\r\n        return dispatch(fetch_task(id,detail))\r\n    \r\n    }\r\n  }\r\n}","/**\n * @fileoverview gRPC-Web generated client stub for chat\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.chat = require('./chat_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.chat.ChatClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.chat.ChatPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.chat.SendMsgReq,\n *   !proto.chat.SendMsgRes>}\n */\nconst methodInfo_Chat_ConnectRenew = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.chat.SendMsgRes,\n  /** @param {!proto.chat.SendMsgReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.SendMsgRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.chat.SendMsgRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.SendMsgRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.connectRenew =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/ConnectRenew',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectRenew,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.SendMsgRes>}\n *     A native promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.connectRenew =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/ConnectRenew',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectRenew);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.chat.SendMsgReq,\n *   !proto.chat.SendMsgRes>}\n */\nconst methodInfo_Chat_ConnectChat = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.chat.SendMsgRes,\n  /** @param {!proto.chat.SendMsgReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.SendMsgRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.chat.SendMsgRes>}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.connectChat =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/chat.Chat/ConnectChat',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectChat);\n};\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.chat.SendMsgRes>}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatPromiseClient.prototype.connectChat =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/chat.Chat/ConnectChat',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectChat);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.chat.SendMsgReq,\n *   !proto.chat.SendMsgRes>}\n */\nconst methodInfo_Chat_SendMsg = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.chat.SendMsgRes,\n  /** @param {!proto.chat.SendMsgReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.SendMsgRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.chat.SendMsgRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.SendMsgRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.sendMsg =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/SendMsg',\n      request,\n      metadata || {},\n      methodInfo_Chat_SendMsg,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.SendMsgRes>}\n *     A native promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.sendMsg =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/SendMsg',\n      request,\n      metadata || {},\n      methodInfo_Chat_SendMsg);\n};\n\n\nmodule.exports = proto.chat;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.chat.SendMsgReq', null, global);\ngoog.exportSymbol('proto.chat.SendMsgRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.SendMsgReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.SendMsgReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.chat.SendMsgReq.displayName = 'proto.chat.SendMsgReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.SendMsgReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.SendMsgReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.SendMsgReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.chat.SendMsgReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accesstoken: msg.getAccesstoken(),\n    requesterid: msg.getRequesterid(),\n    name: msg.getName(),\n    channelid: msg.getChannelid(),\n    msg: msg.getMsg(),\n    type: msg.getType()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.SendMsgReq}\n */\nproto.chat.SendMsgReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.SendMsgReq;\n  return proto.chat.SendMsgReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.SendMsgReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.SendMsgReq}\n */\nproto.chat.SendMsgReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMsg(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.chat.SendMsgReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.SendMsgReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getChannelid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getMsg();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.chat.SendMsgReq} The clone.\n */\nproto.chat.SendMsgReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.chat.SendMsgReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string accessToken = 1;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string requesterId = 2;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string name = 6;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string channelId = 3;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getChannelid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setChannelid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string msg = 4;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string type = 5;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setType = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.SendMsgRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.SendMsgRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.chat.SendMsgRes.displayName = 'proto.chat.SendMsgRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.SendMsgRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.SendMsgRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.SendMsgRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.chat.SendMsgRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelid: msg.getChannelid(),\n    msg: msg.getMsg(),\n    type: msg.getType(),\n    sendername: msg.getSendername(),\n    time: msg.getTime(),\n    status: msg.getStatus()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.SendMsgRes}\n */\nproto.chat.SendMsgRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.SendMsgRes;\n  return proto.chat.SendMsgRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.SendMsgRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.SendMsgRes}\n */\nproto.chat.SendMsgRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMsg(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSendername(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTime(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.chat.SendMsgRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.SendMsgRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getChannelid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getMsg();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getSendername();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTime();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.chat.SendMsgRes} The clone.\n */\nproto.chat.SendMsgRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.chat.SendMsgRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string channelId = 1;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getChannelid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setChannelid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string msg = 2;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setType = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string senderName = 4;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getSendername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setSendername = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string time = 5;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setTime = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string status = 6;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto.chat);\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.Auth.AuthSessionReq', null, global);\ngoog.exportSymbol('proto.Auth.ResetPasswordFinalStepReq', null, global);\ngoog.exportSymbol('proto.Auth.ResetReq', null, global);\ngoog.exportSymbol('proto.Auth.ResetRes', null, global);\ngoog.exportSymbol('proto.Auth.SignInGoogleReq', null, global);\ngoog.exportSymbol('proto.Auth.SignInReq', null, global);\ngoog.exportSymbol('proto.Auth.SignInRes', null, global);\ngoog.exportSymbol('proto.Auth.SignUpReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignInReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignInReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignInReq.displayName = 'proto.Auth.SignInReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignInReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignInReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignInReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignInReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    password: msg.getPassword()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignInReq}\n */\nproto.Auth.SignInReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignInReq;\n  return proto.Auth.SignInReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignInReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignInReq}\n */\nproto.Auth.SignInReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignInReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignInReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignInReq} The clone.\n */\nproto.Auth.SignInReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignInReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.SignInReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string password = 2;\n * @return {string}\n */\nproto.Auth.SignInReq.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInReq.prototype.setPassword = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.AuthSessionReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.AuthSessionReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.AuthSessionReq.displayName = 'proto.Auth.AuthSessionReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.AuthSessionReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.AuthSessionReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.AuthSessionReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.AuthSessionReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    session: msg.getSession(),\n    id: msg.getId(),\n    time: msg.getTime()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.AuthSessionReq}\n */\nproto.Auth.AuthSessionReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.AuthSessionReq;\n  return proto.Auth.AuthSessionReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.AuthSessionReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.AuthSessionReq}\n */\nproto.Auth.AuthSessionReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSession(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.AuthSessionReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.AuthSessionReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.AuthSessionReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.AuthSessionReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getSession();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTime();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.AuthSessionReq} The clone.\n */\nproto.Auth.AuthSessionReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.AuthSessionReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string session = 1;\n * @return {string}\n */\nproto.Auth.AuthSessionReq.prototype.getSession = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.AuthSessionReq.prototype.setSession = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string id = 2;\n * @return {string}\n */\nproto.Auth.AuthSessionReq.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.AuthSessionReq.prototype.setId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string time = 3;\n * @return {string}\n */\nproto.Auth.AuthSessionReq.prototype.getTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.AuthSessionReq.prototype.setTime = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignInRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignInRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignInRes.displayName = 'proto.Auth.SignInRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignInRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignInRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignInRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignInRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    error: msg.getError(),\n    response: msg.getResponse(),\n    type: msg.getType(),\n    id: msg.getId(),\n    session: msg.getSession(),\n    name: msg.getName(),\n    avatar: msg.getAvatar()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignInRes}\n */\nproto.Auth.SignInRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignInRes;\n  return proto.Auth.SignInRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignInRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignInRes}\n */\nproto.Auth.SignInRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setResponse(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSession(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAvatar(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignInRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignInRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getResponse();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSession();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getAvatar();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignInRes} The clone.\n */\nproto.Auth.SignInRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignInRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string error = 4;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string response = 2;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getResponse = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setResponse = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setType = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string id = 5;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string session = 6;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getSession = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setSession = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string name = 7;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setName = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string avatar = 8;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getAvatar = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setAvatar = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignInGoogleReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignInGoogleReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignInGoogleReq.displayName = 'proto.Auth.SignInGoogleReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignInGoogleReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignInGoogleReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignInGoogleReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignInGoogleReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    name: msg.getName(),\n    avatar: msg.getAvatar()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignInGoogleReq}\n */\nproto.Auth.SignInGoogleReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignInGoogleReq;\n  return proto.Auth.SignInGoogleReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignInGoogleReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignInGoogleReq}\n */\nproto.Auth.SignInGoogleReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAvatar(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignInGoogleReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInGoogleReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignInGoogleReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInGoogleReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAvatar();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignInGoogleReq} The clone.\n */\nproto.Auth.SignInGoogleReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignInGoogleReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.SignInGoogleReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInGoogleReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.Auth.SignInGoogleReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInGoogleReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string avatar = 3;\n * @return {string}\n */\nproto.Auth.SignInGoogleReq.prototype.getAvatar = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInGoogleReq.prototype.setAvatar = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignUpReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignUpReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignUpReq.displayName = 'proto.Auth.SignUpReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignUpReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignUpReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignUpReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignUpReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    password: msg.getPassword(),\n    name: msg.getName()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignUpReq}\n */\nproto.Auth.SignUpReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignUpReq;\n  return proto.Auth.SignUpReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignUpReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignUpReq}\n */\nproto.Auth.SignUpReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignUpReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignUpReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignUpReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignUpReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignUpReq} The clone.\n */\nproto.Auth.SignUpReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignUpReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.SignUpReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignUpReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string password = 2;\n * @return {string}\n */\nproto.Auth.SignUpReq.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignUpReq.prototype.setPassword = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nproto.Auth.SignUpReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignUpReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.ResetReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.ResetReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.ResetReq.displayName = 'proto.Auth.ResetReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.ResetReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.ResetReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.ResetReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.ResetReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: msg.getType(),\n    username: msg.getUsername()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.ResetReq}\n */\nproto.Auth.ResetReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.ResetReq;\n  return proto.Auth.ResetReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.ResetReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.ResetReq}\n */\nproto.Auth.ResetReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.ResetReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.ResetReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.ResetReq} The clone.\n */\nproto.Auth.ResetReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.ResetReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string type = 1;\n * @return {string}\n */\nproto.Auth.ResetReq.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetReq.prototype.setType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string username = 3;\n * @return {string}\n */\nproto.Auth.ResetReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.ResetRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.ResetRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.ResetRes.displayName = 'proto.Auth.ResetRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.ResetRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.ResetRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.ResetRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.ResetRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    error: msg.getError()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.ResetRes}\n */\nproto.Auth.ResetRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.ResetRes;\n  return proto.Auth.ResetRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.ResetRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.ResetRes}\n */\nproto.Auth.ResetRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.ResetRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.ResetRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.ResetRes} The clone.\n */\nproto.Auth.ResetRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.ResetRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.Auth.ResetRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string error = 2;\n * @return {string}\n */\nproto.Auth.ResetRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.ResetPasswordFinalStepReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.ResetPasswordFinalStepReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.ResetPasswordFinalStepReq.displayName = 'proto.Auth.ResetPasswordFinalStepReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.ResetPasswordFinalStepReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.ResetPasswordFinalStepReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.ResetPasswordFinalStepReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    token: msg.getToken(),\n    password: msg.getPassword()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.ResetPasswordFinalStepReq}\n */\nproto.Auth.ResetPasswordFinalStepReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.ResetPasswordFinalStepReq;\n  return proto.Auth.ResetPasswordFinalStepReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.ResetPasswordFinalStepReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.ResetPasswordFinalStepReq}\n */\nproto.Auth.ResetPasswordFinalStepReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToken(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.ResetPasswordFinalStepReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetPasswordFinalStepReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getToken();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.ResetPasswordFinalStepReq} The clone.\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.ResetPasswordFinalStepReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetPasswordFinalStepReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string token = 2;\n * @return {string}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.getToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetPasswordFinalStepReq.prototype.setToken = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string password = 3;\n * @return {string}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetPasswordFinalStepReq.prototype.setPassword = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\ngoog.object.extend(exports, proto.Auth);\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.myproject.AddNewProjectReq', null, global);\ngoog.exportSymbol('proto.myproject.DeleteProjectReq', null, global);\ngoog.exportSymbol('proto.myproject.GetAllProjectReq', null, global);\ngoog.exportSymbol('proto.myproject.ProjectRes', null, global);\ngoog.exportSymbol('proto.myproject.UpdateProjectReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.AddNewProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.AddNewProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.AddNewProjectReq.displayName = 'proto.myproject.AddNewProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.AddNewProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.AddNewProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.AddNewProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.AddNewProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    topic: msg.getTopic(),\n    requesterid: msg.getRequesterid(),\n    projectname: msg.getProjectname(),\n    start: msg.getStart(),\n    end: msg.getEnd(),\n    pb_private: msg.getPrivate(),\n    detail: msg.getDetail(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.AddNewProjectReq}\n */\nproto.myproject.AddNewProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.AddNewProjectReq;\n  return proto.myproject.AddNewProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.AddNewProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.AddNewProjectReq}\n */\nproto.myproject.AddNewProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTopic(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectname(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEnd(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivate(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDetail(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.AddNewProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.AddNewProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.AddNewProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.AddNewProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTopic();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProjectname();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getEnd();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getPrivate();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getDetail();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.AddNewProjectReq} The clone.\n */\nproto.myproject.AddNewProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.AddNewProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string topic = 1;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getTopic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setTopic = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string requesterId = 2;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string projectName = 3;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getProjectname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setProjectname = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string start = 4;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string end = 5;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getEnd = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string private = 6;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getPrivate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string detail = 8;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getDetail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setDetail = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string cookie = 7;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.UpdateProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.UpdateProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.UpdateProjectReq.displayName = 'proto.myproject.UpdateProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.UpdateProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.UpdateProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.UpdateProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.UpdateProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    projectid: msg.getProjectid(),\n    requesterid: msg.getRequesterid(),\n    projectname: msg.getProjectname(),\n    start: msg.getStart(),\n    end: msg.getEnd(),\n    pb_private: msg.getPrivate(),\n    cookie: msg.getCookie(),\n    detail: msg.getDetail(),\n    progress: msg.getProgress(),\n    topic: msg.getTopic()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.UpdateProjectReq}\n */\nproto.myproject.UpdateProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.UpdateProjectReq;\n  return proto.myproject.UpdateProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.UpdateProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.UpdateProjectReq}\n */\nproto.myproject.UpdateProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectname(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEnd(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivate(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDetail(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProgress(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTopic(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.UpdateProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.UpdateProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.UpdateProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.UpdateProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getProjectname();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getEnd();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getPrivate();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getDetail();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getProgress();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getTopic();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.UpdateProjectReq} The clone.\n */\nproto.myproject.UpdateProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.UpdateProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string projectId = 1;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string requesterId = 3;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string projectName = 4;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getProjectname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setProjectname = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string start = 5;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string end = 6;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getEnd = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string private = 7;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getPrivate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string cookie = 8;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string detail = 9;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getDetail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setDetail = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string progress = 10;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getProgress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setProgress = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string topic = 11;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getTopic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setTopic = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.DeleteProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.DeleteProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.DeleteProjectReq.displayName = 'proto.myproject.DeleteProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.DeleteProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.DeleteProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.DeleteProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.DeleteProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    projectid: msg.getProjectid(),\n    cookie: msg.getCookie(),\n    requesterid: msg.getRequesterid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.DeleteProjectReq}\n */\nproto.myproject.DeleteProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.DeleteProjectReq;\n  return proto.myproject.DeleteProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.DeleteProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.DeleteProjectReq}\n */\nproto.myproject.DeleteProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.DeleteProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.DeleteProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.DeleteProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.DeleteProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.DeleteProjectReq} The clone.\n */\nproto.myproject.DeleteProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.DeleteProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.myproject.DeleteProjectReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.DeleteProjectReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string cookie = 3;\n * @return {string}\n */\nproto.myproject.DeleteProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.DeleteProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.myproject.DeleteProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.DeleteProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.GetAllProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.GetAllProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.GetAllProjectReq.displayName = 'proto.myproject.GetAllProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.GetAllProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.GetAllProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.GetAllProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.GetAllProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.GetAllProjectReq}\n */\nproto.myproject.GetAllProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.GetAllProjectReq;\n  return proto.myproject.GetAllProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.GetAllProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.GetAllProjectReq}\n */\nproto.myproject.GetAllProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.GetAllProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.GetAllProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.GetAllProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.GetAllProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.GetAllProjectReq} The clone.\n */\nproto.myproject.GetAllProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.GetAllProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 3;\n * @return {string}\n */\nproto.myproject.GetAllProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.GetAllProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string cookie = 2;\n * @return {string}\n */\nproto.myproject.GetAllProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.GetAllProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.ProjectRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.ProjectRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.ProjectRes.displayName = 'proto.myproject.ProjectRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.ProjectRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.ProjectRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.ProjectRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.ProjectRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    topic: msg.getTopic(),\n    error: msg.getError(),\n    status: msg.getStatus(),\n    projectid: msg.getProjectid(),\n    projectname: msg.getProjectname(),\n    start: msg.getStart(),\n    end: msg.getEnd(),\n    pb_private: msg.getPrivate(),\n    detail: msg.getDetail(),\n    progress: msg.getProgress(),\n    members: msg.getMembers()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.ProjectRes}\n */\nproto.myproject.ProjectRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.ProjectRes;\n  return proto.myproject.ProjectRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.ProjectRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.ProjectRes}\n */\nproto.myproject.ProjectRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTopic(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectname(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEnd(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivate(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDetail(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProgress(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMembers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.ProjectRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.ProjectRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.ProjectRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.ProjectRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTopic();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getProjectname();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getEnd();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getPrivate();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getDetail();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getProgress();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getMembers();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.ProjectRes} The clone.\n */\nproto.myproject.ProjectRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.ProjectRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string topic = 10;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getTopic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setTopic = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string error = 1;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string status = 2;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string projectId = 3;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string projectName = 4;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getProjectname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setProjectname = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string start = 5;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string end = 6;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getEnd = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string private = 7;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getPrivate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string detail = 8;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getDetail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setDetail = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string progress = 9;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getProgress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setProgress = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string members = 11;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getMembers = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setMembers = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\ngoog.object.extend(exports, proto.myproject);\n","import React, { Component } from 'react';\r\nimport cookie from 'react-cookies';\r\nimport {saveLogin} from './actions'\r\nimport { connect } from 'react-redux'\r\nimport authContext from \"./contexts/authContext\";///////\r\nimport { HashRouter, BrowserRouter, Route, Switch,Redirect } from 'react-router-dom';\r\nimport Chat from './service/chat'\r\nimport Loadable from 'react-loadable';\r\n\r\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\r\n\r\nconst proto = {};\r\nproto.auth = require('./gRPC/auth/auth_grpc_web_pb');\r\n\r\n// Containers layout\r\nconst DefaultLayout = Loadable({\r\n    loader: () => import('./containers/DefaultLayout'),\r\n    loading\r\n});\r\n\r\n\r\nconst Login = Loadable({\r\n    loader: () => import('./views/Pages/Login'),\r\n    loading\r\n});\r\n\r\nconst Register = Loadable({\r\n    loader: () => import('./views/Pages/Register'),\r\n    loading\r\n});\r\n\r\nconst Page404 = Loadable({\r\n    loader: () => import('./views/Pages/Page404'),\r\n    loading\r\n});\r\n\r\nconst Page500 = Loadable({\r\n    loader: () => import('./views/Pages/Page500'),\r\n    loading\r\n});\r\nconst PagePay = Loadable({\r\n    loader: () => import('./views/Pages/PagePay'),\r\n    loading\r\n});\r\n\r\nconst AsyncApp = Loadable({\r\n    loader: () => import('./components/AsyncApp'),\r\n    loading\r\n})\r\n\r\nconst ResetSecond = Loadable({\r\n    loader: () => import('./views/Pages/ResetSecond'),\r\n    loading\r\n});\r\n\r\nconst ResetFirst = Loadable({\r\n    loader: () => import('./views/Pages/ResetFirst'),\r\n    loading\r\n});\r\n\r\n\r\n//Home\r\nconst HomeMain = Loadable({\r\n    loader: () => import('./views/General/Home/Main'),\r\n    loading\r\n});\r\nconst HomeContact = Loadable({\r\n    loader: () => import('./views/General/Home/Contact'),\r\n    loading\r\n});\r\nconst HomeService = Loadable({\r\n    loader: () => import('./views/General/Home/Service'),\r\n    loading\r\n});\r\nconst HomeSolve = Loadable({\r\n    loader: () => import('./views/General/Home/Solve'),\r\n    loading\r\n});\r\nconst HomePayment = Loadable({\r\n    loader: () => import('./views/General/Home/Payment'),\r\n    loading\r\n});\r\nconst HomeFinal = Loadable({\r\n    loader: () => import('./views/General/Home/Final'),\r\n    loading\r\n});\r\n//\r\nconst Demo = Loadable({\r\n    loader: () => import('./homeNav'),\r\n    loading\r\n});\r\n\r\n//PJ\r\nconst MyProject = Loadable({\r\n    loader: () => import('./views/Personal/Project/MyProject'),\r\n    loading\r\n});\r\nconst ProjectDone = Loadable({\r\n    loader: () => import('./views/Personal/Project/ProjectDone'),\r\n    loading\r\n});\r\nconst ProjectTodo = Loadable({\r\n    loader: () => import('./views/Personal/Project/ProjectTodo'),\r\n    loading\r\n});\r\nconst CreateProject = Loadable({\r\n    loader: () => import('./views/Personal/Project/CreateProject'),\r\n    loading\r\n});\r\nconst NoProject = Loadable({\r\n    loader: () => import('./views/Personal/Project/NoProject'),\r\n    loading\r\n});\r\n//\r\n\r\n\r\n//profile\r\nconst ProfileDetail = Loadable({\r\n    loader: () => import('./views/Personal/Profile/detail'),\r\n    loading\r\n});\r\nconst ProfileEdit = Loadable({\r\n    loader: () => import('./views/Personal/Profile/edit'),\r\n    loading\r\n});\r\n\r\nclass Client extends Component {\r\n   \r\n\r\n    componentWillMount(){      \r\n           const authService = new proto.auth.AuthClient('https://www.overlead.co');\r\n           var metadata = {};\r\n           var AuthSessionReq = new proto.auth.AuthSessionReq();\r\n           AuthSessionReq.setSession(cookie.load(\"accessToken\"));\r\n           AuthSessionReq.setId(cookie.load(\"userId\"));\r\n           console.log(\"authSession\")\r\n            authService.authSession(AuthSessionReq, metadata, (err, response) => {\r\n              if (err) { \r\n                console.log(err);\r\n              } else { \r\n                console.log(\"SUCCESS\")\r\n                if (response.getStatus()==\"SUCCESS\")\r\n                    this.props.dispatch(saveLogin(cookie.load(\"userId\"),cookie.load(\"accessToken\"),cookie.load(\"username\"),cookie.load(\"name\"),cookie.load(\"avatar\")))       \r\n                else {\r\n                    cookie.remove(\"userId\")\r\n                    cookie.remove(\"accessToken\")\r\n                    cookie.remove(\"username\")\r\n                    cookie.remove(\"name\")\r\n                    cookie.remove(\"avatar\")\r\n                }         \r\n              }\r\n            });        \r\n    }   \r\n   \r\n    render() {\r\n        return (\r\n                <authContext.Provider>\r\n                    <BrowserRouter>\r\n                        {\r\n                            this.props.isLogin ?<div>  <Switch>\r\n                                <Route exact path=\"/homeNav\" name=\"HomeNav\" component={Demo} />\r\n                                <Route exact path=\"/Home/Main\" name=\"HomeMain\" component={HomeMain} />\r\n                                <Route exact path=\"/Home/Contact\" name=\"HomeContact\" component={HomeContact} />\r\n                                <Route exact path=\"/Home/Service\" name=\"HomeService\" component={HomeService} />\r\n                                <Route exact path=\"/Home/Solve\" name=\"HomeSolve\" component={HomeSolve} />\r\n                                <Route exact path=\"/Home/Payment\" name=\"HomePayment\" component={HomePayment} />\r\n                                <Route exact path=\"/Home/Final\" name=\"HomeFinal\" component={HomeFinal} />\r\n\r\n                                <Route exact path=\"/myproject\" name=\"myproject\" component={MyProject} />\r\n                                <Route exact path=\"/ProjectDone\" name=\"ProjectDone\" component={ProjectDone} />\r\n                                <Route exact path=\"/ProjectTodo\" name=\"ProjectTodo\" component={ProjectTodo} />\r\n                                <Route exact path=\"/CreateProject\" name=\"CreateProject\" component={CreateProject} />\r\n                                <Route exact path=\"/NoProject\" name=\"NoProject\" component={NoProject} />\r\n\r\n                                <Route exact path=\"/Profile/Detail\" name=\"ProfileDetail\" component={ProfileDetail} />\r\n                                <Route exact path=\"/Profile/Edit\" name=\"ProjectTodo\" component={ProfileEdit} />\r\n\r\n\r\n                                <Route exact path=\"/chat\" name=\"Chat Page\" component={Chat} />\r\n\r\n\r\n                                <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\r\n                                <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\r\n                                <Route exact path=\"/pay\" name=\"Page Pay\" component={PagePay} />\r\n                                <Route exact path=\"/async\" name=\"page test\" component={AsyncApp} />\r\n                                <Route exact path=\"/dashboard\" name=\"dashboard\" component={DefaultLayout} />\r\n\r\n\r\n                                <Route path=\"/\" name=\"Home\" component={DefaultLayout} />\r\n                             \r\n                              \r\n                            </Switch>\r\n                            </div>\r\n                                : <div><Switch>\r\n                                    <Route exact path=\"/Home/Final\" name=\"HomeFinal\" component={HomeFinal} />\r\n                                    <Route exact path=\"/register\" name=\"Register Page\" component={Register} />\r\n                                    <Route exact path=\"/ResetFirst\" name=\"ResetSecond Page\" component={ResetFirst} />\r\n                                    <Route exact path=\"/ResetSecond\" name=\"ResetSecond Page\" component={ResetSecond} />\r\n                                    <Route exact path=\"/login\" name=\"Login Page\" component={Login} />\r\n                                    <Route exact path=\"/async\" name=\"page test\" component={AsyncApp} />\r\n\r\n                                    <Route path=\"/\" name=\"Home\" component={HomeFinal} />\r\n\r\n                                </Switch>\r\n                                \r\n                                </div>\r\n                        }\r\n                    </BrowserRouter>\r\n                </authContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { changeStatusLogin } = state\r\n    const { isLogin,  } = changeStatusLogin\r\n    return {\r\n        isLogin,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Client);\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n  SELECT_SUBREDDIT,\r\n  INVALIDATE_SUBREDDIT,\r\n  REQUEST_POSTS,\r\n  RECEIVE_POSTS,\r\n  DO_LOGOUT,\r\n  DO_LOGIN,\r\n  GET_PROJECT_SELECTED,\r\n  SET_PROJECT_SELETED,\r\n  FETCH_ALL_PROJECT,\r\n  UPDATE_PROJECT,\r\n  DELETE_PROJECT,\r\n  ADD_PROJECT,\r\n} from '../actions'\r\nconst proto = {};\r\nproto.myproject = require('../gRPC/myproject/myproject_grpc_web_pb');\r\n\r\nfunction selectedSubreddit(state = 'reactjs', action) {\r\n  switch (action.type) {\r\n    case SELECT_SUBREDDIT:\r\n      return action.subreddit\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction posts(\r\n  state = {\r\n    isFetching: false,\r\n    didInvalidate: false,\r\n    items: []\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case INVALIDATE_SUBREDDIT:\r\n      return Object.assign({}, state, {\r\n        didInvalidate: true\r\n      })\r\n    case REQUEST_POSTS:\r\n      return Object.assign({}, state, {\r\n        isFetching: true,\r\n        didInvalidate: false\r\n      })\r\n    case RECEIVE_POSTS:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        didInvalidate: false,\r\n        items: action.posts,\r\n        lastUpdated: action.receivedAt\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction postsBySubreddit(state = {}, action) {\r\n  switch (action.type) {\r\n    case INVALIDATE_SUBREDDIT:\r\n    case RECEIVE_POSTS:\r\n    case REQUEST_POSTS:\r\n      return Object.assign({}, state, {\r\n        [action.subreddit]: posts(state[action.subreddit], action)\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\nfunction changeStatusLogin(state = {isLogin:false}, action) {\r\n  console.log(\"changeStatusLogin\")\r\n  console.log(action)\r\n  switch (action.type) {\r\n    case DO_LOGIN:    \r\n      return Object.assign({}, {\r\n                id:action.id,\r\n                token:action.token,\r\n                isLogin:true,\r\n                email:action.email,\r\n                name:action.name,\r\n                avatar:action.avatar})      \r\n    case DO_LOGOUT:\r\n      return Object.assign({},{isLogin:false})\r\n    default:\r\n      return state\r\n  }\r\n}\r\nfunction changeStatusProject(state={projectId:\"noid\"},action){\r\n  console.log(\"changeStatusProject\")\r\n  switch (action.type) {    \r\n    case SET_PROJECT_SELETED:\r\n      return Object.assign({},{\r\n        projectId:action.id,\r\n        projectName:action.name\r\n      })\r\n    case GET_PROJECT_SELECTED:    \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction updateProjectLoaded(state={project:[],needUpdate:false},action){\r\n  console.log(\"updateProjectLoaded\")\r\n  let newProject\r\n  switch (action.type) {    \r\n    case FETCH_ALL_PROJECT:\r\n      return Object.assign({},{\r\n        projectId:action.id,\r\n        projectName:action.name\r\n      })\r\n    case ADD_PROJECT:\r\n        state.project.push(Object.assign({},{\r\n            id:action.id,\r\n            ownerName:action.ownerName,\r\n            topic:action.topic,\r\n            projectName:action.name,\r\n            start:action.start,\r\n            end:action.end,\r\n            private:action.isPrivate,     \r\n            progress:action.progress     \r\n        }))\r\n        return Object.assign({}, state,{needUpdate:action.id});\r\n    case UPDATE_PROJECT: \r\n        newProject=[];\r\n        state.project=state.project.map(function (item, key) {\r\n            if (item.id!=action.id) newProject.push(item)\r\n              else{\r\n                newProject.push(Object.assign({},{\r\n                  id:action.id,\r\n                  ownerName:action.ownerName,\r\n                  topic:action.topic,\r\n                  projectName:action.name,\r\n                  start:action.start,\r\n                  end:action.end,\r\n                  private:action.isPrivate,     \r\n                  progress:action.progress\r\n              }))}})      \r\n        return Object.assign({},state, {project:newProject},{needUpdate:action.id});\r\n        \r\n    case DELETE_PROJECT:    \r\n        newProject=[];\r\n        state.project=state.project.map(function (item, key) {\r\n            if (item.id!=action.id) newProject.push(item)\r\n        })\r\n        return Object.assign({},state, {project:newProject},{needUpdate:action.id});\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst rootReducer = combineReducers({\r\n  postsBySubreddit,\r\n  selectedSubreddit,\r\n  changeStatusLogin,\r\n  changeStatusProject,\r\n  updateProjectLoaded,\r\n})\r\n\r\nexport default rootReducer","//style \r\nimport './App.scss';\r\n\r\nimport React, { Component } from 'react';\r\n\r\n//context\r\nimport Client from \"./Client\"\r\n\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n//redux\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from './reducers'\r\nimport { Provider } from 'react-redux'\r\n\r\n//\r\nconst loggerMiddleware = createLogger()\r\n\r\nfunction configureStore(preloadedState) {\r\n  return createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    applyMiddleware(thunkMiddleware, loggerMiddleware)\r\n  )\r\n}\r\n\r\nconst store = configureStore()\r\n\r\n// store.subscribe(() =>{console.log(\"subscribe\")\r\n//  console.log(store.getState())})\r\n\r\nclass App extends Component {\r\n  \r\n\r\n  render() {   \r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <Client />\r\n    </Provider>   \r\n)}}\r\n\r\n\r\nexport default (App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}