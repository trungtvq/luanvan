{"version":3,"sources":["views/Workspace/Member/TeamTask/TeamTask.js","gRPC/sprintbacklog/sprintbacklog_grpc_web_pb.js","gRPC/sprintbacklog/sprintbacklog_pb.js","gRPC/teamtask/teamtask_grpc_web_pb.js","gRPC/teamtask/teamtask_pb.js"],"names":["proto","teamtask","require","sprintbacklog","TeamTask","props","_this$state","_this","Object","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","toastId","notify","toast","autoClose","success","update","render","type","TYPE","SUCCESS","failed","ERROR","onChangeStartDate","date","setState","startDate","onChangeEndDate","endDate","toggle","collapse","state","toggleAdd","prevState","modalAdd","toggleAddOpen","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","title","description","priority","assignee","comment","status","review","updateId","toggleEdit","modalEdit","toggleEditOpen","event","currentTarget","dataset","id","start","deadline","sprintBacklog","onTextboxChangeTitle","target","value","onTextboxChangeDescription","onTextboxChangePriority","onTextboxChangeSprintBacklog","onTextboxChangeAssignee","onTextboxChangeComment","onTextboxChangeReview","onTextboxChangeStatus","loadAllSprint","sprintbacklogService","SprintBacklogClient","GetAllSprintBacklogReq","setRequesterid","getFromStorage","setAccesstoken","setProjectid","setTeamid","sprints","response","getAllSprintBacklog","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","on","getStatus","arr","getStart","split","end","length","parseInt","getDeadline","push","getBacklogid","getTitle","role","getRole","want","getWant","so","getSo","getPriority","estimation","getEstimation","sprint","getSprintid","getStatusbacklog","code","console","log","setInStorage","loadAllTask","setDate","getDate","d","getMinutes","getHours","getMonth","getFullYear","teamtaskService","TeamTaskClient","GetAllTeamTaskReq","setSprintid","getAllTeamTask","that","str","getAssigneearray","slice","data","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getTeamtaskid","getDescription","getReview","getComment","getStatusteamtask","getSprintbacklogid","handleAdd","AddNewTeamTaskReq","setPriority","setStart","setDeadline","setAssigneearray","setComment","setStatus","setReview","setTitle","setDescription","setSprintbacklogid","addNewTeamTask","handleDelete","CancelTeamTaskReq","setTeamtaskid","cancelTeamTask","err","newData","filter","p","handleAssignToMe","RegisterTeamTaskReq","setAssigner","registerTeamTask","map","assign","handleUpdate","UpdateTeamTaskReq","updateTeamTask","fadeIn","Date","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","xs","md","reactstrap__WEBPACK_IMPORTED_MODULE_11__","name","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_12__","size","color","class","reactstrap__WEBPACK_IMPORTED_MODULE_13__","className","onClick","buttonLabel","reactstrap__WEBPACK_IMPORTED_MODULE_14__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","row","reactstrap__WEBPACK_IMPORTED_MODULE_19__","htmlFor","onChange","rows","undefined","disable","react_datepicker__WEBPACK_IMPORTED_MODULE_22__","selected","timeInputLabel","dateFormat","showTimeInput","mem","username","reactstrap__WEBPACK_IMPORTED_MODULE_20__","item","key","data-id","data-title","data-description","data-priority","data-start","data-deadline","data-assignee","data-comment","data-status","data-review","data-sprintbacklog","S","action","Component","grpc","web","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","SprintBacklogPromiseClient","methodInfo_SprintBacklog_deleteSprintBacklog","AbstractClientBase","MethodInfo","SprintBacklogRes","request","serializeBinary","deserializeBinary","prototype","deleteSprintBacklog","metadata","callback","rpcCall","unaryCall","methodInfo_SprintBacklog_getAllSprintBacklog","GetAllSprintBacklogRes","serverStreaming","module","exports","jspb","goog","global","Function","exportSymbol","DeleteSprintBacklogReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","backlogid","accesstoken","getAccesstoken","teamid","getTeamid","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","setBacklogid","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","writeString","cloneMessage","getFieldProto3","setField","statusbacklog","sprintid","setRole","setWant","setSo","setStatusbacklog","setEstimation","object","extend","TeamTaskPromiseClient","methodInfo_TeamTask_addNewTeamTask","TeamTaskRes","methodInfo_TeamTask_updateTeamTask","methodInfo_TeamTask_registerTeamTask","methodInfo_TeamTask_cancelTeamTask","methodInfo_TeamTask_getAllTeamTask","GetAllTeamTaskRes","assigneearray","sprintbacklogid","teamtaskid","assigner","getAssigner","statusteamtask","setStatusteamtask"],"mappings":"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","file":"static/js/43.a3e00b70.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Card,\r\n  Button,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from 'reactstrap';\r\nimport cookie from 'react-cookies';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../../../../service/storage'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst proto = {};\r\nproto.teamtask = require('./../../../../gRPC/teamtask/teamtask_grpc_web_pb');\r\nproto.sprintbacklog = require('./../../../../gRPC/sprintbacklog/sprintbacklog_grpc_web_pb');\r\n\r\nclass TeamTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = {\r\n      collapse: true,\r\n      fadeIn: true,\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      data: [],\r\n      modalAdd: false,\r\n      modalEdit: false,\r\n      title: '',\r\n      description: '',\r\n      priority: \"\",      \r\n      assignee: \"\",\r\n      comment: '',\r\n      status: \"\",\r\n      review: \"\",\r\n      updateId:\"\",\r\n      status:\"\",\r\n      mem:getFromStorage('members'),\r\n      sprintBacklog:\"\"\r\n\r\n    };\r\n  }\r\n  toastId = null;\r\n\r\n  notify = () => this.toastId = toast(\"Processing... please wait...\", { autoClose: false });\r\n\r\n  success = () => toast.update(this.toastId, { render: \"Success\", type: toast.TYPE.SUCCESS, autoClose: 3000 });\r\n  failed = () => toast.update(this.toastId, { render: \"Failed\", type: toast.TYPE.ERROR, autoClose: 3000 });\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  }\r\n  onChangeEndDate = (date) => {\r\n    this.setState({\r\n      endDate: date\r\n    });\r\n  }\r\n  \r\n  toggle = () => {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  }\r\n  toggleAdd = () => {\r\n    this.setState(prevState => ({\r\n      modalAdd: !prevState.modalAdd\r\n    }));\r\n  }\r\n  toggleAddOpen = () => {\r\n    this.setState(prevState => ({\r\n      modalAdd: !prevState.modalAdd,\r\n      title: '',\r\n      description: '',\r\n      priority: \"\",      \r\n      assignee: \"\",\r\n      comment: '',\r\n      status: \"\",\r\n      review: \"\",\r\n      updateId:\"\",\r\n      status:\"\",\r\n    }));\r\n  }\r\n  toggleEdit = () => {\r\n    this.setState(prevState => ({\r\n      modalEdit: !prevState.modalEdit\r\n    }));\r\n  }\r\n  toggleEditOpen = (event) => {\r\n    let updateId=event.currentTarget.dataset.id\r\n    let   title=event.currentTarget.dataset.title\r\n    let  description=event.currentTarget.dataset.description\r\n    let  start=event.currentTarget.dataset.start\r\n    let   deadline=event.currentTarget.dataset.deadline\r\n    let   priority=event.currentTarget.dataset.priority\r\n    let   status=event.currentTarget.dataset.status\r\n    let   assignee=event.currentTarget.dataset.assignee\r\n    let sprintBacklog=event.currentTarget.dataset.sprintbacklog\r\n    this.setState(prevState => ({\r\n      modalEdit: !prevState.modalEdit,\r\n      updateId,\r\n      title,\r\n      description,\r\n      start,\r\n      deadline,\r\n      priority,\r\n      status,\r\n      assignee,\r\n      sprintBacklog\r\n    }));\r\n  }\r\n\r\n  onTextboxChangeTitle = (event) => {\r\n    this.setState({\r\n      title: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeDescription = (event) => {\r\n    this.setState({\r\n      description: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangePriority = (event) => {\r\n    this.setState({\r\n      priority: event.target.value,\r\n    });\r\n\r\n  }\r\n  onTextboxChangeSprintBacklog = (event) => {\r\n    this.setState({\r\n      sprintBacklog: event.target.value,\r\n    });\r\n\r\n  }\r\n\r\n \r\n  onTextboxChangeAssignee = (event) => {\r\n    this.setState({\r\n      assignee: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeComment = (event) => {\r\n    this.setState({\r\n      comment: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeReview = (event) => {\r\n    this.setState({\r\n      review: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeStatus = (event) => {\r\n    this.setState({\r\n      status: event.target.value,\r\n    });\r\n  }\r\n  loadAllSprint=()=>{\r\n    const sprintbacklogService = new proto.sprintbacklog.SprintBacklogClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    var GetAllSprintBacklogReq = new proto.sprintbacklog.GetAllSprintBacklogReq();\r\n    GetAllSprintBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllSprintBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllSprintBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    GetAllSprintBacklogReq.setTeamid(getFromStorage(\"teamId\"));\r\n    let sprints=[]\r\n    var response = sprintbacklogService.getAllSprintBacklog(GetAllSprintBacklogReq, metadata)\r\n    let that = this\r\n    \r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        let arr = response.getStart().split('-');\r\n        let start = \"\"\r\n        let end = \"\"\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n\r\n        arr = response.getDeadline().split('-')\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n        sprints.push({\r\n          id: response.getBacklogid(),\r\n          title: response.getTitle(),\r\n          role: response.getRole(),\r\n          want: response.getWant(),\r\n          so: response.getSo(),\r\n          priority: response.getPriority(),\r\n          estimation: response.getEstimation(),\r\n          sprint: response.getSprintid(),\r\n          status: response.getStatusbacklog(),\r\n          start: start,\r\n          deadline: end,\r\n        })      \r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n      setInStorage(\"sprints\",sprints)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n\r\n  }\r\n  loadAllTask=()=>{\r\n    \r\n    let end = this.state.endDate;\r\n    end.setDate(end.getDate() + 15);\r\n    this.setState({\r\n      endDate: end\r\n    })\r\n//this.notify()\r\n    let d = this.state.startDate;\r\n    let start = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n    d = this.state.endDate;\r\n     end = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var GetAllTeamTaskReq = new proto.teamtask.GetAllTeamTaskReq();\r\n    GetAllTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    GetAllTeamTaskReq.setTeamid(getFromStorage(\"teamId\"));\r\n    GetAllTeamTaskReq.setSprintid(\"this.state.sprintId\");\r\n    \r\n    var response = teamtaskService.getAllTeamTask(GetAllTeamTaskReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        let arr = response.getStart().split('-');\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n        arr = response.getDeadline().split('-')\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n        //processing assign array\r\n          let str=response.getAssigneearray()\r\n          str=str.slice(1,-1)\r\n          arr=str.split(', ')\r\n\r\n      \r\n\r\n          // that.state.mem.map(p=>{\r\n          //   if (arr.indexOf(p.id)!=-1){\r\n          //     console.log(\"exist\")\r\n          //     arr[arr.indexOf(p.id)]=p.username\r\n          //   }\r\n          //   return p\r\n          // })\r\n\r\n        that.setState(prevState => ({\r\n          data: [...prevState.data,\r\n          {\r\n            id: response.getTeamtaskid(),\r\n            title: response.getTitle(),\r\n            description: response.getDescription(),\r\n            assignee: arr,\r\n            priority: response.getPriority(),\r\n            review: response.getReview(),\r\n            comment: response.getComment(),\r\n            status: response.getStatusteamtask(),\r\n            start: start,\r\n            deadline: end,\r\n            sprintBacklog: response.getSprintbacklogid()\r\n          }]\r\n        }));\r\n\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n \r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n  }\r\n  componentDidMount() {   \r\n    this.loadAllSprint()\r\n    this.loadAllTask()\r\n\r\n  }\r\n  handleAdd = () => {\r\n    console.log(\"handle add\")\r\n    let sprint=this.state.sprintBacklog\r\n    console.log(getFromStorage(\"sprints\").length>0)\r\n    console.log(sprint==\"\")\r\n    console.log(getFromStorage('sprints')[0])\r\n    if (sprint==\"\" && getFromStorage(\"sprints\").length>0){\r\n      sprint=getFromStorage('sprints')[0].title\r\n    }\r\n    this.notify()\r\n    let d = this.state.startDate;\r\n    let start = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n    d = this.state.endDate;\r\n    let end = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var AddNewTeamTaskReq = new proto.teamtask.AddNewTeamTaskReq();\r\n    AddNewTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    AddNewTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    AddNewTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    AddNewTeamTaskReq.setTeamid(getFromStorage(\"teamId\"));\r\n    AddNewTeamTaskReq.setPriority(this.state.priority);\r\n    AddNewTeamTaskReq.setStart(start);\r\n    AddNewTeamTaskReq.setDeadline(end);\r\n    AddNewTeamTaskReq.setAssigneearray(this.state.assignee)\r\n    AddNewTeamTaskReq.setComment(\"\");\r\n    AddNewTeamTaskReq.setStatus(\"todos\");\r\n    AddNewTeamTaskReq.setReview(\"\");\r\n    AddNewTeamTaskReq.setTitle(this.state.title);\r\n    AddNewTeamTaskReq.setDescription(this.state.description);\r\n    AddNewTeamTaskReq.setSprintid(getFromStorage('currentSprintId'));\r\n    AddNewTeamTaskReq.setSprintbacklogid(sprint);\r\n\r\n    \r\n    var response = teamtaskService.addNewTeamTask(AddNewTeamTaskReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      console.log(response.getStatus())\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.toggleAdd()\r\n        that.success()\r\n        let arr = start.split('-');\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n\r\n        arr = end.split('-')\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n        that.setState(prevState => ({\r\n          data: [...prevState.data,\r\n          {\r\n            id: response.getTeamtaskid(),\r\n            title: that.state.title,\r\n            description: that.state.description,\r\n            assignee: that.state.assignee,\r\n            priority: that.state.priority,\r\n            review: \"\",\r\n            comment: \"\",\r\n            status: \"todos\",\r\n            start: start,\r\n            deadline: end,\r\n            sprintBacklog:sprint,\r\n          }]\r\n        }));\r\n\r\n      }else{\r\n        that.failed()\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n\r\n  };\r\n  handleDelete = (event) => {\r\n    let id = event.currentTarget.dataset.id\r\n    console.log(\"delete\")\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    this.notify()\r\n    var metadata = {};\r\n    var CancelTeamTaskReq = new proto.teamtask.CancelTeamTaskReq();\r\n    CancelTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    CancelTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    CancelTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    CancelTeamTaskReq.setTeamtaskid(id)\r\n    CancelTeamTaskReq.setTeamid(getFromStorage(\"teamId\"))\r\n    let that=this\r\n    teamtaskService.cancelTeamTask(CancelTeamTaskReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n        console.log(\"error\")\r\n      } else { //if success\r\n        //get response\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n            that.success()\r\n            let newData=that.state.data;\r\n            that.setState({\r\n              data:newData.filter(p=>{\r\n                if (p.id==id) return false\r\n                return true\r\n              })\r\n            })\r\n        }else {\r\n          that.failed()\r\n        }\r\n       \r\n      }\r\n    });\r\n  };\r\n  handleAssignToMe=(event)=>{\r\n    let id = event.currentTarget.dataset.id\r\n    console.log(\"handleAssignToMe\")\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    this.notify()\r\n    var metadata = {};\r\n    var RegisterTeamTaskReq = new proto.teamtask.RegisterTeamTaskReq();\r\n    RegisterTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    RegisterTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    RegisterTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    RegisterTeamTaskReq.setTeamtaskid(id)\r\n    RegisterTeamTaskReq.setTeamid(getFromStorage(\"teamId\"))\r\n    RegisterTeamTaskReq.setAssigner(getFromStorage(\"username\"))\r\n    let that=this\r\n    teamtaskService.registerTeamTask(RegisterTeamTaskReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n        console.log(\"error\")\r\n      } else { //if success\r\n        //get response\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n            that.success()\r\n            let newData=that.state.data;\r\n            that.setState({\r\n              data:newData.map(p=>{\r\n                if (p.id==id){\r\n                  return Object.assign(p,{assignee:getFromStorage(\"username\")})\r\n                } \r\n                return p\r\n              })\r\n            })\r\n        }else {\r\n          that.failed()\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\n  \r\n  //TODO: update at assign\r\n  handleUpdate = () => {\r\n    this.notify()\r\n    let d = this.state.startDate;\r\n    let start = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n    d = this.state.endDate;\r\n    let end = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var UpdateTeamTaskReq = new proto.teamtask.UpdateTeamTaskReq();\r\n    UpdateTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    UpdateTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    UpdateTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    UpdateTeamTaskReq.setTeamid(getFromStorage(\"teamId\"));\r\n    UpdateTeamTaskReq.setTeamtaskid(this.state.updateId);\r\n\r\n    UpdateTeamTaskReq.setPriority(this.state.priority);\r\n    UpdateTeamTaskReq.setStart(start);\r\n    UpdateTeamTaskReq.setDeadline(end);\r\n    UpdateTeamTaskReq.setAssigneearray(this.state.assignee)\r\n    UpdateTeamTaskReq.setComment(this.state.comment);\r\n    UpdateTeamTaskReq.setStatus(this.state.status);\r\n    UpdateTeamTaskReq.setReview(this.state.review);\r\n    UpdateTeamTaskReq.setTitle(this.state.title);\r\n    UpdateTeamTaskReq.setDescription(this.state.description);\r\n    UpdateTeamTaskReq.setSprintid(getFromStorage(\"currentSprintId\"));\r\n    UpdateTeamTaskReq.setSprintbacklogid(this.state.sprintBacklog)\r\n    var response = teamtaskService.updateTeamTask(UpdateTeamTaskReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      console.log(response.getStatus())\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.toggleEdit()\r\n        that.success()\r\n        let arr = start.split('-');\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n\r\n        arr = end.split('-')\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n\r\n        \r\n        let newData=that.state.data        \r\n        that.setState({\r\n          data:newData.map(p=>{\r\n            if (p.id==that.state.updateId)    {\r\n              return {\r\n                id: that.state.updateId,\r\n                title: that.state.title,\r\n                description: that.state.description,\r\n                assignee: that.state.assignee,\r\n                priority: that.state.priority,\r\n                review: \"\",\r\n                comment: \"\",\r\n                status: that.state.status,\r\n                start: start,\r\n                deadline: end,\r\n                sprintBacklog:that.state.sprintBacklog\r\n              }\r\n            }                 \r\n            \r\n            return p\r\n          }) \r\n        });\r\n\r\n      }else{\r\n        that.failed()\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n\r\n  };\r\n \r\n  // componentDidUpdate(){\r\n  //   let mem=getFromStorage('members')\r\n  //   let arr=this.state.data\r\n  //   mem.map(p=>{\r\n  //     if (arr.indexOf(p.id)!=-1){\r\n  //       console.log(\"exist\")\r\n  //       arr[arr.indexOf(p.id)]=p.username\r\n  //     }\r\n  //     return p\r\n  //   })\r\n  // }\r\n  render() {    \r\n    let that = this;\r\n    let sprints=getFromStorage('sprints')\r\n    console.log(\"sprints\")\r\n    console.log(sprints)\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Row>\r\n            <Col xs=\"2\" md=\"2\">\r\n              <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"Search\" />\r\n            </Col>\r\n\r\n            <Col xs=\"0\" md=\"0\">\r\n              <Button type=\"submit\" size=\"sm\" color=\"success\"><i class=\"fa fa-search\"></i></Button>\r\n            </Col>\r\n          </Row>\r\n          <Card>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-lg\">\r\n                <thead class=\"thead\">\r\n                  <tr class=\"bg-primary\">\r\n                    <th>Title <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Description <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Sprint <i class=\"fa fa-sort\"></i></th>\r\n\r\n                    <th>Priority <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Start day <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Deadline <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Assignee</th>\r\n                    <th>Comment</th>\r\n                    <th>Status</th>\r\n                    <th>Review</th>\r\n                    <th>\r\n                      <div>\r\n                        <Button color=\"primary\" size=\"sm\" className=\"mt-3\" onClick={that.toggleAddOpen}><i class=\"fa fa-plus-square\"></i>{this.props.buttonLabel}</Button>\r\n                       \r\n                        <Modal size=\"lg\" isOpen={that.state.modalAdd} toggle={that.toggleAdd} className={that.props.className}>\r\n                          <ModalHeader toggle={that.toggleAdd}>Team Task</ModalHeader>\r\n                          <ModalBody>\r\n                            <Form className=\"form-horizontal\">\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">title</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"title\" name=\"title\" placeholder=\"title\" value={that.state.title} onChange={that.onTextboxChangeTitle} />\r\n\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"textarea-input\">description</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"textarea\" name=\"description\" id=\"description\" rows=\"9\"\r\n                                    placeholder=\"Content...\" value={that.state.description} onChange={that.onTextboxChangeDescription} />\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">Sprint backlog</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"3\">\r\n                                  <Input type=\"select\" name=\"select\" id=\"select\"  onChange={that.onTextboxChangeSprintBacklog}>                                    \r\n                                    { \r\n                                      (sprints!=undefined)?\r\n                                      sprints.map(p=>{\r\n                                        return(\r\n                                          <option value={p.title}>{p.title}</option>\r\n                                        )\r\n                                      }):\r\n                                      \r\n                                        <option disable={true} value=\"\">not have any sprint backlog</option>\r\n                                      \r\n                                    }\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">priority</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"3\">\r\n                                  <Input type=\"select\" name=\"select\" id=\"select\"  onChange={that.onTextboxChangePriority}>\r\n                                    <option value=\"0\">Please select</option>\r\n                                    <option value=\"High\">High</option>\r\n                                    <option value=\"Medium\">Medium</option>\r\n                                    <option value=\"Low\">Low</option>\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"date-input\">Start  </Label>\r\n                                </Col>\r\n                                <Col xs=\"3\" md=\"3\">\r\n                                  <DatePicker\r\n\r\n                                    selected={that.state.startDate}\r\n                                    timeInputLabel=\"Time:\"\r\n                                    onChange={that.onChangeStartDate}\r\n                                    dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                                    showTimeInput\r\n                                  /> </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"date-input\">Deadline </Label>\r\n                                </Col>\r\n                                <Col xs=\"3\" md=\"3\">\r\n                                  <DatePicker\r\n\r\n\r\n                                    selected={that.state.endDate}\r\n                                    timeInputLabel=\"Time:\"\r\n                                    onChange={that.onChangeEndDate}\r\n                                    dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                                    showTimeInput\r\n                                  /> </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">Assignee</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"3\">\r\n                                  <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangeAssignee}>\r\n                                  <option value=\"0\">Please select</option>\r\n                                    { (that.state.mem!=undefined)?\r\n                                      that.state.mem.map(p=>{\r\n                                        return(\r\n                                          <option value={p.username}>{p.username}</option>\r\n                                        )\r\n                                      }):{\r\n                                        \r\n                                      }\r\n                                    }\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n                            </Form>\r\n                          </ModalBody>\r\n                          <ModalFooter>\r\n                            <Button color=\"primary\" onClick={that.handleAdd}>Submit</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={that.toggleAdd}>Cancel</Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </div>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n\r\n\r\n\r\n\r\n\r\n                <tbody>{this.state.data.map(function (item, key) {\r\n\r\n                  return (\r\n                    <tr key={key}>\r\n                      <td>{item.title}</td>\r\n                      <td>{item.description}</td>\r\n                      <td>{item.sprintBacklog}</td>\r\n                      <td>{item.priority}</td>\r\n                      <td>{item.start}</td>\r\n                      <td>{item.deadline}</td>\r\n                      <td>{item.assignee}</td>\r\n                      <td>{item.comment}</td>\r\n                      <td>{item.status}</td>\r\n                      <td>{item.review}</td>\r\n                      <td>\r\n                        <div>\r\n                          <div data-id={item.id} \r\n                           data-title={item.title} data-description={item.description}\r\n                            data-priority={item.priority} data-start={item.start} data-deadline={item.deadline}\r\n                             data-assignee={item.assignee}  data-comment={item.comment}\r\n                              data-status={item.status} data-review={item.review} data-sprintbacklog={item.sprintBacklog} onClick={that.toggleEditOpen}>\r\n                          <Button color=\"warning\" size=\"sm\" S ><i class=\"fa fa-edit\"></i>{that.props.buttonLabel}</Button>\r\n                          </div>\r\n                          <Modal size=\"lg\" isOpen={that.state.modalEdit} toggle={that.toggleEdit} className={that.props.className}>\r\n                            <ModalHeader toggle={that.toggleEdit}>Team task</ModalHeader>\r\n                            <ModalBody>\r\n                              <Form action=\"\" className=\"form-horizontal\">\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"text-input\">Title</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"title\" value={that.state.title} onChange={that.onTextboxChangeTitle}/>\r\n\r\n                                  </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"textarea-input\">Description</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <Input type=\"textarea\" name=\"textarea-input\" id=\"textarea-input\" rows=\"9\"\r\n                                      placeholder=\"Content...\" value={that.state.description} onChange={that.onTextboxChangeDescription} />\r\n                                  </Col>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">Sprint backlog</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"3\">\r\n                                  <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangeSprintBacklog}>\r\n                                  <option value={that.state.sprintBacklog}>{that.state.sprintBacklog}</option>\r\n             \r\n                                    { (sprints!=undefined)?\r\n                                      sprints.map(p=>{\r\n                                        return(\r\n                                          <option value={p.title}>{p.title}</option>\r\n                                        )\r\n                                      }):\r\n                                      \r\n                                        <option disable={true} value=\"\">not have any sprint backlog</option>\r\n                                      \r\n                                    }\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label>Priority</Label>\r\n                                  </Col>\r\n                                  <Col md=\"3\">\r\n                                    <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangePriority}>\r\n                                      <option value={that.state.priority}>{that.state.priority}</option>\r\n                                      <option value=\"High\">High</option>\r\n                                      <option value=\"Medium\">Medium</option>\r\n                                      <option value=\"Low\">Low</option>\r\n                                    </Input>\r\n                                  </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"date-input\">Start time</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <DatePicker\r\n\r\n\r\n                                      selected={that.state.startDate}\r\n                                      timeInputLabel=\"Time:\"\r\n                                      onChange={that.onChangeStartDate}\r\n                                      dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                                      showTimeInput\r\n                                    /></Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"date-input\">Deadline </Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <DatePicker\r\n\r\n\r\n                                      selected={that.state.endDate}\r\n                                      timeInputLabel=\"Time:\"\r\n                                      onChange={that.onChangeEndDate}\r\n                                      dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                                      showTimeInput\r\n                                    />    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                      <Col md=\"3\">\r\n                                        <Label htmlFor=\"text-input\">Assignee</Label>\r\n                                      </Col>\r\n                                     <Col xs=\"12\" md=\"3\">\r\n                                        <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangeAssignee}>\r\n                                        <option value={that.state.assignee}>{that.state.assignee}</option>\r\n                                    { (that.state.mem!=undefined)?\r\n                                      that.state.mem.map(p=>{\r\n                                        return(\r\n                                          <option value={p.username}>{p.username}</option>\r\n                                        )\r\n                                      }):{\r\n                                        \r\n                                      }\r\n                                    }\r\n                                        </Input>\r\n                                      </Col>\r\n                                    </FormGroup>   \r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"text-input\">Status</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"3\">\r\n                                    <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangeStatus}>\r\n                                      <option value={that.state.status}>{that.state.status}</option>\r\n                                      <option value=\"done\">done</option>\r\n                                      <option value=\"inprogress\">inprogress</option>\r\n                                      <option value=\"todos\">to do</option>\r\n                                    </Input>\r\n                                  </Col>\r\n                                </FormGroup>\r\n                              </Form>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                              <Button color=\"primary\" onClick={that.handleUpdate}>Submit</Button>{' '}\r\n                              <Button color=\"secondary\" onClick={that.toggleEdit}>Cancel</Button>\r\n                            </ModalFooter>\r\n                          </Modal>\r\n                        </div>\r\n                        <div data-id={item.id} onClick={that.handleAssignToMe}>\r\n                        <Button size=\"sm\" color=\"success\"><i class=\"fa fa-plus\"> Assign to me</i></Button>\r\n                        </div>\r\n                        <div data-id={item.id} onClick={that.handleDelete}>\r\n\r\n                        <Button size=\"sm\" color=\"danger\"><i class=\"fa fa-minus\"> Delete</i></Button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n\r\n                })}</tbody>\r\n              </table>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamTask;\r\n","/**\n * @fileoverview gRPC-Web generated client stub for sprintbacklog\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.sprintbacklog = require('./sprintbacklog_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprintbacklog.SprintBacklogClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprintbacklog.SprintBacklogPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.DeleteSprintBacklogReq,\n *   !proto.sprintbacklog.SprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_deleteSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.SprintBacklogRes,\n  /** @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.SprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.sprintbacklog.SprintBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.SprintBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.deleteSprintBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/deleteSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_deleteSprintBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.sprintbacklog.SprintBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.deleteSprintBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/deleteSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_deleteSprintBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.GetAllSprintBacklogReq,\n *   !proto.sprintbacklog.GetAllSprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_getAllSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.GetAllSprintBacklogRes,\n  /** @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.GetAllSprintBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.getAllSprintBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/getAllSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_getAllSprintBacklog);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.GetAllSprintBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.getAllSprintBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/getAllSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_getAllSprintBacklog);\n};\n\n\nmodule.exports = proto.sprintbacklog;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.sprintbacklog.DeleteSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.sprintbacklog.GetAllSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.sprintbacklog.GetAllSprintBacklogRes', null, global);\ngoog.exportSymbol('proto.sprintbacklog.SprintBacklogRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.DeleteSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.DeleteSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.DeleteSprintBacklogReq.displayName = 'proto.sprintbacklog.DeleteSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.DeleteSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    backlogid: msg.getBacklogid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.DeleteSprintBacklogReq;\n  return proto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq} The clone.\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.DeleteSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string teamId = 5;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.SprintBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.SprintBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.SprintBacklogRes.displayName = 'proto.sprintbacklog.SprintBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.SprintBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.SprintBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.SprintBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    backlogid: msg.getBacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.SprintBacklogRes}\n */\nproto.sprintbacklog.SprintBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.SprintBacklogRes;\n  return proto.sprintbacklog.SprintBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.SprintBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.SprintBacklogRes}\n */\nproto.sprintbacklog.SprintBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.SprintBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.SprintBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.SprintBacklogRes} The clone.\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.SprintBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.GetAllSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.GetAllSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.GetAllSprintBacklogReq.displayName = 'proto.sprintbacklog.GetAllSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.GetAllSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.GetAllSprintBacklogReq;\n  return proto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq} The clone.\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.GetAllSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string teamId = 4;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.GetAllSprintBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.GetAllSprintBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.GetAllSprintBacklogRes.displayName = 'proto.sprintbacklog.GetAllSprintBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.GetAllSprintBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    title: msg.getTitle(),\n    backlogid: msg.getBacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    status: msg.getStatus()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.GetAllSprintBacklogRes;\n  return proto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes} The clone.\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.GetAllSprintBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string title = 1;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string backlogId = 2;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 11;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string priority = 6;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string estimation = 7;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string sprintId = 8;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string start = 12;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string deadline = 10;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string status = 9;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\ngoog.object.extend(exports, proto.sprintbacklog);\n","/**\n * @fileoverview gRPC-Web generated client stub for teamtask\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.teamtask = require('./teamtask_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.teamtask.TeamTaskClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.teamtask.TeamTaskPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.AddNewTeamTaskReq,\n *   !proto.teamtask.TeamTaskRes>}\n */\nconst methodInfo_TeamTask_addNewTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamTaskRes,\n  /** @param {!proto.teamtask.AddNewTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.AddNewTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.addNewTeamTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.TeamTask/addNewTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_addNewTeamTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.AddNewTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.addNewTeamTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.TeamTask/addNewTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_addNewTeamTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.UpdateTeamTaskReq,\n *   !proto.teamtask.TeamTaskRes>}\n */\nconst methodInfo_TeamTask_updateTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamTaskRes,\n  /** @param {!proto.teamtask.UpdateTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.UpdateTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.updateTeamTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.TeamTask/updateTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_updateTeamTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.UpdateTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.updateTeamTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.TeamTask/updateTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_updateTeamTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.RegisterTeamTaskReq,\n *   !proto.teamtask.TeamTaskRes>}\n */\nconst methodInfo_TeamTask_registerTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamTaskRes,\n  /** @param {!proto.teamtask.RegisterTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.RegisterTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.registerTeamTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.TeamTask/registerTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_registerTeamTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.RegisterTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.registerTeamTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.TeamTask/registerTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_registerTeamTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.CancelTeamTaskReq,\n *   !proto.teamtask.TeamTaskRes>}\n */\nconst methodInfo_TeamTask_cancelTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamTaskRes,\n  /** @param {!proto.teamtask.CancelTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.CancelTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.cancelTeamTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.TeamTask/cancelTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_cancelTeamTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.CancelTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.cancelTeamTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.TeamTask/cancelTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_cancelTeamTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.GetAllTeamTaskReq,\n *   !proto.teamtask.GetAllTeamTaskRes>}\n */\nconst methodInfo_TeamTask_getAllTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.GetAllTeamTaskRes,\n  /** @param {!proto.teamtask.GetAllTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.GetAllTeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.GetAllTeamTaskReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.GetAllTeamTaskRes>}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.getAllTeamTask =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/teamtask.TeamTask/getAllTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_getAllTeamTask);\n};\n\n\n/**\n * @param {!proto.teamtask.GetAllTeamTaskReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.GetAllTeamTaskRes>}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.getAllTeamTask =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/teamtask.TeamTask/getAllTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_getAllTeamTask);\n};\n\n\nmodule.exports = proto.teamtask;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.teamtask.AddNewTeamTaskReq', null, global);\ngoog.exportSymbol('proto.teamtask.CancelTeamTaskReq', null, global);\ngoog.exportSymbol('proto.teamtask.GetAllTeamTaskReq', null, global);\ngoog.exportSymbol('proto.teamtask.GetAllTeamTaskRes', null, global);\ngoog.exportSymbol('proto.teamtask.RegisterTeamTaskReq', null, global);\ngoog.exportSymbol('proto.teamtask.TeamTaskRes', null, global);\ngoog.exportSymbol('proto.teamtask.UpdateTeamTaskReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.AddNewTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.AddNewTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.AddNewTeamTaskReq.displayName = 'proto.teamtask.AddNewTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.AddNewTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.AddNewTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.AddNewTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    title: msg.getTitle(),\n    description: msg.getDescription(),\n    priority: msg.getPriority(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    assigneearray: msg.getAssigneearray(),\n    comment: msg.getComment(),\n    status: msg.getStatus(),\n    review: msg.getReview(),\n    accesstoken: msg.getAccesstoken(),\n    sprintid: msg.getSprintid(),\n    teamid: msg.getTeamid(),\n    sprintbacklogid: msg.getSprintbacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.AddNewTeamTaskReq}\n */\nproto.teamtask.AddNewTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.AddNewTeamTaskReq;\n  return proto.teamtask.AddNewTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.AddNewTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.AddNewTeamTaskReq}\n */\nproto.teamtask.AddNewTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssigneearray(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setComment(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReview(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 15:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintbacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.AddNewTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.AddNewTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getAssigneearray();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getComment();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getReview();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getSprintbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      15,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.AddNewTeamTaskReq} The clone.\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.AddNewTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string title = 3;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string description = 4;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string priority = 5;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string start = 6;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string deadline = 7;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string assigneeArray = 8;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getAssigneearray = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setAssigneearray = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string comment = 9;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getComment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setComment = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string status = 10;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string review = 11;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getReview = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setReview = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string accessToken = 12;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string sprintId = 14;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 14, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string sprintBacklogId = 15;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getSprintbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 15, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setSprintbacklogid = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.TeamTaskRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.TeamTaskRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.TeamTaskRes.displayName = 'proto.teamtask.TeamTaskRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.TeamTaskRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.TeamTaskRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.TeamTaskRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.TeamTaskRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    teamtaskid: msg.getTeamtaskid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.TeamTaskRes}\n */\nproto.teamtask.TeamTaskRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.TeamTaskRes;\n  return proto.teamtask.TeamTaskRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.TeamTaskRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.TeamTaskRes}\n */\nproto.teamtask.TeamTaskRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.TeamTaskRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.TeamTaskRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.TeamTaskRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.TeamTaskRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.TeamTaskRes} The clone.\n */\nproto.teamtask.TeamTaskRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.TeamTaskRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.teamtask.TeamTaskRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamTaskRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamTaskId = 2;\n * @return {string}\n */\nproto.teamtask.TeamTaskRes.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamTaskRes.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.UpdateTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.UpdateTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.UpdateTeamTaskReq.displayName = 'proto.teamtask.UpdateTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.UpdateTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.UpdateTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.UpdateTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamtaskid: msg.getTeamtaskid(),\n    title: msg.getTitle(),\n    description: msg.getDescription(),\n    priority: msg.getPriority(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    assigneearray: msg.getAssigneearray(),\n    comment: msg.getComment(),\n    status: msg.getStatus(),\n    review: msg.getReview(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid(),\n    sprintid: msg.getSprintid(),\n    sprintbacklogid: msg.getSprintbacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.UpdateTeamTaskReq}\n */\nproto.teamtask.UpdateTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.UpdateTeamTaskReq;\n  return proto.teamtask.UpdateTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.UpdateTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.UpdateTeamTaskReq}\n */\nproto.teamtask.UpdateTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssigneearray(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setComment(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReview(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 15:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 16:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintbacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.UpdateTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.UpdateTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getAssigneearray();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getComment();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getReview();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      15,\n      f\n    );\n  }\n  f = this.getSprintbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      16,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.UpdateTeamTaskReq} The clone.\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.UpdateTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamTaskId = 3;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string title = 4;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string description = 5;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string priority = 6;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string start = 7;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string deadline = 8;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string assigneeArray = 9;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getAssigneearray = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setAssigneearray = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string comment = 10;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getComment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setComment = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string status = 11;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string review = 12;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getReview = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setReview = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string accessToken = 13;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string teamId = 14;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 14, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * optional string sprintId = 15;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 15, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * optional string sprintBacklogId = 16;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getSprintbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 16, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setSprintbacklogid = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.RegisterTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.RegisterTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.RegisterTeamTaskReq.displayName = 'proto.teamtask.RegisterTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.RegisterTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.RegisterTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.RegisterTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamtaskid: msg.getTeamtaskid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid(),\n    assigner: msg.getAssigner()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.RegisterTeamTaskReq}\n */\nproto.teamtask.RegisterTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.RegisterTeamTaskReq;\n  return proto.teamtask.RegisterTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.RegisterTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.RegisterTeamTaskReq}\n */\nproto.teamtask.RegisterTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssigner(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.RegisterTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.RegisterTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getAssigner();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.RegisterTeamTaskReq} The clone.\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.RegisterTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamTaskId = 3;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string assigner = 5;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getAssigner = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setAssigner = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.CancelTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.CancelTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.CancelTeamTaskReq.displayName = 'proto.teamtask.CancelTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.CancelTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.CancelTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.CancelTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamtaskid: msg.getTeamtaskid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.CancelTeamTaskReq}\n */\nproto.teamtask.CancelTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.CancelTeamTaskReq;\n  return proto.teamtask.CancelTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.CancelTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.CancelTeamTaskReq}\n */\nproto.teamtask.CancelTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.CancelTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.CancelTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.CancelTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.CancelTeamTaskReq} The clone.\n */\nproto.teamtask.CancelTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.CancelTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamTaskId = 3;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.GetAllTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.GetAllTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.GetAllTeamTaskReq.displayName = 'proto.teamtask.GetAllTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.GetAllTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.GetAllTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid(),\n    sprintid: msg.getSprintid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.GetAllTeamTaskReq}\n */\nproto.teamtask.GetAllTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.GetAllTeamTaskReq;\n  return proto.teamtask.GetAllTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.GetAllTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.GetAllTeamTaskReq}\n */\nproto.teamtask.GetAllTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.GetAllTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.GetAllTeamTaskReq} The clone.\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.GetAllTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string sprintId = 4;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.GetAllTeamTaskRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.GetAllTeamTaskRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.GetAllTeamTaskRes.displayName = 'proto.teamtask.GetAllTeamTaskRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.GetAllTeamTaskRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.GetAllTeamTaskRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamTaskRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    teamtaskid: msg.getTeamtaskid(),\n    title: msg.getTitle(),\n    description: msg.getDescription(),\n    priority: msg.getPriority(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    assigneearray: msg.getAssigneearray(),\n    comment: msg.getComment(),\n    statusteamtask: msg.getStatusteamtask(),\n    status: msg.getStatus(),\n    review: msg.getReview(),\n    teamid: msg.getTeamid(),\n    sprintbacklogid: msg.getSprintbacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.GetAllTeamTaskRes}\n */\nproto.teamtask.GetAllTeamTaskRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.GetAllTeamTaskRes;\n  return proto.teamtask.GetAllTeamTaskRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.GetAllTeamTaskRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.GetAllTeamTaskRes}\n */\nproto.teamtask.GetAllTeamTaskRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssigneearray(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setComment(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusteamtask(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReview(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintbacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.GetAllTeamTaskRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamTaskRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getAssigneearray();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getComment();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getStatusteamtask();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getReview();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getSprintbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.GetAllTeamTaskRes} The clone.\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.GetAllTeamTaskRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string teamTaskId = 1;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string title = 2;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string description = 3;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string priority = 4;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string start = 5;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string deadline = 6;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string assigneeArray = 7;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getAssigneearray = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setAssigneearray = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string comment = 8;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getComment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setComment = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string statusTeamTask = 12;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getStatusteamtask = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setStatusteamtask = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string status = 9;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string review = 10;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getReview = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setReview = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string sprintBacklogId = 14;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getSprintbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 14, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setSprintbacklogid = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\ngoog.object.extend(exports, proto.teamtask);\n"],"sourceRoot":""}