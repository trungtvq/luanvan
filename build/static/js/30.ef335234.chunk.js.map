{"version":3,"sources":["../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Button.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","gRPC/sprintbacklog/sprintbacklog_grpc_web_pb.js","gRPC/sprintbacklog/sprintbacklog_pb.js","views/Workspace/Member/SprintBacklog/SprintBacklog.js","../node_modules/lodash.isobject/index.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","lodash_isobject__WEBPACK_IMPORTED_MODULE_2__","lodash_isobject__WEBPACK_IMPORTED_MODULE_2___default","n","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","stringOrNumberProp","a","oneOfType","number","string","columnProps","bool","shape","size","push","Object","pull","order","offset","propTypes","tag","xs","sm","md","lg","xl","className","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Col","props","Tag","attributes","colClasses","forEach","i","columnProp","_classNames","colSizeInterfix","colClass","_colClass","length","classes","createElement","__webpack_exports__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","prop_types__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_5___default","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","_utils__WEBPACK_IMPORTED_MODULE_7__","active","aria-label","block","color","disabled","outline","innerRef","func","onClick","children","node","close","Button","_React$Component","_this","call","this","bind","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","aria-hidden","btnOutlineColor","href","defaultAriaLabel","type","undefined","ref","Component","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","Symbol","iterator","toString","from","_iterableToArray","TypeError","_nonIterableSpread","d","grpc","web","require","proto","sprintbacklog","SprintBacklogClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","SprintBacklogPromiseClient","methodInfo_SprintBacklog_deleteSprintBacklog","AbstractClientBase","MethodInfo","SprintBacklogRes","request","serializeBinary","deserializeBinary","deleteSprintBacklog","metadata","callback","rpcCall","unaryCall","methodInfo_SprintBacklog_getAllSprintBacklog","GetAllSprintBacklogRes","getAllSprintBacklog","serverStreaming","module","exports","jspb","goog","global","Function","exportSymbol","DeleteSprintBacklogReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","backlogid","getBacklogid","accesstoken","getAccesstoken","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setRequesterid","setProjectid","setBacklogid","setAccesstoken","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","writeString","cloneMessage","getFieldProto3","setField","status","getStatus","setStatus","GetAllSprintBacklogReq","title","getTitle","role","getRole","want","getWant","so","getSo","statusbacklog","getStatusbacklog","priority","getPriority","estimation","getEstimation","sprintid","getSprintid","start","getStart","deadline","getDeadline","setTitle","setRole","setWant","setSo","setStatusbacklog","setPriority","setEstimation","setSprintid","setStart","setDeadline","extend","SprintBacklog","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","handleDelete","state","data","sprintbacklogService","cookie","load","response","that","on","setState","prevState","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","id","sprint","console","log","code","details","end","react__WEBPACK_IMPORTED_MODULE_6___default","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","class","map","item","key","reactstrap__WEBPACK_IMPORTED_MODULE_10__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","noGutters","form","Row","inverse","body","Card"],"mappings":"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","file":"static/js/30.ef335234.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport isobject from 'lodash.isobject';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  push: deprecated(stringOrNumberProp, 'Please use the prop \"order\"'),\n  pull: deprecated(stringOrNumberProp, 'Please use the prop \"order\"'),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isobject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","/**\n * @fileoverview gRPC-Web generated client stub for sprintbacklog\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.sprintbacklog = require('./sprintbacklog_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprintbacklog.SprintBacklogClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprintbacklog.SprintBacklogPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.DeleteSprintBacklogReq,\n *   !proto.sprintbacklog.SprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_deleteSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.SprintBacklogRes,\n  /** @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.SprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.sprintbacklog.SprintBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.SprintBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.deleteSprintBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/deleteSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_deleteSprintBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.sprintbacklog.SprintBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.deleteSprintBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/deleteSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_deleteSprintBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.GetAllSprintBacklogReq,\n *   !proto.sprintbacklog.GetAllSprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_getAllSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.GetAllSprintBacklogRes,\n  /** @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.GetAllSprintBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.getAllSprintBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/getAllSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_getAllSprintBacklog);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.GetAllSprintBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.getAllSprintBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/getAllSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_getAllSprintBacklog);\n};\n\n\nmodule.exports = proto.sprintbacklog;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.sprintbacklog.DeleteSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.sprintbacklog.GetAllSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.sprintbacklog.GetAllSprintBacklogRes', null, global);\ngoog.exportSymbol('proto.sprintbacklog.SprintBacklogRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.DeleteSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.DeleteSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.DeleteSprintBacklogReq.displayName = 'proto.sprintbacklog.DeleteSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.DeleteSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    backlogid: msg.getBacklogid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.DeleteSprintBacklogReq;\n  return proto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq} The clone.\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.DeleteSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.SprintBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.SprintBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.SprintBacklogRes.displayName = 'proto.sprintbacklog.SprintBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.SprintBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.SprintBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.SprintBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    backlogid: msg.getBacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.SprintBacklogRes}\n */\nproto.sprintbacklog.SprintBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.SprintBacklogRes;\n  return proto.sprintbacklog.SprintBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.SprintBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.SprintBacklogRes}\n */\nproto.sprintbacklog.SprintBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.SprintBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.SprintBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.SprintBacklogRes} The clone.\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.SprintBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.GetAllSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.GetAllSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.GetAllSprintBacklogReq.displayName = 'proto.sprintbacklog.GetAllSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.GetAllSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.GetAllSprintBacklogReq;\n  return proto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq} The clone.\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.GetAllSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.GetAllSprintBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.GetAllSprintBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.GetAllSprintBacklogRes.displayName = 'proto.sprintbacklog.GetAllSprintBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.GetAllSprintBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    title: msg.getTitle(),\n    backlogid: msg.getBacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    status: msg.getStatus()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.GetAllSprintBacklogRes;\n  return proto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes} The clone.\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.GetAllSprintBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string title = 1;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string backlogId = 2;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 11;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string priority = 6;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string estimation = 7;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string sprintId = 8;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string start = 12;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string deadline = 10;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string status = 9;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\ngoog.object.extend(exports, proto.sprintbacklog);\n","import React, { Component } from 'react';\r\nimport { Card,CardHeader,Badge, Button, Col, Container, Input, InputGroup, InputGroupAddon, InputGroupText, Row, Table, Pagination, PaginationItem, PaginationLink, } from 'reactstrap';\r\nimport cookie from 'react-cookies';\r\nconst proto = {};\r\nproto.sprintbacklog = require('./../../../../gRPC/sprintbacklog/sprintbacklog_grpc_web_pb');\r\n\r\nclass SprintBacklog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      }\r\n    };\r\n    componentDidMount() {\r\n  \r\n      const sprintbacklogService = new proto.sprintbacklog.SprintBacklogClient('https://www.overlead.co');\r\n      var metadata = {};\r\n      var GetAllSprintBacklogReq = new proto.sprintbacklog.GetAllSprintBacklogReq();\r\n      GetAllSprintBacklogReq.setRequesterid(cookie.load(\"userId\"));\r\n      GetAllSprintBacklogReq.setAccesstoken(cookie.load(\"accessToken\"));\r\n      GetAllSprintBacklogReq.setProjectid(cookie.load(\"currentProject\"));\r\n  \r\n      var response = sprintbacklogService.getAllSprintBacklog(GetAllSprintBacklogReq, metadata)\r\n      let that = this\r\n      response.on('data', function (response) {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          that.setState(prevState => ({\r\n            data: [...prevState.data,\r\n            {\r\n              id: response.getBacklogid(),\r\n            title: response.getTitle(),\r\n            role: response.getRole(),\r\n            want: response.getWant(),\r\n            so: response.getSo(),\r\n            priority: response.getPriority(),\r\n            estimation: response.getEstimation(),\r\n            sprint: response.getSprintid(),\r\n            status: response.getStatusbacklog(),\r\n            start: response.getStart(),\r\n            deadline: response.getDeadline()\r\n            }]\r\n          }));\r\n  \r\n        }\r\n      })\r\n      response.on('status', function (status) {\r\n        console.log(\"status\")\r\n        console.log(status.code);\r\n        console.log(status.details);\r\n        console.log(status.metadata);\r\n      });\r\n      response.on('end', function (end) {\r\n        console.log(\"end\")\r\n        console.log(end)\r\n      });\r\n  \r\n  \r\n  \r\n    }\r\n    handleDelete = () => {\r\n      \r\n    };\r\n  render() {\r\n    let that=this;\r\n    return (\r\n      <Row>\r\n          <Col>    \r\n              <Card>\r\n              <div class=\"table-responsive\"> \r\n                <table class=\"table table-lg\">\r\n                  <thead class=\"thead\">\r\n                  <tr class=\"bg-primary\">\r\n                    <th>Title... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>As a... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>I want to be able to... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>So that... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Priority <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Estimation <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Sprint <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Start <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Deadline <i class=\"fa fa-sort\"></i></th>\r\n                    <th></th>\r\n                  </tr>\r\n                  </thead>\r\n                    <tbody>{this.state.data.map(function(item, key) {    \r\n               return (\r\n                  <tr key = {key}>\r\n                      <td>{item.title}</td>\r\n                      <td>{item.role}</td>\r\n                      <td>{item.want}</td>\r\n                      <td>{item.so}</td>\r\n                      <td><center>{item.priority}</center></td>\r\n                      <td><center>{item.estimation}</center></td>\r\n                      <td><center>{item.sprint}</center></td>\r\n                      <td><center>{item.start}</center></td>\r\n                      <td><center>{item.deadline}</center></td>\r\n                      <td>                        \r\n                      <Button type=\"submit\" size=\"sm\" color=\"danger\" onClick={that.handleDelete}><i class=\"fa fa-trash\"></i></Button>\r\n                      </td>\r\n                  </tr>\r\n                )\r\n             \r\n             })}</tbody>\r\n                </table>\r\n            </div>\r\n               </Card>\r\n          </Col>\r\n        </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SprintBacklog;\r\n","/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;"],"sourceRoot":""}