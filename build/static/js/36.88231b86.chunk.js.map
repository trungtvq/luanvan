{"version":3,"sources":["../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardFooter.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/Workspace/DailySchedule/DailySchedule.js","gRPC/dailyschedule/dailyschedule_grpc_web_pb.js","gRPC/dailyschedule/dailyschedule_pb.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","noGutters","a","bool","className","string","cssModule","object","form","Row","props","Tag","attributes","Object","classes","createElement","defaultProps","__webpack_exports__","inverse","color","block","body","outline","innerRef","oneOfType","func","Card","ref","CardBody","CardFooter","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","d","proto","dailyschedule","require","DailySchedule","_this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","toggleActionStatus","setState","prevState","modalActionStatus","onTextboxChangeScheduleIdUpdate","event","scheduleIdUpdate","target","value","onTextboxChangeTitleUpdate","titleUpdate","onTextboxChangeTaskUpdate","taskUpdate","onTextboxChangeTimeStartUpdate","timeStartUpdate","onTextboxChangeDateStartUpdate","dateStartUpdate","onTextboxChangeStatusUpdate","statusUpdate","onGetUpdate","console","log","state","onTextboxChangeScheduleIdDelete","id","scheduleIdDelete","handleReset","title","handleAdd","dailyscheduleService","DailyscheduleClient","AddNewDailyScheduleReq","setRequesterid","requesterId","setProjectid","projectId","setTitle","setTask","task","setTime","timeStart","dateStart","setSchedulestatus","setCookie","cookie","toto","addNewDailySchedule","err","response","getStatus","data","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","getId","actionStatus","handleUpdate","UpdateDailyScheduleReq","setScheduleid","updateDailySchedule","modalEdit","tmpdata","map","p","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","status","handleDelete","DeleteDailyScheduleReq","deleteDailySchedule","filter","e","resetform","baseState","toggleEdit","bind","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","onTextboxChangeTitle","onTextboxChangeTask","onTextboxChangeTime","onTextboxChangeStatus","onTextboxChangeTimeStart","onTextboxChangeDateStart","time","_this$state","that","react__WEBPACK_IMPORTED_MODULE_8___default","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","size","isOpen","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","class","item","key","reactstrap__WEBPACK_IMPORTED_MODULE_14__","onClick","buttonLabel","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","row","md","reactstrap__WEBPACK_IMPORTED_MODULE_18__","htmlFor","xs","reactstrap__WEBPACK_IMPORTED_MODULE_19__","type","name","placeholder","onChange","rows","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_21__","reactstrap__WEBPACK_IMPORTED_MODULE_22__","Component","grpc","web","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","DailyschedulePromiseClient","methodInfo_Dailyschedule_addNewDailySchedule","AbstractClientBase","MethodInfo","DailyScheduleRes","request","serializeBinary","deserializeBinary","metadata","callback","rpcCall","unaryCall","methodInfo_Dailyschedule_updateDailySchedule","methodInfo_Dailyschedule_deleteDailySchedule","methodInfo_Dailyschedule_getAllDailySchedule","getAllDailySchedule","serverStreaming","module","exports","jspb","goog","global","Function","exportSymbol","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","getTitle","getTask","getTime","schedulestatus","getSchedulestatus","getCookie","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","writeString","cloneMessage","getFieldProto3","setField","scheduleid","getScheduleid","GetAllDailyScheduleReq","error","getError","note","getNote","setError","setStatus","setNote","extend"],"mappings":"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","file":"static/js/36.88231b86.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardFooter = function CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-footer'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\nexport default CardFooter;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { Component } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  ButtonDropdown,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  Col,\r\n  Collapse,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Fade,\r\n  Form,\r\n  FormGroup,\r\n  FormText,\r\n  FormFeedback,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Label,\r\n  Table,\r\n  Row,\r\n  Modal,\r\nModalHeader,\r\nModalBody,\r\nModalFooter,\r\n} from 'reactstrap';\r\n\r\nconst proto = {};\r\nproto.dailyschedule = require('./../../../gRPC/dailyschedule/dailyschedule_grpc_web_pb');\r\n\r\nclass DailySchedule extends Component {\r\n   constructor(props) {\r\n    super(props);\r\n    this.toggleEdit = this.toggleEdit.bind(this);\r\n\r\n    this.onTextboxChangeTitle = this.onTextboxChangeTitle.bind(this);\r\n    this.onTextboxChangeTask = this.onTextboxChangeTask.bind(this);\r\n    this.onTextboxChangeTime = this.onTextboxChangeTime.bind(this);\r\n    this.onTextboxChangeStatus = this.onTextboxChangeStatus.bind(this);\r\n    this.onTextboxChangeTimeStart = this.onTextboxChangeTimeStart.bind(this);\r\n    this.onTextboxChangeDateStart = this.onTextboxChangeDateStart.bind(this);\r\n \r\n\r\n    \r\n    this.state = {\r\n      data: [ \r\n              {\r\n                \"id\":\"1\",\r\n                \"title\":\"Login1\",\r\n                \"task\":\"Login bằng fb1\",\r\n                \"timeStart\":\"02:20\",\r\n                \"dateStart\":\"2019-05-05\",\r\n               \r\n                \"status\":\"\",\r\n              },\r\n              {\r\n                \"id\":\"2\",\r\n                \"title\":\"Login2\",\r\n                \"task\":\"Login bằng fb2\",\r\n                \"timeStart\":\"02:20\",\r\n                \"dateStart\":\"2019-05-05\",\r\n                \r\n                \"status\":\"\",\r\n              },\r\n              {\r\n                \"id\":\"3\",\r\n                \"title\":\"Login3\",\r\n                \"task\":\"Login bằng fb3\",\r\n                \"timeStart\":\"02:20\",\r\n                \"dateStart\":\"2019-05-05\",\r\n                \r\n                \"status\":\"\",\r\n              },\r\n              {\r\n                \"id\":\"4\",\r\n                \"title\":\"Login\",\r\n                \"task\":\"Login bằng fb4\",\r\n                \"timeStart\":\"02:20\",\r\n                \"dateStart\":\"2019-05-05\",\r\n               \r\n                \"status\":\"\",\r\n              },\r\n            \r\n            ],\r\n      modalEdit: false,\r\n      modalActionStatus: false,     \r\n      requesterId:'',\r\n      projectId:'',\r\n      cookie:'',\r\n      actionStatus:'',              //success or show error when action add delete update\r\n      \r\n      //add\r\n      title:'',\r\n      task:'',\r\n      timeStart:'',\r\n      dateStart:'',\r\n      status:'',\r\n      //update\r\n      scheduleIdUpdate:'',\r\n      titleUpdate:'',\r\n      taskUpdate:'',\r\n      timeStartUpdate:'',\r\n      dateStartUpdate:'',\r\n      statusUpdate:'',\r\n      //delete\r\n      scheduleIdDelete:'',\r\n      }\r\n    };\r\n\r\n  toggleEdit() {\r\n    this.setState(prevState => ({\r\n      modalEdit: !prevState.modalEdit\r\n    }));\r\n  }\r\n  toggleActionStatus=()=> {\r\n    this.setState(prevState => ({\r\n      modalActionStatus: !prevState.modalActionStatus\r\n    }));\r\n  }\r\n//add\r\n  onTextboxChangeTitle(event) {\r\n    this.setState({\r\n      title: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeTask(event) {\r\n    this.setState({\r\n      task: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeTime(event) {\r\n    this.setState({\r\n      time: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeStatus(event) {\r\n    this.setState({\r\n      status: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeTimeStart(event) {\r\n    this.setState({\r\n      timeStart: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeDateStart(event) {\r\n    this.setState({\r\n      dateStart: event.target.value,\r\n    });\r\n  }\r\n//update\r\n  onTextboxChangeScheduleIdUpdate=(event)=> {\r\n    this.setState({\r\n      scheduleIdUpdate: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeTitleUpdate=(event)=> {\r\n    this.setState({\r\n      titleUpdate: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeTaskUpdate=(event)=> {\r\n    this.setState({\r\n      taskUpdate: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeTimeStartUpdate=(event)=> {\r\n    this.setState({\r\n      timeStartUpdate: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeDateStartUpdate=(event)=> {\r\n    this.setState({\r\n      dateStartUpdate: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeStatusUpdate=(event)=> {\r\n    this.setState({\r\n      statusUpdate: event.target.value,\r\n    });\r\n  }\r\n  onGetUpdate=(scheduleIdUpdate,titleUpdate,taskUpdate,timeStartUpdate,dateStartUpdate,statusUpdate)=>{\r\n    this.setState({\r\n      scheduleIdUpdate:scheduleIdUpdate,\r\n      titleUpdate:titleUpdate,\r\n      taskUpdate:taskUpdate,\r\n      timeStartUpdate:timeStartUpdate,\r\n      dateStartUpdate:dateStartUpdate,\r\n      statusUpdate:statusUpdate,\r\n    });\r\n    console.log(\"idParam: -------\"+scheduleIdUpdate);\r\n    console.log(\"id: -------\"+this.state.scheduleIdUpdate);\r\n  }\r\n//delete\r\n  onTextboxChangeScheduleIdDelete=(id)=> {\r\n    this.setState({\r\n      scheduleIdDelete: id,\r\n    });\r\n    console.log(\"first===\"+this.state.scheduleIdDelete)\r\n  }\r\n\r\n  handleReset= (event) => {\r\n    console.log('vao reset');\r\n    this.setState({\r\n      title:'',\r\n    });\r\n  }\r\n  \r\n  handleAdd = () => {\r\n    //console.log(\"handleadd\");\r\n    const dailyscheduleService = new proto.dailyschedule.DailyscheduleClient('http://overlead.co:8084');\r\n    //some data of request (get that from frontend)\r\n    console.log(dailyscheduleService)\r\n    //console.log(\"vao daily\");\r\n    var metadata = {};\r\n    //make a request to server\r\n  //   string requesterId = 1;\r\n  //   string projectId = 2;\r\n  \r\n  //   string title=3; //uni\r\n  //   string task=4;\r\n  //   string time=5;\r\n  //   string scheduleStatus = 6;\r\n  // string cookie = 8;\r\n    var AddNewDailyScheduleReq= new proto.dailyschedule.AddNewDailyScheduleReq();\r\n    AddNewDailyScheduleReq.setRequesterid(this.state.requesterId);\r\n    AddNewDailyScheduleReq.setProjectid(this.state.projectId);\r\n    AddNewDailyScheduleReq.setTitle(this.state.title);\r\n    AddNewDailyScheduleReq.setTask(this.state.task);\r\n    AddNewDailyScheduleReq.setTime(this.state.timeStart+\" \"+this.state.dateStart);\r\n    AddNewDailyScheduleReq.setSchedulestatus(\"to do\");\r\n    AddNewDailyScheduleReq.setCookie(this.state.cookie);\r\n\r\n    var toto=dailyscheduleService.addNewDailySchedule(AddNewDailyScheduleReq, metadata, (err, response) => {\r\n      console.log(\"AddNewDailyScheduleReq----------connect\")\r\n      if (err) { //if error\r\n         console.log(err);\r\n         console.log(\"error\")\r\n      } else { //if success\r\n              //get response\r\n              console.log(\"response--------------------------\")\r\n              console.log(response);\r\n              console.log(response.getStatus())\r\n              if(response.getStatus()==\"SUCCESS\")\r\n              {\r\n                this.setState(prevState=>({data:[...prevState.data,{id:response.getId(),title:this.state.title,task:this.state.task,timeStart:this.state.timeStart,dateStart:this.state.dateStart}]}));\r\n                this.setState({\r\n                  title:'',\r\n                  task:'',\r\n                  timeStart:'',\r\n                  dateStart:'',\r\n                  modalActionStatus:true,\r\n                  actionStatus:'SUCCESS'\r\n                });\r\n              }else{\r\n                this.setState({\r\n                  modalActionStatus:true,\r\n                  actionStatus:'FALSE',\r\n                });\r\n              }\r\n               \r\n              const ProfileRes = response[0];\r\n            }\r\n          });\r\n          console.log(toto)\r\n          \r\n  };\r\n\r\n  \r\n  handleUpdate = () => {\r\n    \r\n    const dailyscheduleService = new proto.dailyschedule.DailyscheduleClient('https://trungcs.com');\r\n    //some data of request (get that from frontend)\r\n    console.log(dailyscheduleService)\r\n    //console.log(\"vao daily\");\r\n    var metadata = {};\r\n    //make a request to server\r\n    // string requesterId = 1;\r\n    // string projectId = 2;\r\n    // string scheduleId = 3;\r\n    // string title=4;\r\n    // string task=5;\r\n    // string time=6;\r\n    // string scheduleStatus = 7;\r\n    // string cookie = 8;\r\n    var UpdateDailyScheduleReq= new proto.dailyschedule.UpdateDailyScheduleReq();\r\n    UpdateDailyScheduleReq.setRequesterid(this.state.requesterId);\r\n    UpdateDailyScheduleReq.setProjectid(this.state.projectId);\r\n    UpdateDailyScheduleReq.setScheduleid(this.state.scheduleIdUpdate);\r\n    UpdateDailyScheduleReq.setTitle(this.state.titleUpdate);\r\n    UpdateDailyScheduleReq.setTask(this.state.taskUpdate);\r\n    UpdateDailyScheduleReq.setTime(this.state.timeStartUpdate+\" \"+this.state.dateStartUpdate);\r\n    UpdateDailyScheduleReq.setSchedulestatus(this.state.statusUpdate);\r\n    UpdateDailyScheduleReq.setCookie(this.state.cookie);\r\n\r\n    var toto=dailyscheduleService.updateDailySchedule(UpdateDailyScheduleReq, metadata, (err, response) => {\r\n      console.log(\"UpdateDailyScheduleReqconnect\")\r\n      if (!err) { //if error\r\n         console.log(err);\r\n         console.log(\"error\")\r\n      } else { //if success\r\n              //get response\r\n              console.log(\"response\")\r\n              console.log(response);\r\n             \r\n              if(response.getStatus()==\"SUCCESS\")\r\n              {\r\n                this.setState({\r\n                  actionStatus:\"SUCCESS\",\r\n\r\n                });\r\n                this.setState(prevState => ({\r\n                  modalEdit: !prevState.modalEdit,\r\n                  modalActionStatus:!prevState.modalActionStatus,\r\n                  }));\r\n                  const tmpdata = this.state.data.map(p =>\r\n                    p.id === this.state.scheduleIdUpdate\r\n                      ? { ...p, title: this.state.titleUpdate,task:this.state.taskUpdate,\r\n                        timeStart:this.state.timeStartUpdate,dateStart:this.state.dateStartUpdate,status:this.state.statusUpdate}\r\n                      : p\r\n                  );\r\n                 \r\n                  this.setState({\r\n                    data:tmpdata,\r\n                  });\r\n                 \r\n                  \r\n              }else{\r\n                this.setState({\r\n                  actionStatus:\"FALSE\",\r\n                });\r\n                this.setState(prevState => ({\r\n                  modalEdit: !prevState.modalEdit,\r\n                  modalActionStatus:!prevState.modalActionStatus,\r\n                  }));\r\n              }\r\n             \r\n            }\r\n          });\r\n          console.log(toto)\r\n          console.log(\"ra daily\");\r\n  };\r\n  handleDelete = (id) => {\r\n    console.log(\"vào\");\r\n\r\n   \r\n\r\n\r\n    const dailyscheduleService = new proto.dailyschedule.DailyscheduleClient('https://trungcs.com');\r\n    //some data of request (get that from frontend)\r\n    console.log(dailyscheduleService)\r\n    console.log(\"vao daily\");\r\n    var metadata = {};\r\n    //make a request to server\r\n    // string requesterId = 1;\r\n\t  // string projectId=2;\r\n\t  // string scheduleId = 3;\r\n    // string cookie = 4;\r\n    var DeleteDailyScheduleReq= new proto.dailyschedule.DeleteDailyScheduleReq();\r\n    DeleteDailyScheduleReq.setRequesterid(this.state.requesterId);\r\n    DeleteDailyScheduleReq.setProjectid(this.state.projectId);\r\n    DeleteDailyScheduleReq.setScheduleid(this.state.scheduleIdDelete);\r\n    DeleteDailyScheduleReq.setCookie(this.state.cookie);\r\n\r\n    var toto=dailyscheduleService.deleteDailySchedule(DeleteDailyScheduleReq, metadata, (err, response) => {\r\n      console.log(\"connect\")\r\n      if (err) { //if error\r\n         console.log(err);\r\n         console.log(\"error\")\r\n      } else { //if success\r\n              //get response\r\n              console.log(\"response\")\r\n              console.log(response);\r\n             if(response.getStatus()==\"SUCCESS\")\r\n             {\r\n              this.setState({\r\n                actionStatus:\"SUCCESS\",\r\n                modalActionStatus:true\r\n              });\r\n              this.setState(prevState=>({data:[...prevState.data.filter(function(e) { return e.id !== id; })]}));\r\n             }else{\r\n                  this.setState({\r\n                    actionStatus:\"FALSE\",\r\n                  });\r\n                  this.setState(prevState => ({\r\n                    modalActionStatus:!prevState.modalActionStatus,\r\n                    }));\r\n                }\r\n             }\r\n              \r\n             \r\n            \r\n          });\r\n      \r\n  };\r\n\r\n resetform = () =>{\r\n   this.setState(this.baseState);\r\n   console.log('vào reset');\r\n }\r\n  render() {\r\n    const {\r\n      data,\r\n      modalEdit,\r\n      title,\r\n      task,\r\n      status,\r\n      timeStart,\r\n      dateStart,\r\n      \r\n    } = this.state;\r\n    let that=this;\r\n\r\n   \r\n\r\n    return (\r\n      <Row>\r\n          <Modal size=\"sm\"  isOpen={that.state.modalActionStatus} toggle={that.toggleActionStatus} className={that.props.className}>\r\n          <ModalBody>\r\n            <center><h4>{that.state.actionStatus}</h4></center>\r\n          </ModalBody>\r\n          </Modal>\r\n          <Col>  \r\n            <Card>           \r\n                <table class=\"table table-lg\">\r\n                  <thead class=\"thead\">\r\n                  <tr class=\"bg-primary\">\r\n                    <th>Title</th>\r\n                    <th>Task</th>\r\n                    <th>Time</th>\r\n                   \r\n                    <th>Status</th>  \r\n                    <th> </th>                 \r\n                  </tr>\r\n                  </thead>\r\n                   <tbody>{this.state.data.map(function(item, key) {\r\n             \r\n               return (\r\n                  <tr key = {key}>\r\n                      <td>{item.title}</td>\r\n                      <td>{item.task}</td>\r\n                      <td>{item.timeStart} {item.dateStart}</td>\r\n                      \r\n                      <td>{item.status}</td>\r\n                      <td>\r\n                      <Button color=\"warning\" size=\"sm\" onClick={(event)=>{that.toggleEdit();that.onGetUpdate(item.id,item.title,item.task,item.timeStart,item.dateStart,item.status)}}>\r\n                      <i class=\"fa fa-edit\"></i>{that.props.buttonLabel}</Button>\r\n                        <Modal size=\"lg\" isOpen={that.state.modalEdit} toggle={that.toggleEdit} className={that.props.className}>\r\n                              <ModalHeader toggle={that.toggleEdit}>Daily schedule</ModalHeader>\r\n                              <ModalBody>\r\n                              <Form  className=\"form-horizontal\">               \r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"text-input\">Title</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <Input type=\"text\" id=\"Title\" name=\"Title\" placeholder=\"Title\" value={that.state.titleUpdate} onChange={that.onTextboxChangeTitleUpdate}/>\r\n                                    \r\n                                  </Col>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"textarea-input\">Task</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <Input type=\"textarea\" name=\"Task\" id=\"Task\" rows=\"9\"\r\n                                          placeholder=\"Task...\" value={that.state.taskUpdate} onChange={that.onTextboxChangeTaskUpdate}/>\r\n                                  </Col>\r\n                                </FormGroup>\r\n                                                \r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"date-input\">Start </Label>\r\n                                  </Col>\r\n                                  <Col xs=\"3\" md=\"3\">\r\n                                  \r\n                                    <Input type=\"time\" id=\"timeStart\" name=\"timeStart\" value={that.state.timeStartUpdate} onChange={that.onTextboxChangeTimeStartUpdate}/>\r\n                                  </Col>\r\n                                  <Col xs=\"3\" md=\"3\">\r\n                                    <Input type=\"date\" id=\"dateStart\" name=\"dateStart\" value={that.state.dateStartUpdate} onChange={that.onTextboxChangeDateStartUpdate}/>\r\n                                  </Col>\r\n                                </FormGroup>\r\n                                \r\n              \r\n\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label>Status</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"status\" name=\"status\" value={that.state.statusUpdate} onChange={that.onTextboxChangeStatusUpdate}/>\r\n                                  </Col>\r\n                                </FormGroup>                                       \r\n                              </Form>                  \r\n                              </ModalBody>\r\n                              <ModalFooter>\r\n                                <Button color=\"primary\" onClick={that.handleUpdate}>Submit</Button>{' '}\r\n                                <Button color=\"secondary\" onClick={that.toggleEdit}>Cancel</Button>\r\n                              </ModalFooter>\r\n                        </Modal>\r\n\r\n                      <Button color=\"danger\" size=\"sm\" ><i class=\"fa fa-trash\" onClick={(event) => {  that.handleDelete(item.id)}}></i></Button>\r\n                      </td>\r\n                  </tr>\r\n                )\r\n             \r\n             })}</tbody>\r\n                </table>           \r\n            </Card>  \r\n            <Card>             \r\n              <CardBody>\r\n                <Form  className=\"form-horizontal\">               \r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"text-input\">Title</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"text\" id=\"Title\" name=\"Title\" placeholder=\"Title\"  value={title} onChange={that.onTextboxChangeTitle}/>\r\n                      \r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                   <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"textarea-input\">Task</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <Input type=\"textarea\" name=\"Task\" id=\"Task\" rows=\"9\"\r\n                             placeholder=\"Task...\" value={task} onChange={that.onTextboxChangeTask}/>\r\n                    </Col>\r\n                  </FormGroup>\r\n                                  \r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label htmlFor=\"date-input\">Time </Label>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"3\">\r\n                      <Input type=\"time\" id=\"timeStart\" name=\"timeStart\" value={timeStart} onChange={that.onTextboxChangeTimeStart}/>\r\n                    </Col>\r\n                    <Col xs=\"3\" md=\"3\">\r\n                      <Input type=\"date\" id=\"dateStart\" name=\"dateStart\" value={dateStart} onChange={that.onTextboxChangeDateStart}/>\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup row>\r\n                    <Col md=\"3\">\r\n                      <Label>Status</Label>\r\n                    </Col>\r\n                    <Col xs=\"12\" md=\"9\">\r\n                      <p className=\"form-control-static\">To do</p>\r\n                    </Col>\r\n                  </FormGroup>                                       \r\n                </Form>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button type=\"submit\" size=\"sm\" color=\"primary\" onClick={that.handleAdd}><i className=\"fa fa-dot-circle-o\"></i> Add</Button>\r\n              </CardFooter>\r\n            </Card>\r\n         </Col>\r\n      </Row>\r\n         \r\n    );\r\n  }\r\n}\r\n\r\nexport default DailySchedule;\r\n","/**\r\n * @fileoverview gRPC-Web generated client stub for dailyschedule\r\n * @enhanceable\r\n * @public\r\n */\r\n\r\n// GENERATED CODE -- DO NOT EDIT!\r\n\r\n\r\n\r\nconst grpc = {};\r\ngrpc.web = require('grpc-web');\r\n\r\nconst proto = {};\r\nproto.dailyschedule = require('./dailyschedule_pb.js');\r\n\r\n/**\r\n * @param {string} hostname\r\n * @param {?Object} credentials\r\n * @param {?Object} options\r\n * @constructor\r\n * @struct\r\n * @final\r\n */\r\nproto.dailyschedule.DailyscheduleClient =\r\n    function(hostname, credentials, options) {\r\n  if (!options) options = {};\r\n  options['format'] = 'text';\r\n\r\n  /**\r\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\r\n   */\r\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\r\n\r\n  /**\r\n   * @private @const {string} The hostname\r\n   */\r\n  this.hostname_ = hostname;\r\n\r\n  /**\r\n   * @private @const {?Object} The credentials to be used to connect\r\n   *    to the server\r\n   */\r\n  this.credentials_ = credentials;\r\n\r\n  /**\r\n   * @private @const {?Object} Options for the client\r\n   */\r\n  this.options_ = options;\r\n};\r\n\r\n\r\n/**\r\n * @param {string} hostname\r\n * @param {?Object} credentials\r\n * @param {?Object} options\r\n * @constructor\r\n * @struct\r\n * @final\r\n */\r\nproto.dailyschedule.DailyschedulePromiseClient =\r\n    function(hostname, credentials, options) {\r\n  if (!options) options = {};\r\n  options['format'] = 'text';\r\n\r\n  /**\r\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\r\n   */\r\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\r\n\r\n  /**\r\n   * @private @const {string} The hostname\r\n   */\r\n  this.hostname_ = hostname;\r\n\r\n  /**\r\n   * @private @const {?Object} The credentials to be used to connect\r\n   *    to the server\r\n   */\r\n  this.credentials_ = credentials;\r\n\r\n  /**\r\n   * @private @const {?Object} Options for the client\r\n   */\r\n  this.options_ = options;\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\r\n *   !proto.dailyschedule.AddNewDailyScheduleReq,\r\n *   !proto.dailyschedule.DailyScheduleRes>}\r\n */\r\nconst methodInfo_Dailyschedule_addNewDailySchedule = new grpc.web.AbstractClientBase.MethodInfo(\r\n  proto.dailyschedule.DailyScheduleRes,\r\n  /** @param {!proto.dailyschedule.AddNewDailyScheduleReq} request */\r\n  function(request) {\r\n    return request.serializeBinary();\r\n  },\r\n  proto.dailyschedule.DailyScheduleRes.deserializeBinary\r\n);\r\n\r\n\r\n/**\r\n * @param {!proto.dailyschedule.AddNewDailyScheduleReq} request The\r\n *     request proto\r\n * @param {?Object<string, string>} metadata User defined\r\n *     call metadata\r\n * @param {function(?grpc.web.Error, ?proto.dailyschedule.DailyScheduleRes)}\r\n *     callback The callback function(error, response)\r\n * @return {!grpc.web.ClientReadableStream<!proto.dailyschedule.DailyScheduleRes>|undefined}\r\n *     The XHR Node Readable Stream\r\n */\r\nproto.dailyschedule.DailyscheduleClient.prototype.addNewDailySchedule =\r\n    function(request, metadata, callback) {\r\n  return this.client_.rpcCall(this.hostname_ +\r\n      '/dailyschedule.Dailyschedule/addNewDailySchedule',\r\n      request,\r\n      metadata || {},\r\n      methodInfo_Dailyschedule_addNewDailySchedule,\r\n      callback);\r\n};\r\n\r\n\r\n/**\r\n * @param {!proto.dailyschedule.AddNewDailyScheduleReq} request The\r\n *     request proto\r\n * @param {?Object<string, string>} metadata User defined\r\n *     call metadata\r\n * @return {!Promise<!proto.dailyschedule.DailyScheduleRes>}\r\n *     A native promise that resolves to the response\r\n */\r\nproto.dailyschedule.DailyschedulePromiseClient.prototype.addNewDailySchedule =\r\n    function(request, metadata) {\r\n  return this.client_.unaryCall(this.hostname_ +\r\n      '/dailyschedule.Dailyschedule/addNewDailySchedule',\r\n      request,\r\n      metadata || {},\r\n      methodInfo_Dailyschedule_addNewDailySchedule);\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\r\n *   !proto.dailyschedule.UpdateDailyScheduleReq,\r\n *   !proto.dailyschedule.DailyScheduleRes>}\r\n */\r\nconst methodInfo_Dailyschedule_updateDailySchedule = new grpc.web.AbstractClientBase.MethodInfo(\r\n  proto.dailyschedule.DailyScheduleRes,\r\n  /** @param {!proto.dailyschedule.UpdateDailyScheduleReq} request */\r\n  function(request) {\r\n    return request.serializeBinary();\r\n  },\r\n  proto.dailyschedule.DailyScheduleRes.deserializeBinary\r\n);\r\n\r\n\r\n/**\r\n * @param {!proto.dailyschedule.UpdateDailyScheduleReq} request The\r\n *     request proto\r\n * @param {?Object<string, string>} metadata User defined\r\n *     call metadata\r\n * @param {function(?grpc.web.Error, ?proto.dailyschedule.DailyScheduleRes)}\r\n *     callback The callback function(error, response)\r\n * @return {!grpc.web.ClientReadableStream<!proto.dailyschedule.DailyScheduleRes>|undefined}\r\n *     The XHR Node Readable Stream\r\n */\r\nproto.dailyschedule.DailyscheduleClient.prototype.updateDailySchedule =\r\n    function(request, metadata, callback) {\r\n  return this.client_.rpcCall(this.hostname_ +\r\n      '/dailyschedule.Dailyschedule/updateDailySchedule',\r\n      request,\r\n      metadata || {},\r\n      methodInfo_Dailyschedule_updateDailySchedule,\r\n      callback);\r\n};\r\n\r\n\r\n/**\r\n * @param {!proto.dailyschedule.UpdateDailyScheduleReq} request The\r\n *     request proto\r\n * @param {?Object<string, string>} metadata User defined\r\n *     call metadata\r\n * @return {!Promise<!proto.dailyschedule.DailyScheduleRes>}\r\n *     A native promise that resolves to the response\r\n */\r\nproto.dailyschedule.DailyschedulePromiseClient.prototype.updateDailySchedule =\r\n    function(request, metadata) {\r\n  return this.client_.unaryCall(this.hostname_ +\r\n      '/dailyschedule.Dailyschedule/updateDailySchedule',\r\n      request,\r\n      metadata || {},\r\n      methodInfo_Dailyschedule_updateDailySchedule);\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\r\n *   !proto.dailyschedule.DeleteDailyScheduleReq,\r\n *   !proto.dailyschedule.DailyScheduleRes>}\r\n */\r\nconst methodInfo_Dailyschedule_deleteDailySchedule = new grpc.web.AbstractClientBase.MethodInfo(\r\n  proto.dailyschedule.DailyScheduleRes,\r\n  /** @param {!proto.dailyschedule.DeleteDailyScheduleReq} request */\r\n  function(request) {\r\n    return request.serializeBinary();\r\n  },\r\n  proto.dailyschedule.DailyScheduleRes.deserializeBinary\r\n);\r\n\r\n\r\n/**\r\n * @param {!proto.dailyschedule.DeleteDailyScheduleReq} request The\r\n *     request proto\r\n * @param {?Object<string, string>} metadata User defined\r\n *     call metadata\r\n * @param {function(?grpc.web.Error, ?proto.dailyschedule.DailyScheduleRes)}\r\n *     callback The callback function(error, response)\r\n * @return {!grpc.web.ClientReadableStream<!proto.dailyschedule.DailyScheduleRes>|undefined}\r\n *     The XHR Node Readable Stream\r\n */\r\nproto.dailyschedule.DailyscheduleClient.prototype.deleteDailySchedule =\r\n    function(request, metadata, callback) {\r\n  return this.client_.rpcCall(this.hostname_ +\r\n      '/dailyschedule.Dailyschedule/deleteDailySchedule',\r\n      request,\r\n      metadata || {},\r\n      methodInfo_Dailyschedule_deleteDailySchedule,\r\n      callback);\r\n};\r\n\r\n\r\n/**\r\n * @param {!proto.dailyschedule.DeleteDailyScheduleReq} request The\r\n *     request proto\r\n * @param {?Object<string, string>} metadata User defined\r\n *     call metadata\r\n * @return {!Promise<!proto.dailyschedule.DailyScheduleRes>}\r\n *     A native promise that resolves to the response\r\n */\r\nproto.dailyschedule.DailyschedulePromiseClient.prototype.deleteDailySchedule =\r\n    function(request, metadata) {\r\n  return this.client_.unaryCall(this.hostname_ +\r\n      '/dailyschedule.Dailyschedule/deleteDailySchedule',\r\n      request,\r\n      metadata || {},\r\n      methodInfo_Dailyschedule_deleteDailySchedule);\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\r\n *   !proto.dailyschedule.GetAllDailyScheduleReq,\r\n *   !proto.dailyschedule.DailyScheduleRes>}\r\n */\r\nconst methodInfo_Dailyschedule_getAllDailySchedule = new grpc.web.AbstractClientBase.MethodInfo(\r\n  proto.dailyschedule.DailyScheduleRes,\r\n  /** @param {!proto.dailyschedule.GetAllDailyScheduleReq} request */\r\n  function(request) {\r\n    return request.serializeBinary();\r\n  },\r\n  proto.dailyschedule.DailyScheduleRes.deserializeBinary\r\n);\r\n\r\n\r\n/**\r\n * @param {!proto.dailyschedule.GetAllDailyScheduleReq} request The request proto\r\n * @param {?Object<string, string>} metadata User defined\r\n *     call metadata\r\n * @return {!grpc.web.ClientReadableStream<!proto.dailyschedule.DailyScheduleRes>}\r\n *     The XHR Node Readable Stream\r\n */\r\nproto.dailyschedule.DailyscheduleClient.prototype.getAllDailySchedule =\r\n    function(request, metadata) {\r\n  return this.client_.serverStreaming(this.hostname_ +\r\n      '/dailyschedule.Dailyschedule/getAllDailySchedule',\r\n      request,\r\n      metadata || {},\r\n      methodInfo_Dailyschedule_getAllDailySchedule);\r\n};\r\n\r\n\r\n/**\r\n * @param {!proto.dailyschedule.GetAllDailyScheduleReq} request The request proto\r\n * @param {?Object<string, string>} metadata User defined\r\n *     call metadata\r\n * @return {!grpc.web.ClientReadableStream<!proto.dailyschedule.DailyScheduleRes>}\r\n *     The XHR Node Readable Stream\r\n */\r\nproto.dailyschedule.DailyschedulePromiseClient.prototype.getAllDailySchedule =\r\n    function(request, metadata) {\r\n  return this.client_.serverStreaming(this.hostname_ +\r\n      '/dailyschedule.Dailyschedule/getAllDailySchedule',\r\n      request,\r\n      metadata || {},\r\n      methodInfo_Dailyschedule_getAllDailySchedule);\r\n};\r\n\r\n\r\nmodule.exports = proto.dailyschedule;\r\n\r\n","/**\r\n * @fileoverview\r\n * @enhanceable\r\n * @public\r\n */\r\n// GENERATED CODE -- DO NOT EDIT!\r\n/* eslint-disable */\r\nvar jspb = require('google-protobuf');\r\nvar goog = jspb;\r\nvar global = Function('return this')();\r\n\r\ngoog.exportSymbol('proto.dailyschedule.AddNewDailyScheduleReq', null, global);\r\ngoog.exportSymbol('proto.dailyschedule.DailyScheduleRes', null, global);\r\ngoog.exportSymbol('proto.dailyschedule.DeleteDailyScheduleReq', null, global);\r\ngoog.exportSymbol('proto.dailyschedule.GetAllDailyScheduleReq', null, global);\r\ngoog.exportSymbol('proto.dailyschedule.UpdateDailyScheduleReq', null, global);\r\n\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.dailyschedule.AddNewDailyScheduleReq, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  proto.dailyschedule.AddNewDailyScheduleReq.displayName = 'proto.dailyschedule.AddNewDailyScheduleReq';\r\n}\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto suitable for use in Soy templates.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n *     for transitional soy proto support: http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.dailyschedule.AddNewDailyScheduleReq.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n *     instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.dailyschedule.AddNewDailyScheduleReq} msg The msg instance to transform.\r\n * @return {!Object}\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    requesterid: msg.getRequesterid(),\r\n    projectid: msg.getProjectid(),\r\n    title: msg.getTitle(),\r\n    task: msg.getTask(),\r\n    time: msg.getTime(),\r\n    schedulestatus: msg.getSchedulestatus(),\r\n    cookie: msg.getCookie()\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.dailyschedule.AddNewDailyScheduleReq}\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.dailyschedule.AddNewDailyScheduleReq;\r\n  return proto.dailyschedule.AddNewDailyScheduleReq.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.dailyschedule.AddNewDailyScheduleReq} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.dailyschedule.AddNewDailyScheduleReq}\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setRequesterid(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setProjectid(value);\r\n      break;\r\n    case 3:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setTitle(value);\r\n      break;\r\n    case 4:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setTask(value);\r\n      break;\r\n    case 5:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setTime(value);\r\n      break;\r\n    case 6:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setSchedulestatus(value);\r\n      break;\r\n    case 8:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setCookie(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Class method variant: serializes the given message to binary data\r\n * (in protobuf wire format), writing to the given BinaryWriter.\r\n * @param {!proto.dailyschedule.AddNewDailyScheduleReq} message\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.serializeBinaryToWriter = function(message, writer) {\r\n  message.serializeBinaryToWriter(writer);\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  this.serializeBinaryToWriter(writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format),\r\n * writing to the given BinaryWriter.\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.serializeBinaryToWriter = function (writer) {\r\n  var f = undefined;\r\n  f = this.getRequesterid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = this.getProjectid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n  f = this.getTitle();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      3,\r\n      f\r\n    );\r\n  }\r\n  f = this.getTask();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      4,\r\n      f\r\n    );\r\n  }\r\n  f = this.getTime();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      5,\r\n      f\r\n    );\r\n  }\r\n  f = this.getSchedulestatus();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      6,\r\n      f\r\n    );\r\n  }\r\n  f = this.getCookie();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      8,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Creates a deep clone of this proto. No data is shared with the original.\r\n * @return {!proto.dailyschedule.AddNewDailyScheduleReq} The clone.\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.cloneMessage = function() {\r\n  return /** @type {!proto.dailyschedule.AddNewDailyScheduleReq} */ (jspb.Message.cloneMessage(this));\r\n};\r\n\r\n\r\n/**\r\n * optional string requesterId = 1;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.getRequesterid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.setRequesterid = function(value) {\r\n  jspb.Message.setField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string projectId = 2;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.getProjectid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.setProjectid = function(value) {\r\n  jspb.Message.setField(this, 2, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string title = 3;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.getTitle = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.setTitle = function(value) {\r\n  jspb.Message.setField(this, 3, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string task = 4;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.getTask = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.setTask = function(value) {\r\n  jspb.Message.setField(this, 4, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string time = 5;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.getTime = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.setTime = function(value) {\r\n  jspb.Message.setField(this, 5, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string scheduleStatus = 6;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.getSchedulestatus = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.setSchedulestatus = function(value) {\r\n  jspb.Message.setField(this, 6, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string cookie = 8;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.getCookie = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.AddNewDailyScheduleReq.prototype.setCookie = function(value) {\r\n  jspb.Message.setField(this, 8, value);\r\n};\r\n\r\n\r\n\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.dailyschedule.UpdateDailyScheduleReq, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  proto.dailyschedule.UpdateDailyScheduleReq.displayName = 'proto.dailyschedule.UpdateDailyScheduleReq';\r\n}\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto suitable for use in Soy templates.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n *     for transitional soy proto support: http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.dailyschedule.UpdateDailyScheduleReq.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n *     instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.dailyschedule.UpdateDailyScheduleReq} msg The msg instance to transform.\r\n * @return {!Object}\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    requesterid: msg.getRequesterid(),\r\n    projectid: msg.getProjectid(),\r\n    scheduleid: msg.getScheduleid(),\r\n    title: msg.getTitle(),\r\n    task: msg.getTask(),\r\n    time: msg.getTime(),\r\n    schedulestatus: msg.getSchedulestatus(),\r\n    cookie: msg.getCookie()\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.dailyschedule.UpdateDailyScheduleReq}\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.dailyschedule.UpdateDailyScheduleReq;\r\n  return proto.dailyschedule.UpdateDailyScheduleReq.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.dailyschedule.UpdateDailyScheduleReq} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.dailyschedule.UpdateDailyScheduleReq}\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setRequesterid(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setProjectid(value);\r\n      break;\r\n    case 3:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setScheduleid(value);\r\n      break;\r\n    case 4:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setTitle(value);\r\n      break;\r\n    case 5:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setTask(value);\r\n      break;\r\n    case 6:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setTime(value);\r\n      break;\r\n    case 7:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setSchedulestatus(value);\r\n      break;\r\n    case 8:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setCookie(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Class method variant: serializes the given message to binary data\r\n * (in protobuf wire format), writing to the given BinaryWriter.\r\n * @param {!proto.dailyschedule.UpdateDailyScheduleReq} message\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.serializeBinaryToWriter = function(message, writer) {\r\n  message.serializeBinaryToWriter(writer);\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  this.serializeBinaryToWriter(writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format),\r\n * writing to the given BinaryWriter.\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.serializeBinaryToWriter = function (writer) {\r\n  var f = undefined;\r\n  f = this.getRequesterid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = this.getProjectid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n  f = this.getScheduleid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      3,\r\n      f\r\n    );\r\n  }\r\n  f = this.getTitle();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      4,\r\n      f\r\n    );\r\n  }\r\n  f = this.getTask();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      5,\r\n      f\r\n    );\r\n  }\r\n  f = this.getTime();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      6,\r\n      f\r\n    );\r\n  }\r\n  f = this.getSchedulestatus();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      7,\r\n      f\r\n    );\r\n  }\r\n  f = this.getCookie();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      8,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Creates a deep clone of this proto. No data is shared with the original.\r\n * @return {!proto.dailyschedule.UpdateDailyScheduleReq} The clone.\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.cloneMessage = function() {\r\n  return /** @type {!proto.dailyschedule.UpdateDailyScheduleReq} */ (jspb.Message.cloneMessage(this));\r\n};\r\n\r\n\r\n/**\r\n * optional string requesterId = 1;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.getRequesterid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.setRequesterid = function(value) {\r\n  jspb.Message.setField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string projectId = 2;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.getProjectid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.setProjectid = function(value) {\r\n  jspb.Message.setField(this, 2, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string scheduleId = 3;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.getScheduleid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.setScheduleid = function(value) {\r\n  jspb.Message.setField(this, 3, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string title = 4;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.getTitle = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.setTitle = function(value) {\r\n  jspb.Message.setField(this, 4, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string task = 5;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.getTask = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.setTask = function(value) {\r\n  jspb.Message.setField(this, 5, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string time = 6;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.getTime = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.setTime = function(value) {\r\n  jspb.Message.setField(this, 6, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string scheduleStatus = 7;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.getSchedulestatus = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.setSchedulestatus = function(value) {\r\n  jspb.Message.setField(this, 7, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string cookie = 8;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.getCookie = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.UpdateDailyScheduleReq.prototype.setCookie = function(value) {\r\n  jspb.Message.setField(this, 8, value);\r\n};\r\n\r\n\r\n\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.dailyschedule.DeleteDailyScheduleReq = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.dailyschedule.DeleteDailyScheduleReq, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  proto.dailyschedule.DeleteDailyScheduleReq.displayName = 'proto.dailyschedule.DeleteDailyScheduleReq';\r\n}\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto suitable for use in Soy templates.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n *     for transitional soy proto support: http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.dailyschedule.DeleteDailyScheduleReq.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.dailyschedule.DeleteDailyScheduleReq.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n *     instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.dailyschedule.DeleteDailyScheduleReq} msg The msg instance to transform.\r\n * @return {!Object}\r\n */\r\nproto.dailyschedule.DeleteDailyScheduleReq.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    requesterid: msg.getRequesterid(),\r\n    projectid: msg.getProjectid(),\r\n    scheduleid: msg.getScheduleid(),\r\n    cookie: msg.getCookie()\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.dailyschedule.DeleteDailyScheduleReq}\r\n */\r\nproto.dailyschedule.DeleteDailyScheduleReq.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.dailyschedule.DeleteDailyScheduleReq;\r\n  return proto.dailyschedule.DeleteDailyScheduleReq.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.dailyschedule.DeleteDailyScheduleReq} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.dailyschedule.DeleteDailyScheduleReq}\r\n */\r\nproto.dailyschedule.DeleteDailyScheduleReq.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setRequesterid(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setProjectid(value);\r\n      break;\r\n    case 3:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setScheduleid(value);\r\n      break;\r\n    case 4:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setCookie(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Class method variant: serializes the given message to binary data\r\n * (in protobuf wire format), writing to the given BinaryWriter.\r\n * @param {!proto.dailyschedule.DeleteDailyScheduleReq} message\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.dailyschedule.DeleteDailyScheduleReq.serializeBinaryToWriter = function(message, writer) {\r\n  message.serializeBinaryToWriter(writer);\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.dailyschedule.DeleteDailyScheduleReq.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  this.serializeBinaryToWriter(writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format),\r\n * writing to the given BinaryWriter.\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.dailyschedule.DeleteDailyScheduleReq.prototype.serializeBinaryToWriter = function (writer) {\r\n  var f = undefined;\r\n  f = this.getRequesterid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = this.getProjectid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n  f = this.getScheduleid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      3,\r\n      f\r\n    );\r\n  }\r\n  f = this.getCookie();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      4,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Creates a deep clone of this proto. No data is shared with the original.\r\n * @return {!proto.dailyschedule.DeleteDailyScheduleReq} The clone.\r\n */\r\nproto.dailyschedule.DeleteDailyScheduleReq.prototype.cloneMessage = function() {\r\n  return /** @type {!proto.dailyschedule.DeleteDailyScheduleReq} */ (jspb.Message.cloneMessage(this));\r\n};\r\n\r\n\r\n/**\r\n * optional string requesterId = 1;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.DeleteDailyScheduleReq.prototype.getRequesterid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.DeleteDailyScheduleReq.prototype.setRequesterid = function(value) {\r\n  jspb.Message.setField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string projectId = 2;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.DeleteDailyScheduleReq.prototype.getProjectid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.DeleteDailyScheduleReq.prototype.setProjectid = function(value) {\r\n  jspb.Message.setField(this, 2, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string scheduleId = 3;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.DeleteDailyScheduleReq.prototype.getScheduleid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.DeleteDailyScheduleReq.prototype.setScheduleid = function(value) {\r\n  jspb.Message.setField(this, 3, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string cookie = 4;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.DeleteDailyScheduleReq.prototype.getCookie = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.DeleteDailyScheduleReq.prototype.setCookie = function(value) {\r\n  jspb.Message.setField(this, 4, value);\r\n};\r\n\r\n\r\n\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.dailyschedule.GetAllDailyScheduleReq = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.dailyschedule.GetAllDailyScheduleReq, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  proto.dailyschedule.GetAllDailyScheduleReq.displayName = 'proto.dailyschedule.GetAllDailyScheduleReq';\r\n}\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto suitable for use in Soy templates.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n *     for transitional soy proto support: http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.dailyschedule.GetAllDailyScheduleReq.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.dailyschedule.GetAllDailyScheduleReq.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n *     instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.dailyschedule.GetAllDailyScheduleReq} msg The msg instance to transform.\r\n * @return {!Object}\r\n */\r\nproto.dailyschedule.GetAllDailyScheduleReq.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    requesterid: msg.getRequesterid(),\r\n    projectid: msg.getProjectid(),\r\n    cookie: msg.getCookie()\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.dailyschedule.GetAllDailyScheduleReq}\r\n */\r\nproto.dailyschedule.GetAllDailyScheduleReq.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.dailyschedule.GetAllDailyScheduleReq;\r\n  return proto.dailyschedule.GetAllDailyScheduleReq.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.dailyschedule.GetAllDailyScheduleReq} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.dailyschedule.GetAllDailyScheduleReq}\r\n */\r\nproto.dailyschedule.GetAllDailyScheduleReq.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setRequesterid(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setProjectid(value);\r\n      break;\r\n    case 3:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setCookie(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Class method variant: serializes the given message to binary data\r\n * (in protobuf wire format), writing to the given BinaryWriter.\r\n * @param {!proto.dailyschedule.GetAllDailyScheduleReq} message\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.dailyschedule.GetAllDailyScheduleReq.serializeBinaryToWriter = function(message, writer) {\r\n  message.serializeBinaryToWriter(writer);\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.dailyschedule.GetAllDailyScheduleReq.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  this.serializeBinaryToWriter(writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format),\r\n * writing to the given BinaryWriter.\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.dailyschedule.GetAllDailyScheduleReq.prototype.serializeBinaryToWriter = function (writer) {\r\n  var f = undefined;\r\n  f = this.getRequesterid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = this.getProjectid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n  f = this.getCookie();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      3,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Creates a deep clone of this proto. No data is shared with the original.\r\n * @return {!proto.dailyschedule.GetAllDailyScheduleReq} The clone.\r\n */\r\nproto.dailyschedule.GetAllDailyScheduleReq.prototype.cloneMessage = function() {\r\n  return /** @type {!proto.dailyschedule.GetAllDailyScheduleReq} */ (jspb.Message.cloneMessage(this));\r\n};\r\n\r\n\r\n/**\r\n * optional string requesterId = 1;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.GetAllDailyScheduleReq.prototype.getRequesterid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.GetAllDailyScheduleReq.prototype.setRequesterid = function(value) {\r\n  jspb.Message.setField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string projectId = 2;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.GetAllDailyScheduleReq.prototype.getProjectid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.GetAllDailyScheduleReq.prototype.setProjectid = function(value) {\r\n  jspb.Message.setField(this, 2, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string cookie = 3;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.GetAllDailyScheduleReq.prototype.getCookie = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.GetAllDailyScheduleReq.prototype.setCookie = function(value) {\r\n  jspb.Message.setField(this, 3, value);\r\n};\r\n\r\n\r\n\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.dailyschedule.DailyScheduleRes = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.dailyschedule.DailyScheduleRes, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  proto.dailyschedule.DailyScheduleRes.displayName = 'proto.dailyschedule.DailyScheduleRes';\r\n}\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto suitable for use in Soy templates.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n *     for transitional soy proto support: http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.dailyschedule.DailyScheduleRes.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.dailyschedule.DailyScheduleRes.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n *     instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.dailyschedule.DailyScheduleRes} msg The msg instance to transform.\r\n * @return {!Object}\r\n */\r\nproto.dailyschedule.DailyScheduleRes.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    error: msg.getError(),\r\n    status: msg.getStatus(),\r\n    scheduleid: msg.getScheduleid(),\r\n    title: msg.getTitle(),\r\n    task: msg.getTask(),\r\n    time: msg.getTime(),\r\n    note: msg.getNote(),\r\n    schedulestatus: msg.getSchedulestatus()\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.dailyschedule.DailyScheduleRes}\r\n */\r\nproto.dailyschedule.DailyScheduleRes.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.dailyschedule.DailyScheduleRes;\r\n  return proto.dailyschedule.DailyScheduleRes.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.dailyschedule.DailyScheduleRes} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.dailyschedule.DailyScheduleRes}\r\n */\r\nproto.dailyschedule.DailyScheduleRes.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setError(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setStatus(value);\r\n      break;\r\n    case 3:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setScheduleid(value);\r\n      break;\r\n    case 4:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setTitle(value);\r\n      break;\r\n    case 5:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setTask(value);\r\n      break;\r\n    case 7:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setTime(value);\r\n      break;\r\n    case 8:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setNote(value);\r\n      break;\r\n    case 9:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setSchedulestatus(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Class method variant: serializes the given message to binary data\r\n * (in protobuf wire format), writing to the given BinaryWriter.\r\n * @param {!proto.dailyschedule.DailyScheduleRes} message\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.dailyschedule.DailyScheduleRes.serializeBinaryToWriter = function(message, writer) {\r\n  message.serializeBinaryToWriter(writer);\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.dailyschedule.DailyScheduleRes.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  this.serializeBinaryToWriter(writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format),\r\n * writing to the given BinaryWriter.\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.dailyschedule.DailyScheduleRes.prototype.serializeBinaryToWriter = function (writer) {\r\n  var f = undefined;\r\n  f = this.getError();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = this.getStatus();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n  f = this.getScheduleid();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      3,\r\n      f\r\n    );\r\n  }\r\n  f = this.getTitle();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      4,\r\n      f\r\n    );\r\n  }\r\n  f = this.getTask();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      5,\r\n      f\r\n    );\r\n  }\r\n  f = this.getTime();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      7,\r\n      f\r\n    );\r\n  }\r\n  f = this.getNote();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      8,\r\n      f\r\n    );\r\n  }\r\n  f = this.getSchedulestatus();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      9,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Creates a deep clone of this proto. No data is shared with the original.\r\n * @return {!proto.dailyschedule.DailyScheduleRes} The clone.\r\n */\r\nproto.dailyschedule.DailyScheduleRes.prototype.cloneMessage = function() {\r\n  return /** @type {!proto.dailyschedule.DailyScheduleRes} */ (jspb.Message.cloneMessage(this));\r\n};\r\n\r\n\r\n/**\r\n * optional string error = 1;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.DailyScheduleRes.prototype.getError = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.DailyScheduleRes.prototype.setError = function(value) {\r\n  jspb.Message.setField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string status = 2;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.DailyScheduleRes.prototype.getStatus = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.DailyScheduleRes.prototype.setStatus = function(value) {\r\n  jspb.Message.setField(this, 2, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string scheduleId = 3;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.DailyScheduleRes.prototype.getScheduleid = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.DailyScheduleRes.prototype.setScheduleid = function(value) {\r\n  jspb.Message.setField(this, 3, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string title = 4;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.DailyScheduleRes.prototype.getTitle = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.DailyScheduleRes.prototype.setTitle = function(value) {\r\n  jspb.Message.setField(this, 4, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string task = 5;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.DailyScheduleRes.prototype.getTask = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.DailyScheduleRes.prototype.setTask = function(value) {\r\n  jspb.Message.setField(this, 5, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string time = 7;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.DailyScheduleRes.prototype.getTime = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.DailyScheduleRes.prototype.setTime = function(value) {\r\n  jspb.Message.setField(this, 7, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string note = 8;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.DailyScheduleRes.prototype.getNote = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.DailyScheduleRes.prototype.setNote = function(value) {\r\n  jspb.Message.setField(this, 8, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string scheduleStatus = 9;\r\n * @return {string}\r\n */\r\nproto.dailyschedule.DailyScheduleRes.prototype.getSchedulestatus = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.dailyschedule.DailyScheduleRes.prototype.setSchedulestatus = function(value) {\r\n  jspb.Message.setField(this, 9, value);\r\n};\r\n\r\n\r\ngoog.object.extend(exports, proto.dailyschedule);\r\n"],"sourceRoot":""}