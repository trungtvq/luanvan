{"version":3,"sources":["../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardHeader.js","gRPC/userstory/userstory_grpc_web_pb.js","gRPC/userstory/userstory_pb.js","views/Workspace/Po/Cover/Cover.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","className","a","string","cssModule","object","innerRef","oneOfType","func","CardBody","props","Tag","attributes","Object","classes","createElement","ref","defaultProps","__webpack_exports__","CardHeader","grpc","web","require","proto","userstory","UserStoryClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","credentials_","options_","UserStoryPromiseClient","methodInfo_UserStory_addNewUserStory","AbstractClientBase","MethodInfo","UserStoryRes","request","serializeBinary","deserializeBinary","prototype","addNewUserStory","metadata","callback","rpcCall","unaryCall","methodInfo_UserStory_updateUserStory","updateUserStory","methodInfo_UserStory_deleteUserStory","deleteUserStory","methodInfo_UserStory_sendToProductBacklog","sendToProductBacklog","methodInfo_UserStory_getAllUserStory","GetAllUserStoryRes","getAllUserStory","serverStreaming","module","exports","jspb","goog","global","Function","exportSymbol","SendToProductBacklogReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","id","getId","priority","getPriority","estimation","getEstimation","statusbacklog","getStatusbacklog","accesstoken","getAccesstoken","sprint","getSprint","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setRequesterid","setProjectid","setId","setPriority","setEstimation","setStatusbacklog","setAccesstoken","setSprint","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","length","writeString","cloneMessage","getFieldProto3","setField","AddNewUserStoryReq","role","getRole","want","getWant","so","getSo","name","getName","setRole","setWant","setSo","setName","status","getStatus","setStatus","UpdateUserStoryReq","userstoryid","getUserstoryid","setUserstoryid","DeleteUserStoryReq","GetAllUserStoryReq","extend","productbacklog","Cover","_this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onTextboxChangePriorityUserstory","event","title","tmpdata","state","dataUserStory","map","p","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","target","setState","prevState","onTextboxChangeEstimationUserstory","onTextboxChangeSprintUserstory","onTextboxChangePriorityProductBacklog","dataProductBacklog","onTextboxChangeEstimationProductBacklog","onTextboxChangeSprintProductBacklog","loadUserstory","userstoryService","getFromStorage","response","that","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","on","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","as","code","console","log","end","loadProductbacklog","productbacklogService","ProductBacklogClient","GetAllProductBacklogReq","getAllProductBacklog","getProductbacklogid","getTitle","getSprintid","toggleActionStatus","modalActionStatus","handleStoryToBacklog","item","notify","err","success","filter","e","priorityUserstory","estimationUserstory","sprintUserstory","failed","handleBacklogToStory","SendToSprintBacklogReq","setProductbacklogid","sendToUserStory","toastId","toast","autoClose","update","render","type","TYPE","SUCCESS","ERROR","actionStatus","priorityProductBacklog","estimationProductBacklog","sprintProductBacklog","react__WEBPACK_IMPORTED_MODULE_9___default","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","size","isOpen","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","class","key","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","htmlFor","reactstrap__WEBPACK_IMPORTED_MODULE_18__","rows","onChange","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_19__","color","align","onClick","Component"],"mappings":"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","file":"static/js/34.3f51eaf3.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","/**\n * @fileoverview gRPC-Web generated client stub for userstory\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.userstory = require('./userstory_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.userstory.UserStoryClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.userstory.UserStoryPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.AddNewUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_addNewUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.AddNewUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.AddNewUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.addNewUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/addNewUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_addNewUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.AddNewUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.addNewUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/addNewUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_addNewUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.UpdateUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_updateUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.UpdateUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.UpdateUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.updateUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/updateUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_updateUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.UpdateUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.updateUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/updateUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_updateUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.DeleteUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_deleteUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.DeleteUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.DeleteUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.deleteUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/deleteUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_deleteUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.DeleteUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.deleteUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/deleteUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_deleteUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.SendToProductBacklogReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_sendToProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.SendToProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.SendToProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.sendToProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/sendToProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_UserStory_sendToProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.SendToProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.sendToProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/sendToProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_UserStory_sendToProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.GetAllUserStoryReq,\n *   !proto.userstory.GetAllUserStoryRes>}\n */\nconst methodInfo_UserStory_getAllUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.GetAllUserStoryRes,\n  /** @param {!proto.userstory.GetAllUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.GetAllUserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.GetAllUserStoryReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.GetAllUserStoryRes>}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.getAllUserStory =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/userstory.UserStory/getAllUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_getAllUserStory);\n};\n\n\n/**\n * @param {!proto.userstory.GetAllUserStoryReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.GetAllUserStoryRes>}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryPromiseClient.prototype.getAllUserStory =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/userstory.UserStory/getAllUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_getAllUserStory);\n};\n\n\nmodule.exports = proto.userstory;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.userstory.AddNewUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.DeleteUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.GetAllUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.GetAllUserStoryRes', null, global);\ngoog.exportSymbol('proto.userstory.SendToProductBacklogReq', null, global);\ngoog.exportSymbol('proto.userstory.UpdateUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.UserStoryRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.SendToProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.SendToProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.SendToProductBacklogReq.displayName = 'proto.userstory.SendToProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.SendToProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.SendToProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.SendToProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.SendToProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    id: msg.getId(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    statusbacklog: msg.getStatusbacklog(),\n    accesstoken: msg.getAccesstoken(),\n    sprint: msg.getSprint()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.SendToProductBacklogReq}\n */\nproto.userstory.SendToProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.SendToProductBacklogReq;\n  return proto.userstory.SendToProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.SendToProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.SendToProductBacklogReq}\n */\nproto.userstory.SendToProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.SendToProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.SendToProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.SendToProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.SendToProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getSprint();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.SendToProductBacklogReq} The clone.\n */\nproto.userstory.SendToProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.SendToProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string id = 3;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setId = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string priority = 4;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string estimation = 5;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 6;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string accessToken = 7;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string sprint = 8;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getSprint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setSprint = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.AddNewUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.AddNewUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.AddNewUserStoryReq.displayName = 'proto.userstory.AddNewUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.AddNewUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.AddNewUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.AddNewUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.AddNewUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    accesstoken: msg.getAccesstoken(),\n    name: msg.getName()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.AddNewUserStoryReq}\n */\nproto.userstory.AddNewUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.AddNewUserStoryReq;\n  return proto.userstory.AddNewUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.AddNewUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.AddNewUserStoryReq}\n */\nproto.userstory.AddNewUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.AddNewUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.AddNewUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.AddNewUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.AddNewUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.AddNewUserStoryReq} The clone.\n */\nproto.userstory.AddNewUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.AddNewUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string accessToken = 6;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string name = 7;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.UserStoryRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.UserStoryRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.UserStoryRes.displayName = 'proto.userstory.UserStoryRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.UserStoryRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.UserStoryRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.UserStoryRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.UserStoryRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    id: msg.getId()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.UserStoryRes}\n */\nproto.userstory.UserStoryRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.UserStoryRes;\n  return proto.userstory.UserStoryRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.UserStoryRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.UserStoryRes}\n */\nproto.userstory.UserStoryRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.UserStoryRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UserStoryRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.UserStoryRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UserStoryRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.UserStoryRes} The clone.\n */\nproto.userstory.UserStoryRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.UserStoryRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.userstory.UserStoryRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UserStoryRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string id = 2;\n * @return {string}\n */\nproto.userstory.UserStoryRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UserStoryRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.UpdateUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.UpdateUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.UpdateUserStoryReq.displayName = 'proto.userstory.UpdateUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.UpdateUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.UpdateUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.UpdateUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.UpdateUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    userstoryid: msg.getUserstoryid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.UpdateUserStoryReq}\n */\nproto.userstory.UpdateUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.UpdateUserStoryReq;\n  return proto.userstory.UpdateUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.UpdateUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.UpdateUserStoryReq}\n */\nproto.userstory.UpdateUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserstoryid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.UpdateUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UpdateUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.UpdateUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UpdateUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getUserstoryid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.UpdateUserStoryReq} The clone.\n */\nproto.userstory.UpdateUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.UpdateUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string userStoryId = 3;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getUserstoryid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setUserstoryid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string role = 4;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string want = 5;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string so = 6;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string accessToken = 7;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.DeleteUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.DeleteUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.DeleteUserStoryReq.displayName = 'proto.userstory.DeleteUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.DeleteUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.DeleteUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.DeleteUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.DeleteUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    userstoryid: msg.getUserstoryid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.DeleteUserStoryReq}\n */\nproto.userstory.DeleteUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.DeleteUserStoryReq;\n  return proto.userstory.DeleteUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.DeleteUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.DeleteUserStoryReq}\n */\nproto.userstory.DeleteUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserstoryid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.DeleteUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.DeleteUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.DeleteUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.DeleteUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getUserstoryid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.DeleteUserStoryReq} The clone.\n */\nproto.userstory.DeleteUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.DeleteUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string userStoryId = 3;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getUserstoryid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setUserstoryid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.GetAllUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.GetAllUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.GetAllUserStoryReq.displayName = 'proto.userstory.GetAllUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.GetAllUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.GetAllUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.GetAllUserStoryReq}\n */\nproto.userstory.GetAllUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.GetAllUserStoryReq;\n  return proto.userstory.GetAllUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.GetAllUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.GetAllUserStoryReq}\n */\nproto.userstory.GetAllUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.GetAllUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.GetAllUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.GetAllUserStoryReq} The clone.\n */\nproto.userstory.GetAllUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.GetAllUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.GetAllUserStoryRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.GetAllUserStoryRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.GetAllUserStoryRes.displayName = 'proto.userstory.GetAllUserStoryRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.GetAllUserStoryRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.GetAllUserStoryRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    status: msg.getStatus(),\n    id: msg.getId(),\n    name: msg.getName()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.GetAllUserStoryRes}\n */\nproto.userstory.GetAllUserStoryRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.GetAllUserStoryRes;\n  return proto.userstory.GetAllUserStoryRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.GetAllUserStoryRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.GetAllUserStoryRes}\n */\nproto.userstory.GetAllUserStoryRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.GetAllUserStoryRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.GetAllUserStoryRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.GetAllUserStoryRes} The clone.\n */\nproto.userstory.GetAllUserStoryRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.GetAllUserStoryRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string role = 1;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string want = 2;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string so = 3;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string status = 4;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string id = 5;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string name = 6;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setName = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto.userstory);\n","import {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../../../../service/storage'\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Row,\r\n  Table,\r\n  Pagination,\r\n  PaginationItem,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Progress,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  PaginationLink,\r\n} from 'reactstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom';\r\nimport cookie from 'react-cookies';\r\nconst proto = {};\r\nproto.userstory = require('../../../../gRPC/userstory/userstory_grpc_web_pb');\r\nproto.productbacklog = require('../../../../gRPC/productbacklog/productbacklog_grpc_web_pb');\r\n\r\nclass Cover extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataUserStory: [],\r\n      dataProductBacklog: [],\r\n      actionStatus: '',    //success or fail when action handleSave\r\n      modalActionStatus: false,\r\n\r\n      priorityUserstory: '',\r\n      estimationUserstory: '',\r\n      sprintUserstory: '',\r\n\r\n      priorityProductBacklog: '',\r\n      estimationProductBacklog: '',\r\n      sprintProductBacklog: '',\r\n\r\n      title: '',\r\n    }\r\n  };\r\n  //userstory\r\n  onTextboxChangePriorityUserstory = (event, title) => {\r\n    const tmpdata = this.state.dataUserStory.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, priority: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataUserStory: tmpdata,\r\n    }));\r\n  }\r\n  onTextboxChangeEstimationUserstory = (event, title) => {\r\n    const tmpdata = this.state.dataUserStory.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, estimation: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataUserStory: tmpdata,\r\n    }));\r\n  }\r\n  onTextboxChangeSprintUserstory = (event, title) => {\r\n    const tmpdata = this.state.dataUserStory.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, sprint: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataUserStory: tmpdata,\r\n    }));\r\n  }\r\n  //ProductBacklog\r\n  onTextboxChangePriorityProductBacklog = (event, title) => {\r\n    const tmpdata = this.state.dataProductBacklog.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, priority: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataProductBacklog: tmpdata,\r\n\r\n    }));\r\n  }\r\n  onTextboxChangeEstimationProductBacklog = (event, title) => {\r\n    const tmpdata = this.state.dataProductBacklog.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, estimation: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataProductBacklog: tmpdata,\r\n\r\n    }));\r\n  }\r\n  onTextboxChangeSprintProductBacklog = (event, title) => {\r\n    const tmpdata = this.state.dataProductBacklog.map(p =>\r\n      p.title == title\r\n        ? {\r\n          ...p, sprint: event.target.value\r\n        }\r\n        : p\r\n    );\r\n    this.setState(prevState => ({\r\n      dataProductBacklog: tmpdata,\r\n\r\n    }));\r\n  }\r\n\r\n  loadUserstory = () => {\r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    var GetAllUserStoryReq = new proto.userstory.GetAllUserStoryReq();\r\n    GetAllUserStoryReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllUserStoryReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllUserStoryReq.setProjectid(getFromStorage(\"currentProject\"));\r\n\r\n    var response = userstoryService.getAllUserStory(GetAllUserStoryReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.setState(prevState => ({\r\n          dataUserStory: [...prevState.dataUserStory,\r\n          {\r\n            id: response.getId(),\r\n            title: response.getName(),\r\n            as: response.getRole(),\r\n            want: response.getWant(),\r\n            so: response.getSo()\r\n          }]\r\n        }));\r\n\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n  }\r\n\r\n  loadProductbacklog = () => {\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n    var GetAllProductBacklogReq = new proto.productbacklog.GetAllProductBacklogReq();\r\n    GetAllProductBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllProductBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllProductBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    let metadata = {}\r\n    var response = productbacklogService.getAllProductBacklog(GetAllProductBacklogReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.setState(prevState => ({\r\n          dataProductBacklog: [...prevState.dataProductBacklog,\r\n          {\r\n            id: response.getProductbacklogid(),\r\n            title: response.getTitle(),\r\n            as: response.getRole(),\r\n            want: response.getWant(),\r\n            so: response.getSo(),\r\n            priority: response.getPriority(),\r\n            estimation: response.getEstimation(),\r\n            sprint: response.getSprintid(),\r\n            status: response.getStatusbacklog()\r\n          }]\r\n        }));\r\n\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadUserstory();\r\n    this.loadProductbacklog();\r\n  }\r\n  toggleActionStatus = () => {\r\n    this.setState(prevState => ({\r\n      modalActionStatus: !prevState.modalActionStatus\r\n    }));\r\n  }\r\n\r\n\r\n  handleStoryToBacklog = (item) => {\r\n    console.log(\"toBacklog\")\r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    this.notify();\r\n    let that = this\r\n    var SendToProductBacklogReq = new proto.userstory.SendToProductBacklogReq();\r\n    SendToProductBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    SendToProductBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    SendToProductBacklogReq.setId(item.id);\r\n    SendToProductBacklogReq.setPriority(item.priority);\r\n    SendToProductBacklogReq.setEstimation(item.estimation);\r\n    SendToProductBacklogReq.setStatusbacklog(item.status);\r\n    SendToProductBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    SendToProductBacklogReq.setSprint(item.sprint);\r\n\r\n    userstoryService.sendToProductBacklog(SendToProductBacklogReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          that.success();\r\n          this.setState(prevState => ({\r\n            dataUserStory: [...prevState.dataUserStory.filter(function (e) { return e.id != item.id; })],\r\n            dataProductBacklog: [...prevState.dataProductBacklog, { id: item.id, title: item.title, as: item.as, want: item.want, so: item.so, priority: item.priority, estimation: item.estimation, sprint: item.sprint }]\r\n          }));\r\n          this.setState({\r\n            priorityUserstory: '',\r\n            estimationUserstory: '',\r\n            sprintUserstory: '',\r\n          });\r\n        \r\n        } else {\r\n          that.failed();\r\n\r\n        }\r\n      }\r\n    });\r\n  \r\n\r\n  }\r\n  handleBacklogToStory = (item) => {\r\n    console.log(\"to US\")\r\n    this.notify();\r\n    let that=this;\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    var SendToSprintBacklogReq = new proto.productbacklog.SendToSprintBacklogReq();\r\n    SendToSprintBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    SendToSprintBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    SendToSprintBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    SendToSprintBacklogReq.setProductbacklogid(item.id);\r\n    productbacklogService.sendToUserStory(SendToSprintBacklogReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          this.success();\r\n          this.setState(prevState => ({\r\n            dataProductBacklog:\r\n              [...prevState.dataProductBacklog.filter(function (e) { return e.id != item.id; })],\r\n            dataUserStory:\r\n              [...prevState.dataUserStory,\r\n              {\r\n                id: item.id,\r\n                title: item.title,\r\n                as: item.as,\r\n                want: item.want,\r\n                so: item.so,\r\n                priority: '',\r\n                estimation: '', sprint: ''\r\n              }]\r\n          })); \r\n         \r\n        \r\n        } else {\r\n         that.failed();\r\n\r\n        }\r\n      }\r\n    });\r\n  };\r\n  toastId = null;\r\n  notify = () => this.toastId = toast(\"Processing... please wait...\", { autoClose: false });\r\n  success = () => toast.update(this.toastId, { render: \"Success\", type: toast.TYPE.SUCCESS, autoClose: 3000 });\r\n  failed = () => toast.update(this.toastId, { render: \"Failed\", type: toast.TYPE.ERROR, autoClose: 3000 });\r\n  render() {\r\n    let that = this;\r\n    return (\r\n      <Row>\r\n        <Modal size=\"sm\" isOpen={that.state.modalActionStatus} toggle={that.toggleActionStatus} className={that.props.className}>\r\n          <ModalBody>\r\n            <center><h4>{that.state.actionStatus}</h4></center>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Col>\r\n          <Row>\r\n            <Col>\r\n              <div class=\"card border-primary mb-3\">\r\n                <div class=\"card-header bg-primary\">USER STORY</div>\r\n                <div class=\"card-body\">\r\n                  {this.state.dataUserStory.map(function (item, key) {\r\n                    return (\r\n                      <Card>\r\n                        <CardHeader>\r\n                          <i className=\"\"></i><strong>As: {item.as}</strong>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                          <h6>I want: {item.want}</h6>\r\n                          <h6>So that:  {item.so}</h6>\r\n                          <div class=\"row\">\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Label htmlFor=\"text-input\">Priority</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-4 col-md-4 col-sm-4\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.priority} onChange={e => { that.onTextboxChangePriorityUserstory(e, item.title) }} />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Label htmlFor=\"text-input\">Estimation</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-4 col-md-4 col-sm-4\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" placeholder=\"hour\" rows=\"9\" value={item.estimation} onChange={e => { that.onTextboxChangeEstimationUserstory(e, item.title) }} />\r\n                            </div>\r\n\r\n\r\n\r\n                            {/* <div class=\"col col-lg-1 col-md-1 col-sm-1\">\r\n                              <Label htmlFor=\"text-input\">Sprint</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.sprint} onChange={e => { that.onTextboxChangeSprintUserstory(e, item.title) }} />\r\n                            </div> */}\r\n                          </div>\r\n                          <Button size=\"sm\" color=\"success\" align=\"center\" onClick={() => { that.handleStoryToBacklog(item) }}><i class=\"fa fa-arrow-right\"></i></Button>\r\n                        </CardBody>\r\n                      </Card>\r\n                    )\r\n                  })}\r\n\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col>\r\n              <div class=\"card border-primary mb-3\">\r\n                <div class=\"card-header bg-primary\">\r\n                  PRODUCT BACKLOG\r\n                  </div>\r\n                <div class=\"card-body\">\r\n                  {this.state.dataProductBacklog.map(function (item, key) {\r\n                    return (\r\n                      <Card>\r\n                        <CardHeader>\r\n                          <i className=\"\"></i><strong>As {item.as}</strong>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                          <h6>I want :  {item.want}</h6>\r\n                          <h6> So that:   {item.so}</h6>\r\n\r\n                          <div class=\"row\">\r\n\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Label htmlFor=\"text-input\">Priority</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-4 col-md-4 col-sm-4\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.priority} onChange={e => { that.onTextboxChangePriorityProductBacklog(e, item.title) }} />\r\n                            </div>\r\n\r\n\r\n                            <div class=\"col col-lg-2 col-md-2 col-sm-2\">\r\n                              <Label htmlFor=\"text-input\">Estimation</Label>\r\n                            </div>\r\n                            <div class=\"col col-lg-4 col-md-4 col-sm-4\">\r\n                              <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={item.estimation} onChange={e => { that.onTextboxChangeEstimationProductBacklog(e, item.title) }} />\r\n                            </div>\r\n\r\n\r\n                           \r\n                          </div>\r\n                          <Button size=\"sm\" color=\"success\" align=\"center\" onClick={() => { that.handleBacklogToStory(item) }}><i class=\"fa fa-arrow-left\"></i></Button>\r\n                        </CardBody>\r\n                      </Card>\r\n                    )\r\n                  })}\r\n\r\n\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cover;\r\n"],"sourceRoot":""}