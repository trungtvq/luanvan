{"version":3,"sources":["../node_modules/lodash.isobject/index.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Button.js","../node_modules/reactstrap/es/Input.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","gRPC/mytask/mytask_grpc_web_pb.js","gRPC/mytask/mytask_pb.js","views/Workspace/Member/Task/MyTask/MyTask.js"],"names":["module","exports","value","type","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","noGutters","a","bool","className","string","cssModule","object","form","Row","props","Tag","attributes","Object","classes","createElement","defaultProps","__webpack_exports__","inverse","color","block","body","outline","innerRef","oneOfType","func","Card","ref","lodash_isobject__WEBPACK_IMPORTED_MODULE_2__","lodash_isobject__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","stringOrNumberProp","number","columnProps","shape","size","push","pull","order","offset","xs","sm","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Col","colClasses","forEach","i","columnProp","_classNames","colSizeInterfix","colClass","_colClass","length","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","prop_types__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_5___default","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","_utils__WEBPACK_IMPORTED_MODULE_7__","active","aria-label","disabled","onClick","children","node","close","Button","_React$Component","_this","call","this","bind","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","aria-hidden","btnOutlineColor","href","defaultAriaLabel","undefined","Component","bsSize","state","valid","invalid","static","plaintext","addon","Input","getRef","focus","staticInput","checkInput","indexOf","isNotaNumber","RegExp","formControlClass","test","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","Symbol","iterator","toString","from","_iterableToArray","TypeError","_nonIterableSpread","d","grpc","web","require","proto","mytask","MytaskClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","MytaskPromiseClient","methodInfo_Mytask_getAllMyTask","AbstractClientBase","MethodInfo","GetAllMyTaskRes","request","serializeBinary","deserializeBinary","getAllMyTask","metadata","serverStreaming","methodInfo_Mytask_commentMyTask","MyTaskRes","commentMyTask","callback","rpcCall","unaryCall","methodInfo_Mytask_updateMyTask","updateMyTask","jspb","goog","global","Function","exportSymbol","MyTaskReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","teamid","getTeamid","accesstoken","getAccesstoken","taskid","getTaskid","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","setRequesterid","setProjectid","setTeamid","setAccesstoken","setTaskid","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","writeString","cloneMessage","getFieldProto3","setField","CommentMyTaskReq","getMytask","comment","getComment","readMessage","setMytask","setComment","writeMessage","getWrapperField","setWrapperField","clearMytask","hasMytask","getField","UpdateMyTaskReq","statustask","getStatustask","setStatustask","status","getStatus","setStatus","GetAllMyTaskReq","username","getUsername","setUsername","teamtaskid","getTeamtaskid","title","getTitle","description","getDescription","priority","getPriority","start","getStart","deadline","getDeadline","review","getReview","point","getPoint","setTeamtaskid","setTitle","setDescription","setPriority","setStart","setDeadline","setReview","setPoint","extend","MyTask","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","toggle","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","collapse","fadeIn","selected","data","setState","mytaskService","getFromStorage","response","that","end","on","split","parseInt","prevState","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","id","code","console","log","react__WEBPACK_IMPORTED_MODULE_7___default","_service_chat__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","name","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_12__","class","reactstrap__WEBPACK_IMPORTED_MODULE_13__","map","item","key"],"mappings":"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","file":"static/js/24.81df4927.chunk.js","sourcesContent":["/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport isobject from 'lodash.isobject';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  push: deprecated(stringOrNumberProp, 'Please use the prop \"order\"'),\n  pull: deprecated(stringOrNumberProp, 'Please use the prop \"order\"'),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isobject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\n/* eslint react/prefer-stateless-function: 0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  bsSize: PropTypes.string,\n  state: deprecated(PropTypes.string, 'Please use the props \"valid\" and \"invalid\" to indicate the state.'),\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  static: deprecated(PropTypes.bool, 'Please use the prop \"plaintext\"'),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        state = _this$props.state,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        staticInput = _this$props.static,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"state\", \"valid\", \"invalid\", \"tag\", \"addon\", \"static\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext || staticInput) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (state && typeof valid === 'undefined' && typeof invalid === 'undefined') {\n      if (state === 'danger') {\n        invalid = true;\n      } else if (state === 'success') {\n        valid = true;\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || staticInput || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","/**\n * @fileoverview gRPC-Web generated client stub for mytask\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.mytask = require('./mytask_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.mytask.MytaskClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.mytask.MytaskPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.mytask.GetAllMyTaskReq,\n *   !proto.mytask.GetAllMyTaskRes>}\n */\nconst methodInfo_Mytask_getAllMyTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.mytask.GetAllMyTaskRes,\n  /** @param {!proto.mytask.GetAllMyTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.mytask.GetAllMyTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.mytask.GetAllMyTaskReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.mytask.GetAllMyTaskRes>}\n *     The XHR Node Readable Stream\n */\nproto.mytask.MytaskClient.prototype.getAllMyTask =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/mytask.Mytask/getAllMyTask',\n      request,\n      metadata || {},\n      methodInfo_Mytask_getAllMyTask);\n};\n\n\n/**\n * @param {!proto.mytask.GetAllMyTaskReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.mytask.GetAllMyTaskRes>}\n *     The XHR Node Readable Stream\n */\nproto.mytask.MytaskPromiseClient.prototype.getAllMyTask =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/mytask.Mytask/getAllMyTask',\n      request,\n      metadata || {},\n      methodInfo_Mytask_getAllMyTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.mytask.CommentMyTaskReq,\n *   !proto.mytask.MyTaskRes>}\n */\nconst methodInfo_Mytask_commentMyTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.mytask.MyTaskRes,\n  /** @param {!proto.mytask.CommentMyTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.mytask.MyTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.mytask.CommentMyTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.mytask.MyTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.mytask.MyTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.mytask.MytaskClient.prototype.commentMyTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/mytask.Mytask/commentMyTask',\n      request,\n      metadata || {},\n      methodInfo_Mytask_commentMyTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.mytask.CommentMyTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.mytask.MyTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.mytask.MytaskPromiseClient.prototype.commentMyTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/mytask.Mytask/commentMyTask',\n      request,\n      metadata || {},\n      methodInfo_Mytask_commentMyTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.mytask.UpdateMyTaskReq,\n *   !proto.mytask.MyTaskRes>}\n */\nconst methodInfo_Mytask_updateMyTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.mytask.MyTaskRes,\n  /** @param {!proto.mytask.UpdateMyTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.mytask.MyTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.mytask.UpdateMyTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.mytask.MyTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.mytask.MyTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.mytask.MytaskClient.prototype.updateMyTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/mytask.Mytask/updateMyTask',\n      request,\n      metadata || {},\n      methodInfo_Mytask_updateMyTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.mytask.UpdateMyTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.mytask.MyTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.mytask.MytaskPromiseClient.prototype.updateMyTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/mytask.Mytask/updateMyTask',\n      request,\n      metadata || {},\n      methodInfo_Mytask_updateMyTask);\n};\n\n\nmodule.exports = proto.mytask;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.mytask.CommentMyTaskReq', null, global);\ngoog.exportSymbol('proto.mytask.GetAllMyTaskReq', null, global);\ngoog.exportSymbol('proto.mytask.GetAllMyTaskRes', null, global);\ngoog.exportSymbol('proto.mytask.MyTaskReq', null, global);\ngoog.exportSymbol('proto.mytask.MyTaskRes', null, global);\ngoog.exportSymbol('proto.mytask.UpdateMyTaskReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.mytask.MyTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.mytask.MyTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.mytask.MyTaskReq.displayName = 'proto.mytask.MyTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.mytask.MyTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.mytask.MyTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.mytask.MyTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.mytask.MyTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamid: msg.getTeamid(),\n    accesstoken: msg.getAccesstoken(),\n    taskid: msg.getTaskid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.mytask.MyTaskReq}\n */\nproto.mytask.MyTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.mytask.MyTaskReq;\n  return proto.mytask.MyTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.mytask.MyTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.mytask.MyTaskReq}\n */\nproto.mytask.MyTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTaskid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.mytask.MyTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.MyTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.mytask.MyTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.MyTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getTaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.mytask.MyTaskReq} The clone.\n */\nproto.mytask.MyTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.mytask.MyTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.mytask.MyTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.MyTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.mytask.MyTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.MyTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamId = 4;\n * @return {string}\n */\nproto.mytask.MyTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.MyTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.mytask.MyTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.MyTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string taskId = 5;\n * @return {string}\n */\nproto.mytask.MyTaskReq.prototype.getTaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.MyTaskReq.prototype.setTaskid = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.mytask.CommentMyTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.mytask.CommentMyTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.mytask.CommentMyTaskReq.displayName = 'proto.mytask.CommentMyTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.mytask.CommentMyTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.mytask.CommentMyTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.mytask.CommentMyTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.mytask.CommentMyTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    mytask: (f = msg.getMytask()) && proto.mytask.MyTaskReq.toObject(includeInstance, f),\n    comment: msg.getComment()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.mytask.CommentMyTaskReq}\n */\nproto.mytask.CommentMyTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.mytask.CommentMyTaskReq;\n  return proto.mytask.CommentMyTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.mytask.CommentMyTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.mytask.CommentMyTaskReq}\n */\nproto.mytask.CommentMyTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.mytask.MyTaskReq;\n      reader.readMessage(value,proto.mytask.MyTaskReq.deserializeBinaryFromReader);\n      msg.setMytask(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setComment(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.mytask.CommentMyTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.CommentMyTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.mytask.CommentMyTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.CommentMyTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getMytask();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.mytask.MyTaskReq.serializeBinaryToWriter\n    );\n  }\n  f = this.getComment();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.mytask.CommentMyTaskReq} The clone.\n */\nproto.mytask.CommentMyTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.mytask.CommentMyTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional MyTaskReq mytask = 1;\n * @return {proto.mytask.MyTaskReq}\n */\nproto.mytask.CommentMyTaskReq.prototype.getMytask = function() {\n  return /** @type{proto.mytask.MyTaskReq} */ (\n    jspb.Message.getWrapperField(this, proto.mytask.MyTaskReq, 1));\n};\n\n\n/** @param {proto.mytask.MyTaskReq|undefined} value  */\nproto.mytask.CommentMyTaskReq.prototype.setMytask = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.mytask.CommentMyTaskReq.prototype.clearMytask = function() {\n  this.setMytask(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return{!boolean}\n */\nproto.mytask.CommentMyTaskReq.prototype.hasMytask = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string comment = 2;\n * @return {string}\n */\nproto.mytask.CommentMyTaskReq.prototype.getComment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.CommentMyTaskReq.prototype.setComment = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.mytask.UpdateMyTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.mytask.UpdateMyTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.mytask.UpdateMyTaskReq.displayName = 'proto.mytask.UpdateMyTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.mytask.UpdateMyTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.mytask.UpdateMyTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.mytask.UpdateMyTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.mytask.UpdateMyTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamid: msg.getTeamid(),\n    accesstoken: msg.getAccesstoken(),\n    statustask: msg.getStatustask()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.mytask.UpdateMyTaskReq}\n */\nproto.mytask.UpdateMyTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.mytask.UpdateMyTaskReq;\n  return proto.mytask.UpdateMyTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.mytask.UpdateMyTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.mytask.UpdateMyTaskReq}\n */\nproto.mytask.UpdateMyTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatustask(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.mytask.UpdateMyTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.UpdateMyTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.mytask.UpdateMyTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.UpdateMyTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStatustask();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.mytask.UpdateMyTaskReq} The clone.\n */\nproto.mytask.UpdateMyTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.mytask.UpdateMyTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.mytask.UpdateMyTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.UpdateMyTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.mytask.UpdateMyTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.UpdateMyTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamId = 4;\n * @return {string}\n */\nproto.mytask.UpdateMyTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.UpdateMyTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.mytask.UpdateMyTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.UpdateMyTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string statusTask = 5;\n * @return {string}\n */\nproto.mytask.UpdateMyTaskReq.prototype.getStatustask = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.UpdateMyTaskReq.prototype.setStatustask = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.mytask.MyTaskRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.mytask.MyTaskRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.mytask.MyTaskRes.displayName = 'proto.mytask.MyTaskRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.mytask.MyTaskRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.mytask.MyTaskRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.mytask.MyTaskRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.mytask.MyTaskRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.mytask.MyTaskRes}\n */\nproto.mytask.MyTaskRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.mytask.MyTaskRes;\n  return proto.mytask.MyTaskRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.mytask.MyTaskRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.mytask.MyTaskRes}\n */\nproto.mytask.MyTaskRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.mytask.MyTaskRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.MyTaskRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.mytask.MyTaskRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.MyTaskRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.mytask.MyTaskRes} The clone.\n */\nproto.mytask.MyTaskRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.mytask.MyTaskRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.mytask.MyTaskRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.MyTaskRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.mytask.GetAllMyTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.mytask.GetAllMyTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.mytask.GetAllMyTaskReq.displayName = 'proto.mytask.GetAllMyTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.mytask.GetAllMyTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.mytask.GetAllMyTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.mytask.GetAllMyTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.mytask.GetAllMyTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamid: msg.getTeamid(),\n    accesstoken: msg.getAccesstoken(),\n    username: msg.getUsername()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.mytask.GetAllMyTaskReq}\n */\nproto.mytask.GetAllMyTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.mytask.GetAllMyTaskReq;\n  return proto.mytask.GetAllMyTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.mytask.GetAllMyTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.mytask.GetAllMyTaskReq}\n */\nproto.mytask.GetAllMyTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.mytask.GetAllMyTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.GetAllMyTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.mytask.GetAllMyTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.GetAllMyTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.mytask.GetAllMyTaskReq} The clone.\n */\nproto.mytask.GetAllMyTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.mytask.GetAllMyTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamId = 4;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string username = 5;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.mytask.GetAllMyTaskRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.mytask.GetAllMyTaskRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.mytask.GetAllMyTaskRes.displayName = 'proto.mytask.GetAllMyTaskRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.mytask.GetAllMyTaskRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.mytask.GetAllMyTaskRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.mytask.GetAllMyTaskRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.mytask.GetAllMyTaskRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    teamtaskid: msg.getTeamtaskid(),\n    title: msg.getTitle(),\n    description: msg.getDescription(),\n    priority: msg.getPriority(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    comment: msg.getComment(),\n    status: msg.getStatus(),\n    review: msg.getReview(),\n    point: msg.getPoint(),\n    statustask: msg.getStatustask()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.mytask.GetAllMyTaskRes}\n */\nproto.mytask.GetAllMyTaskRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.mytask.GetAllMyTaskRes;\n  return proto.mytask.GetAllMyTaskRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.mytask.GetAllMyTaskRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.mytask.GetAllMyTaskRes}\n */\nproto.mytask.GetAllMyTaskRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setComment(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReview(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPoint(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatustask(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.mytask.GetAllMyTaskRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.GetAllMyTaskRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.mytask.GetAllMyTaskRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.GetAllMyTaskRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getComment();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getReview();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getStatustask();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.mytask.GetAllMyTaskRes} The clone.\n */\nproto.mytask.GetAllMyTaskRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.mytask.GetAllMyTaskRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string teamTaskId = 9;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string title = 1;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string description = 2;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string priority = 3;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string start = 4;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string deadline = 5;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string comment = 6;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getComment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setComment = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string status = 7;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string review = 10;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getReview = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setReview = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string point = 11;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setPoint = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string statusTask = 8;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getStatustask = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setStatustask = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\ngoog.object.extend(exports, proto.mytask);\n","import React, { Component } from 'react';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport { \r\nCard,\r\nButton, \r\nCol, \r\nInput, \r\nRow, \r\n } from 'reactstrap';\r\nimport {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../../../../../service/storage'\r\nimport Chat from '../../../../../service/chat'\r\n\r\nconst proto = {};\r\nproto.mytask = require('../../../../../gRPC/mytask/mytask_grpc_web_pb');\r\n\r\n    \r\nclass MyTask extends Component {\r\n   constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n   \r\n    this.state = {\r\n      collapse: true,\r\n      fadeIn: true,\r\n      selected: ['one'],\r\n       data: [],\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n//this.notify()\r\n\r\nconst mytaskService = new proto.mytask.MytaskClient('https://www.overlead.co');\r\nvar metadata = {};\r\n\r\nvar GetAllMyTaskReq = new proto.mytask.GetAllMyTaskReq();\r\nGetAllMyTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\nGetAllMyTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\nGetAllMyTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\nGetAllMyTaskReq.setTeamid(getFromStorage(\"teamId\"));\r\nGetAllMyTaskReq.setUsername(getFromStorage(\"username\"));\r\n\r\n\r\nvar response = mytaskService.getAllMyTask(GetAllMyTaskReq, metadata)\r\nlet that = this\r\nlet start=\"\"\r\nlet end=\"\"\r\nresponse.on('data', function (response) {\r\n  if (response.getStatus() == \"SUCCESS\") {\r\n    \r\n    let arr = response.getStart().split('-');\r\n    if (arr[1] > 12) {\r\n      arr[1] = arr[1] - 12\r\n      start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n    } else {\r\n      start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n    }\r\n\r\n    arr = response.getDeadline().split('-')\r\n    if (arr[1] > 12) {\r\n      arr[1] = arr[1] - 12\r\n      end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n    } else {\r\n      end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n    }\r\n\r\n   \r\n  \r\n\r\n  \r\n\r\n    that.setState(prevState => ({\r\n      data: [...prevState.data,\r\n      {\r\n        id: response.getTeamtaskid(),\r\n        title: response.getTitle(),\r\n        description: response.getDescription(),\r\n        priority: response.getPriority(),\r\n        review: response.getReview(),\r\n        comment: response.getComment(),\r\n        status: response.getStatustask(),\r\n        start: start,\r\n        deadline: end\r\n      }]\r\n    }));\r\n\r\n  }\r\n})\r\nresponse.on('status', function (status) {\r\n  if (status.code!=0) console.log(status)\r\n   \r\n});\r\nresponse.on('end', function (end) {\r\n  console.log(\"end\")\r\n  console.log(end)\r\n});\r\n  }\r\n\r\n  render() {\r\n\r\n        return (\r\n          <div>\r\n            <Chat />\r\n             <Row>\r\n          <Col>         \r\n         \r\n            \r\n            <Row>       \r\n                    <Col xs=\"2\" md=\"2\">\r\n                      <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"Search\" /> \r\n                    </Col> \r\n                   \r\n                    <Col xs=\"0\" md=\"0\">\r\n                      <Button type=\"submit\" size=\"sm\" color=\"success\"><i class=\"fa fa-search\"></i></Button>\r\n                    </Col> \r\n            </Row>  \r\n           <Card> \r\n           <div class=\"table-responsive\"> \r\n            <table class=\"table table-lg\">\r\n                  <thead class=\"thead\">\r\n                  <tr class=\"bg-primary\">\r\n                    <th>Title <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Description <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Priority <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Start day <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Deadline <i class=\"fa fa-sort\"></i></th>   \r\n                    <th>Comment</th>\r\n                    <th>Status</th>   \r\n                    \r\n                  </tr>\r\n                  </thead>\r\n                   <tbody>{this.state.data.map(function(item, key) {\r\n             \r\n               return (\r\n                  <tr key = {key}>\r\n                      <td>{item.title}</td>\r\n                      <td>{item.description}</td>\r\n                      <td>{item.priority}</td>\r\n                      <td>{item.start}</td>\r\n                      <td>{item.deadline}</td>\r\n                      <td>{item.comment}</td>\r\n                      <td>{item.status}</td> \r\n                     \r\n                  </tr>\r\n                )\r\n             \r\n             })}</tbody>\r\n                </table>\r\n            </div>\r\n           </Card>\r\n            </Col>\r\n            </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyTask;\r\n"],"sourceRoot":""}