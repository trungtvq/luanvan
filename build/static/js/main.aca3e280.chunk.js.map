{"version":3,"sources":["service/storage.js","service/chat.js","actions/index.js","gRPC/myproject/myproject_grpc_web_pb.js","contexts/authContext.js","assets/img/brand/logo.png","gRPC/auth/auth_grpc_web_pb.js","gRPC/team/team_grpc_web_pb.js","gRPC/chat/chat_grpc_web_pb.js","gRPC/chat/chat_pb.js","gRPC/auth/auth_pb.js","gRPC/myproject/myproject_pb.js","gRPC/team/team_pb.js","Client.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","error","setItem","stringify","__webpack_require__","d","__webpack_exports__","proto","chat","require","Chat","fetchChat","log","chatService","ChatClient","SendMsgReq","setRequesterid","setAccesstoken","setChannelid","setName","that","Object","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","_this","connectChat","response","getStatus","addResponseMessage","getSendername","getMsg","handleNewUserMessage","newMessage","setMsg","sendMsg","this","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","react_chat_widget__WEBPACK_IMPORTED_MODULE_7__","profileAvatar","logo","title","subtitle","Component","REQUEST_POSTS","RECEIVE_POSTS","SELECT_SUBREDDIT","INVALIDATE_SUBREDDIT","DO_LOGIN","DO_LOGOUT","GET_CURENT_PROJECT","SET_PROJECT","SET_TEAM","LOAD_TEAM","selectSubreddit","invalidateSubreddit","fetchPostsIfNeeded","saveLogin","removeLogin","setProject","setTeam","addProject","deleteProject","updateProject","ADD_PROJECT","UPDATE_PROJECT","DELETE_PROJECT","subreddit","type","fetchPosts","dispatch","requestPosts","fetch","concat","then","json","posts","data","children","map","child","receivedAt","Date","now","receivePosts","getState","state","postsBySubreddit","isFetching","didInvalidate","shouldFetchPosts","id","token","email","name","avatar","topic","start","end","isPrivate","progress","grpc","web","myproject","MyprojectClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","MyprojectPromiseClient","methodInfo_Myproject_addNewProject","AbstractClientBase","MethodInfo","ProjectRes","request","serializeBinary","deserializeBinary","prototype","addNewProject","metadata","callback","rpcCall","unaryCall","methodInfo_Myproject_updateProject","methodInfo_Myproject_deleteProject","methodInfo_Myproject_getAllProject","getAllProject","serverStreaming","module","exports","react__WEBPACK_IMPORTED_MODULE_0__","authContext","n","React","createContext","signInEmail","login","logout","p","Auth","AuthClient","AuthPromiseClient","methodInfo_Auth_SignIn","SignInRes","signIn","methodInfo_Auth_SignUp","signUp","methodInfo_Auth_ResetPassword","ResetRes","resetPassword","methodInfo_Auth_ResetPasswordFinalStep","resetPasswordFinalStep","methodInfo_Auth_SignInGoogle","signInGoogle","methodInfo_Auth_AuthSession","authSession","teamtask","TeamClient","TeamPromiseClient","methodInfo_Team_addNewTeam","TeamRes","addNewTeam","methodInfo_Team_updateTeam","updateTeam","methodInfo_Team_deleteTeam","deleteTeam","methodInfo_Team_addMember","addMember","methodInfo_Team_removeMember","removeMember","methodInfo_Team_updateMember","updateMember","methodInfo_Team_getAllMember","getAllMember","methodInfo_Team_getAllTeam","GetAllTeamRes","getAllTeam","ChatPromiseClient","methodInfo_Chat_ConnectRenew","SendMsgRes","connectRenew","methodInfo_Chat_ConnectChat","methodInfo_Chat_SendMsg","jspb","goog","global","Function","exportSymbol","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","accesstoken","getAccesstoken","requesterid","getRequesterid","getName","channelid","getChannelid","getType","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setType","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","length","writeString","cloneMessage","getFieldProto3","setField","sendername","time","getTime","status","setSendername","setTime","setStatus","object","extend","SignInReq","username","getUsername","password","getPassword","setUsername","setPassword","AuthSessionReq","session","getSession","getId","setSession","setId","getError","getResponse","getAvatar","setError","setResponse","setAvatar","SignInGoogleReq","SignUpReq","ResetReq","ResetPasswordFinalStepReq","getToken","setToken","AddNewProjectReq","getTopic","projectname","getProjectname","getStart","getEnd","pb_private","getPrivate","detail","getDetail","cookie","getCookie","setTopic","setProjectname","setStart","setEnd","setPrivate","setDetail","setCookie","UpdateProjectReq","projectid","getProjectid","getProgress","setProjectid","setProgress","DeleteProjectReq","GetAllProjectReq","members","getMembers","currentsprintid","getCurrentsprintid","setMembers","setCurrentsprintid","GetAllTeamReq","option","getOption","setOption","teamid","getTeamid","nummember","getNummember","department","getDepartment","description","getDescription","setTeamid","setNummember","setDepartment","setDescription","AddNewTeamReq","UpdateTeamReq","DeleteTeamReq","AddMemberReq","role","getRole","memberemail","getMemberemail","setRole","setMemberemail","RemoveMemberReq","UpdateMemberReq","GetAllMemberReq","toast","configure","auth","team","loading","react_default","DefaultLayout","Loadable","loader","Promise","all","e","bind","Login","Register","Page404","Page500","PagePay","AsyncApp","ResetSecond","ResetFirst","HomePayment","HomeFinal","Admin","Demo","MyProject","ProfileDetail","ProfileEdit","Client","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","authService","assertThisInitialized","myprojectService","on","flat","cp","lastCreated","lastName","currentProject","projectName","loadAllTeam","loadAllMember","teamService","mem","push","code","details","lastTeam","validTeam","hasProject","hasTeam","isLogin","Provider","BrowserRouter","Switch","Route","exact","path","component","connect","changeStatusLogin","updateProjectLoaded","changeStatusProject","project","random","rootReducer","combineReducers","arguments","action","assign","defineProperty","items","lastUpdated","selectedSubreddit","projectId","Math","teamId","teamName","newProject","needUpdate","ownerName","private","item","loggerMiddleware","createLogger","preloadedState","store","createStore","applyMiddleware","thunkMiddleware","App","es","src_Client","Boolean","window","location","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aca3e280.chunk.js","sourcesContent":["export function getFromStorage(key) {\r\n  if (!key) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const valueStr = localStorage.getItem(key);\r\n    if (valueStr) {\r\n      return JSON.parse(valueStr);\r\n    }\r\n    return null;\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function setInStorage(key, obj) {\r\n  if (!key) {\r\n    console.error('Error: Key is missing');\r\n  }\r\n\r\n try {\r\n    localStorage.setItem(key, JSON.stringify(obj));\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\r\n\r\nimport 'react-chat-widget/lib/styles.css';\r\nimport logo from '../assets/img/brand/logo.png';\r\nimport cookie from 'react-cookies';\r\nimport {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../service/storage'\r\nconst proto = {};\r\n\r\nproto.chat = require('./../gRPC/chat/chat_grpc_web_pb');\r\nclass Chat extends Component {\r\n  componentDidMount() {\r\n    addResponseMessage(\"Welcome to this awesome chat!\");\r\n\r\n    this.fetchChat()\r\n  }\r\n  fetchChat = () => {\r\n    console.log(\"fetchChat\")\r\n    const chatService = new proto.chat.ChatClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var SendMsgReq = new proto.chat.SendMsgReq();\r\n    SendMsgReq.setRequesterid(getFromStorage(\"userId\"));\r\n    SendMsgReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    SendMsgReq.setChannelid(getFromStorage(\"currentProject\"));\r\n    //SendMsgReq.setChannelid(getFromStorage(\"currentProject\"));\r\n    SendMsgReq.setName(getFromStorage(\"name\"))\r\n    let that = this\r\n    \r\n\r\n    chatService.connectChat(SendMsgReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n        console.log(\"error\")\r\n        that.fetchChat()\r\n      } else { //if success\r\n        //get response\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          addResponseMessage(response.getSendername() + \" said: \" + response.getMsg());\r\n          that.fetchChat()\r\n          \r\n        } else {\r\n          that.fetchChat()\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n  componentWillUnmount(){\r\n  }\r\n  handleNewUserMessage = (newMessage) => {\r\n    const chatService = new proto.chat.ChatClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var SendMsgReq = new proto.chat.SendMsgReq();\r\n    SendMsgReq.setRequesterid(getFromStorage(\"userId\"));\r\n    SendMsgReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    SendMsgReq.setChannelid(getFromStorage(\"currentProject\"));\r\n    SendMsgReq.setName(getFromStorage(\"name\"))\r\n    SendMsgReq.setMsg(newMessage)\r\n\r\n    chatService.sendMsg(SendMsgReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n        console.log(\"error\")\r\n      } else {\r\n        console.log(response.getStatus())\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Widget\r\n          handleNewUserMessage={this.handleNewUserMessage}\r\n          profileAvatar={logo}\r\n          title={getFromStorage(\"currentProject\")}\r\n          subtitle=\"And my cool subtitle\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Chat;","//import fetch from 'cross-fetch'\r\nexport const REQUEST_POSTS = 'REQUEST_POSTS'\r\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS'\r\nexport const SELECT_SUBREDDIT = 'SELECT_SUBREDDIT'\r\nexport const INVALIDATE_SUBREDDIT = 'INVALIDATE_SUBREDDIT'\r\nexport const DO_LOGIN = 'DO_LOGIN'\r\nexport const DO_LOGOUT = 'DO_LOGOUT'\r\nexport const GET_CURENT_PROJECT = 'GET_CURENT_PROJECT'\r\nexport const SET_PROJECT = 'SET_PROJECT'\r\n\r\n\r\n//hook\r\nexport const NEW_PROJECT_COME = 'NEW_PROJECT_COME'\r\nexport const UPDATE_PROJECT_COME = 'UPDATE_PROJECT_COME'\r\nexport const REMOVE_PROJECT_COME = 'REMOVE_PROJECT_COMEs'\r\nexport const SET_TEAM = 'SET_TEAM'\r\nexport const LOAD_TEAM = 'LOAD_TEAM'\r\n\r\nexport function selectSubreddit(subreddit) {\r\n  return {\r\n    type: SELECT_SUBREDDIT,\r\n    subreddit\r\n  }\r\n}\r\n\r\nexport function invalidateSubreddit(subreddit) {\r\n  return {\r\n    type: INVALIDATE_SUBREDDIT,\r\n    subreddit\r\n  }\r\n}\r\n\r\nfunction requestPosts(subreddit) {\r\n  return {\r\n    type: REQUEST_POSTS,\r\n    subreddit\r\n  }\r\n}\r\n\r\nfunction receivePosts(subreddit, json) {\r\n  return {\r\n    type: RECEIVE_POSTS,\r\n    subreddit,\r\n    posts: json.data.children.map(child => child.data),\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\n\r\nfunction fetchPosts(subreddit) {\r\n  return dispatch => {\r\n    dispatch(requestPosts(subreddit))\r\n    return fetch(`https://www.reddit.com/r/${subreddit}.json`)\r\n      .then(response => response.json())\r\n      .then(json => dispatch(receivePosts(subreddit, json)))\r\n  }\r\n}\r\n\r\nfunction shouldFetchPosts(state, subreddit) {\r\n  const posts = state.postsBySubreddit[subreddit]\r\n  if (!posts) {\r\n    return true\r\n  } else if (posts.isFetching) {\r\n    return false\r\n  } else {\r\n    return posts.didInvalidate\r\n  }\r\n}\r\n\r\nexport function fetchPostsIfNeeded(subreddit) {\r\n  console.log(\"fetchPostsIfNeeded\")  \r\n  return (dispatch, getState) => {\r\n    console.log(dispatch)\r\n    console.log(getState())\r\n    if (shouldFetchPosts(getState(), subreddit)) {\r\n      return dispatch(fetchPosts(subreddit))\r\n    }\r\n  }\r\n}\r\n\r\nexport function subcriptChannel(channelId){\r\n  \r\n}\r\n\r\nexport function saveLogin(id,token,email,name,avatar) {\r\n  return {\r\n    type: DO_LOGIN,\r\n    id,\r\n    token,\r\n    email,\r\n    name,\r\n    avatar\r\n  }\r\n}\r\nexport function removeLogin() {\r\n  return {\r\n    type: DO_LOGOUT\r\n  }\r\n}\r\nexport function getProject(){\r\n  return {\r\n    type: GET_CURENT_PROJECT\r\n  }\r\n}\r\nexport function setProject(id,name){\r\n  return {\r\n    type: SET_PROJECT,\r\n    id,\r\n    name\r\n  }\r\n}\r\n\r\nexport function setTeam(id,name){\r\n  return {\r\n    type: SET_TEAM,\r\n    id,\r\n    name\r\n  }\r\n}\r\nexport function loadTeam(id,name){\r\n  return {\r\n    type: SET_TEAM,\r\n    id,\r\n    name\r\n  }\r\n}\r\n\r\nexport function addProject(id,topic,name,start,end,isPrivate,progress){\r\n  return {\r\n    type: ADD_PROJECT,\r\n    id,topic,name,start,end,isPrivate,progress\r\n  }\r\n}\r\nexport function deleteProject(id){\r\n  return {\r\n    type: DELETE_PROJECT,\r\n    id\r\n  }\r\n}\r\nexport function updateProject(id,topic,name,start,end,isPrivate,progress  ){\r\n  return {\r\n    type: UPDATE_PROJECT,\r\n    id,topic,name,start,end,isPrivate,progress\r\n  }\r\n}\r\nexport function fetchmyproject(id,ownerName,topic,name,start,end,isPrivate){\r\n  return {\r\n    type: ADD_PROJECT,\r\n    id,ownerName,topic,name,start,end,isPrivate\r\n  }\r\n}\r\n\r\n//TYPE:\r\nexport const ADD_PROJECT = 'ADD_PROJECT'\r\nexport const UPDATE_PROJECT = 'UPDATE_PROJECT'\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT'\r\nexport const FORCE_RERENDER = 'FORCE_RERENDER'\r\nexport const NOTIFY_COME = 'FORCE_RERENDER'\r\n\r\nfunction fetch_notify(){\r\n\r\n}\r\nfunction fetch_message(){\r\n\r\n}\r\nfunction fetch_task(){\r\n\r\n}\r\nexport function hook(type,id,detail){\r\n  return (dispatch, getState) => {\r\n  switch (type){\r\n    case \"new_message\":\r\n        return dispatch(fetch_message(id,detail))\r\n    case \"new_notify\":\r\n        return dispatch(fetch_notify(id,detail))\r\n    case \"new_task\":\r\n        return dispatch(fetch_task(id,detail))\r\n    \r\n    }\r\n  }\r\n}","/**\n * @fileoverview gRPC-Web generated client stub for myproject\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.myproject = require('./myproject_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.myproject.MyprojectClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.myproject.MyprojectPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.AddNewProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_addNewProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.AddNewProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.AddNewProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.myproject.ProjectRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.addNewProject =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/myproject.Myproject/addNewProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_addNewProject,\n      callback);\n};\n\n\n/**\n * @param {!proto.myproject.AddNewProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.myproject.ProjectRes>}\n *     A native promise that resolves to the response\n */\nproto.myproject.MyprojectPromiseClient.prototype.addNewProject =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/myproject.Myproject/addNewProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_addNewProject);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.UpdateProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_updateProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.UpdateProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.UpdateProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.myproject.ProjectRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.updateProject =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/myproject.Myproject/updateProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_updateProject,\n      callback);\n};\n\n\n/**\n * @param {!proto.myproject.UpdateProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.myproject.ProjectRes>}\n *     A native promise that resolves to the response\n */\nproto.myproject.MyprojectPromiseClient.prototype.updateProject =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/myproject.Myproject/updateProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_updateProject);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.DeleteProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_deleteProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.DeleteProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.DeleteProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.myproject.ProjectRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.deleteProject =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/myproject.Myproject/deleteProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_deleteProject,\n      callback);\n};\n\n\n/**\n * @param {!proto.myproject.DeleteProjectReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.myproject.ProjectRes>}\n *     A native promise that resolves to the response\n */\nproto.myproject.MyprojectPromiseClient.prototype.deleteProject =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/myproject.Myproject/deleteProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_deleteProject);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.myproject.GetAllProjectReq,\n *   !proto.myproject.ProjectRes>}\n */\nconst methodInfo_Myproject_getAllProject = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.myproject.ProjectRes,\n  /** @param {!proto.myproject.GetAllProjectReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.myproject.ProjectRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.myproject.GetAllProjectReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectClient.prototype.getAllProject =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/myproject.Myproject/getAllProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_getAllProject);\n};\n\n\n/**\n * @param {!proto.myproject.GetAllProjectReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.myproject.ProjectRes>}\n *     The XHR Node Readable Stream\n */\nproto.myproject.MyprojectPromiseClient.prototype.getAllProject =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/myproject.Myproject/getAllProject',\n      request,\n      metadata || {},\n      methodInfo_Myproject_getAllProject);\n};\n\n\nmodule.exports = proto.myproject;\n\n","import React from \"react\";\r\nconst authContext = React.createContext({\r\n\ttoken:null,\r\n\tsignInEmail: null,\r\n\tlogin: (token,signInEmail)=>{},\r\n\tlogout: ()=>{}\r\n});\r\nexport default authContext;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.c7fd352d.png\";","/**\n * @fileoverview gRPC-Web generated client stub for Auth\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.Auth = require('./auth_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.Auth.AuthClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.Auth.AuthPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.SignInReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_SignIn = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.SignInReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.SignInReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.signIn =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/SignIn',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignIn,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.SignInReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.signIn =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/SignIn',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignIn);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.SignUpReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_SignUp = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.SignUpReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.SignUpReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.signUp =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/SignUp',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignUp,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.SignUpReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.signUp =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/SignUp',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignUp);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.ResetReq,\n *   !proto.Auth.ResetRes>}\n */\nconst methodInfo_Auth_ResetPassword = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.ResetRes,\n  /** @param {!proto.Auth.ResetReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.ResetRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.ResetReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.ResetRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.ResetRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.resetPassword =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/ResetPassword',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPassword,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.ResetReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.ResetRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.resetPassword =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/ResetPassword',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPassword);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.ResetPasswordFinalStepReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_ResetPasswordFinalStep = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.ResetPasswordFinalStepReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.ResetPasswordFinalStepReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.resetPasswordFinalStep =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/ResetPasswordFinalStep',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPasswordFinalStep,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.ResetPasswordFinalStepReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.resetPasswordFinalStep =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/ResetPasswordFinalStep',\n      request,\n      metadata || {},\n      methodInfo_Auth_ResetPasswordFinalStep);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.SignInGoogleReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_SignInGoogle = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.SignInGoogleReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.SignInGoogleReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.signInGoogle =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/SignInGoogle',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignInGoogle,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.SignInGoogleReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.signInGoogle =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/SignInGoogle',\n      request,\n      metadata || {},\n      methodInfo_Auth_SignInGoogle);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Auth.AuthSessionReq,\n *   !proto.Auth.SignInRes>}\n */\nconst methodInfo_Auth_AuthSession = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.Auth.SignInRes,\n  /** @param {!proto.Auth.AuthSessionReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.Auth.SignInRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Auth.AuthSessionReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Auth.SignInRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Auth.SignInRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.Auth.AuthClient.prototype.authSession =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Auth.Auth/AuthSession',\n      request,\n      metadata || {},\n      methodInfo_Auth_AuthSession,\n      callback);\n};\n\n\n/**\n * @param {!proto.Auth.AuthSessionReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Auth.SignInRes>}\n *     A native promise that resolves to the response\n */\nproto.Auth.AuthPromiseClient.prototype.authSession =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Auth.Auth/AuthSession',\n      request,\n      metadata || {},\n      methodInfo_Auth_AuthSession);\n};\n\n\nmodule.exports = proto.Auth;\n\n","/**\n * @fileoverview gRPC-Web generated client stub for teamtask\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.teamtask = require('./team_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.teamtask.TeamClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.teamtask.TeamPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.AddNewTeamReq,\n *   !proto.teamtask.TeamRes>}\n */\nconst methodInfo_Team_addNewTeam = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamRes,\n  /** @param {!proto.teamtask.AddNewTeamReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.AddNewTeamReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.addNewTeam =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.Team/addNewTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_addNewTeam,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.AddNewTeamReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamPromiseClient.prototype.addNewTeam =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.Team/addNewTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_addNewTeam);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.UpdateTeamReq,\n *   !proto.teamtask.TeamRes>}\n */\nconst methodInfo_Team_updateTeam = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamRes,\n  /** @param {!proto.teamtask.UpdateTeamReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.UpdateTeamReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.updateTeam =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.Team/updateTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_updateTeam,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.UpdateTeamReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamPromiseClient.prototype.updateTeam =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.Team/updateTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_updateTeam);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.DeleteTeamReq,\n *   !proto.teamtask.TeamRes>}\n */\nconst methodInfo_Team_deleteTeam = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamRes,\n  /** @param {!proto.teamtask.DeleteTeamReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.DeleteTeamReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.deleteTeam =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.Team/deleteTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_deleteTeam,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.DeleteTeamReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamPromiseClient.prototype.deleteTeam =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.Team/deleteTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_deleteTeam);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.AddMemberReq,\n *   !proto.teamtask.TeamRes>}\n */\nconst methodInfo_Team_addMember = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamRes,\n  /** @param {!proto.teamtask.AddMemberReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.AddMemberReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.addMember =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.Team/addMember',\n      request,\n      metadata || {},\n      methodInfo_Team_addMember,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.AddMemberReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamPromiseClient.prototype.addMember =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.Team/addMember',\n      request,\n      metadata || {},\n      methodInfo_Team_addMember);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.RemoveMemberReq,\n *   !proto.teamtask.TeamRes>}\n */\nconst methodInfo_Team_removeMember = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamRes,\n  /** @param {!proto.teamtask.RemoveMemberReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.RemoveMemberReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.removeMember =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.Team/removeMember',\n      request,\n      metadata || {},\n      methodInfo_Team_removeMember,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.RemoveMemberReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamPromiseClient.prototype.removeMember =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.Team/removeMember',\n      request,\n      metadata || {},\n      methodInfo_Team_removeMember);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.UpdateMemberReq,\n *   !proto.teamtask.TeamRes>}\n */\nconst methodInfo_Team_updateMember = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamRes,\n  /** @param {!proto.teamtask.UpdateMemberReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.UpdateMemberReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.updateMember =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.Team/updateMember',\n      request,\n      metadata || {},\n      methodInfo_Team_updateMember,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.UpdateMemberReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamPromiseClient.prototype.updateMember =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.Team/updateMember',\n      request,\n      metadata || {},\n      methodInfo_Team_updateMember);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.GetAllMemberReq,\n *   !proto.teamtask.TeamRes>}\n */\nconst methodInfo_Team_getAllMember = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamRes,\n  /** @param {!proto.teamtask.GetAllMemberReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.GetAllMemberReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.getAllMember =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/teamtask.Team/getAllMember',\n      request,\n      metadata || {},\n      methodInfo_Team_getAllMember);\n};\n\n\n/**\n * @param {!proto.teamtask.GetAllMemberReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamRes>}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamPromiseClient.prototype.getAllMember =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/teamtask.Team/getAllMember',\n      request,\n      metadata || {},\n      methodInfo_Team_getAllMember);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.GetAllTeamReq,\n *   !proto.teamtask.GetAllTeamRes>}\n */\nconst methodInfo_Team_getAllTeam = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.GetAllTeamRes,\n  /** @param {!proto.teamtask.GetAllTeamReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.GetAllTeamRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.GetAllTeamReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.GetAllTeamRes>}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamClient.prototype.getAllTeam =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/teamtask.Team/getAllTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_getAllTeam);\n};\n\n\n/**\n * @param {!proto.teamtask.GetAllTeamReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.GetAllTeamRes>}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamPromiseClient.prototype.getAllTeam =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/teamtask.Team/getAllTeam',\n      request,\n      metadata || {},\n      methodInfo_Team_getAllTeam);\n};\n\n\nmodule.exports = proto.teamtask;\n\n","/**\n * @fileoverview gRPC-Web generated client stub for chat\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.chat = require('./chat_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.chat.ChatClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.chat.ChatPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.chat.SendMsgReq,\n *   !proto.chat.SendMsgRes>}\n */\nconst methodInfo_Chat_ConnectRenew = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.chat.SendMsgRes,\n  /** @param {!proto.chat.SendMsgReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.SendMsgRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.chat.SendMsgRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.SendMsgRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.connectRenew =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/ConnectRenew',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectRenew,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.SendMsgRes>}\n *     A native promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.connectRenew =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/ConnectRenew',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectRenew);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.chat.SendMsgReq,\n *   !proto.chat.SendMsgRes>}\n */\nconst methodInfo_Chat_ConnectChat = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.chat.SendMsgRes,\n  /** @param {!proto.chat.SendMsgReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.SendMsgRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.chat.SendMsgRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.SendMsgRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.connectChat =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/ConnectChat',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectChat,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.SendMsgRes>}\n *     A native promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.connectChat =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/ConnectChat',\n      request,\n      metadata || {},\n      methodInfo_Chat_ConnectChat);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.chat.SendMsgReq,\n *   !proto.chat.SendMsgRes>}\n */\nconst methodInfo_Chat_SendMsg = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.chat.SendMsgRes,\n  /** @param {!proto.chat.SendMsgReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.chat.SendMsgRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.chat.SendMsgRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.chat.SendMsgRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.chat.ChatClient.prototype.sendMsg =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/chat.Chat/SendMsg',\n      request,\n      metadata || {},\n      methodInfo_Chat_SendMsg,\n      callback);\n};\n\n\n/**\n * @param {!proto.chat.SendMsgReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.chat.SendMsgRes>}\n *     A native promise that resolves to the response\n */\nproto.chat.ChatPromiseClient.prototype.sendMsg =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/chat.Chat/SendMsg',\n      request,\n      metadata || {},\n      methodInfo_Chat_SendMsg);\n};\n\n\nmodule.exports = proto.chat;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.chat.SendMsgReq', null, global);\ngoog.exportSymbol('proto.chat.SendMsgRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.SendMsgReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.SendMsgReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.chat.SendMsgReq.displayName = 'proto.chat.SendMsgReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.SendMsgReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.SendMsgReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.SendMsgReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.chat.SendMsgReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accesstoken: msg.getAccesstoken(),\n    requesterid: msg.getRequesterid(),\n    name: msg.getName(),\n    channelid: msg.getChannelid(),\n    msg: msg.getMsg(),\n    type: msg.getType()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.SendMsgReq}\n */\nproto.chat.SendMsgReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.SendMsgReq;\n  return proto.chat.SendMsgReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.SendMsgReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.SendMsgReq}\n */\nproto.chat.SendMsgReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMsg(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.chat.SendMsgReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.SendMsgReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getChannelid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getMsg();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.chat.SendMsgReq} The clone.\n */\nproto.chat.SendMsgReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.chat.SendMsgReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string accessToken = 1;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string requesterId = 2;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string name = 6;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string channelId = 3;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getChannelid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setChannelid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string msg = 4;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string type = 5;\n * @return {string}\n */\nproto.chat.SendMsgReq.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgReq.prototype.setType = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.chat.SendMsgRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.chat.SendMsgRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.chat.SendMsgRes.displayName = 'proto.chat.SendMsgRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.chat.SendMsgRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.chat.SendMsgRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.chat.SendMsgRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.chat.SendMsgRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelid: msg.getChannelid(),\n    msg: msg.getMsg(),\n    type: msg.getType(),\n    sendername: msg.getSendername(),\n    time: msg.getTime(),\n    status: msg.getStatus()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.chat.SendMsgRes}\n */\nproto.chat.SendMsgRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.chat.SendMsgRes;\n  return proto.chat.SendMsgRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.chat.SendMsgRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.chat.SendMsgRes}\n */\nproto.chat.SendMsgRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMsg(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSendername(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTime(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.chat.SendMsgRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.chat.SendMsgRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.chat.SendMsgRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getChannelid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getMsg();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getSendername();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTime();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.chat.SendMsgRes} The clone.\n */\nproto.chat.SendMsgRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.chat.SendMsgRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string channelId = 1;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getChannelid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setChannelid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string msg = 2;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setType = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string senderName = 4;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getSendername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setSendername = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string time = 5;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setTime = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string status = 6;\n * @return {string}\n */\nproto.chat.SendMsgRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.chat.SendMsgRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto.chat);\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.Auth.AuthSessionReq', null, global);\ngoog.exportSymbol('proto.Auth.ResetPasswordFinalStepReq', null, global);\ngoog.exportSymbol('proto.Auth.ResetReq', null, global);\ngoog.exportSymbol('proto.Auth.ResetRes', null, global);\ngoog.exportSymbol('proto.Auth.SignInGoogleReq', null, global);\ngoog.exportSymbol('proto.Auth.SignInReq', null, global);\ngoog.exportSymbol('proto.Auth.SignInRes', null, global);\ngoog.exportSymbol('proto.Auth.SignUpReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignInReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignInReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignInReq.displayName = 'proto.Auth.SignInReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignInReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignInReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignInReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignInReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    password: msg.getPassword()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignInReq}\n */\nproto.Auth.SignInReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignInReq;\n  return proto.Auth.SignInReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignInReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignInReq}\n */\nproto.Auth.SignInReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignInReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignInReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignInReq} The clone.\n */\nproto.Auth.SignInReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignInReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.SignInReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string password = 2;\n * @return {string}\n */\nproto.Auth.SignInReq.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInReq.prototype.setPassword = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.AuthSessionReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.AuthSessionReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.AuthSessionReq.displayName = 'proto.Auth.AuthSessionReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.AuthSessionReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.AuthSessionReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.AuthSessionReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.AuthSessionReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    session: msg.getSession(),\n    id: msg.getId(),\n    time: msg.getTime()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.AuthSessionReq}\n */\nproto.Auth.AuthSessionReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.AuthSessionReq;\n  return proto.Auth.AuthSessionReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.AuthSessionReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.AuthSessionReq}\n */\nproto.Auth.AuthSessionReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSession(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.AuthSessionReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.AuthSessionReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.AuthSessionReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.AuthSessionReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getSession();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTime();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.AuthSessionReq} The clone.\n */\nproto.Auth.AuthSessionReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.AuthSessionReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string session = 1;\n * @return {string}\n */\nproto.Auth.AuthSessionReq.prototype.getSession = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.AuthSessionReq.prototype.setSession = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string id = 2;\n * @return {string}\n */\nproto.Auth.AuthSessionReq.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.AuthSessionReq.prototype.setId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string time = 3;\n * @return {string}\n */\nproto.Auth.AuthSessionReq.prototype.getTime = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.AuthSessionReq.prototype.setTime = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignInRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignInRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignInRes.displayName = 'proto.Auth.SignInRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignInRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignInRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignInRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignInRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    error: msg.getError(),\n    response: msg.getResponse(),\n    type: msg.getType(),\n    id: msg.getId(),\n    session: msg.getSession(),\n    name: msg.getName(),\n    avatar: msg.getAvatar()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignInRes}\n */\nproto.Auth.SignInRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignInRes;\n  return proto.Auth.SignInRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignInRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignInRes}\n */\nproto.Auth.SignInRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setResponse(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSession(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAvatar(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignInRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignInRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getResponse();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSession();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getAvatar();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignInRes} The clone.\n */\nproto.Auth.SignInRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignInRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string error = 4;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string response = 2;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getResponse = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setResponse = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string type = 3;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setType = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string id = 5;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string session = 6;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getSession = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setSession = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string name = 7;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setName = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string avatar = 8;\n * @return {string}\n */\nproto.Auth.SignInRes.prototype.getAvatar = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInRes.prototype.setAvatar = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignInGoogleReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignInGoogleReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignInGoogleReq.displayName = 'proto.Auth.SignInGoogleReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignInGoogleReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignInGoogleReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignInGoogleReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignInGoogleReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    name: msg.getName(),\n    avatar: msg.getAvatar()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignInGoogleReq}\n */\nproto.Auth.SignInGoogleReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignInGoogleReq;\n  return proto.Auth.SignInGoogleReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignInGoogleReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignInGoogleReq}\n */\nproto.Auth.SignInGoogleReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAvatar(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignInGoogleReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInGoogleReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignInGoogleReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignInGoogleReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAvatar();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignInGoogleReq} The clone.\n */\nproto.Auth.SignInGoogleReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignInGoogleReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.SignInGoogleReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInGoogleReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.Auth.SignInGoogleReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInGoogleReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string avatar = 3;\n * @return {string}\n */\nproto.Auth.SignInGoogleReq.prototype.getAvatar = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignInGoogleReq.prototype.setAvatar = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.SignUpReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.SignUpReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.SignUpReq.displayName = 'proto.Auth.SignUpReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.SignUpReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.SignUpReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.SignUpReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.SignUpReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    password: msg.getPassword(),\n    name: msg.getName()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.SignUpReq}\n */\nproto.Auth.SignUpReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.SignUpReq;\n  return proto.Auth.SignUpReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.SignUpReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.SignUpReq}\n */\nproto.Auth.SignUpReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.SignUpReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignUpReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.SignUpReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.SignUpReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.SignUpReq} The clone.\n */\nproto.Auth.SignUpReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.SignUpReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.SignUpReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignUpReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string password = 2;\n * @return {string}\n */\nproto.Auth.SignUpReq.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignUpReq.prototype.setPassword = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nproto.Auth.SignUpReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.SignUpReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.ResetReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.ResetReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.ResetReq.displayName = 'proto.Auth.ResetReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.ResetReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.ResetReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.ResetReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.ResetReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: msg.getType(),\n    username: msg.getUsername()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.ResetReq}\n */\nproto.Auth.ResetReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.ResetReq;\n  return proto.Auth.ResetReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.ResetReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.ResetReq}\n */\nproto.Auth.ResetReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setType(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.ResetReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.ResetReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getType();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.ResetReq} The clone.\n */\nproto.Auth.ResetReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.ResetReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string type = 1;\n * @return {string}\n */\nproto.Auth.ResetReq.prototype.getType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetReq.prototype.setType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string username = 3;\n * @return {string}\n */\nproto.Auth.ResetReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.ResetRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.ResetRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.ResetRes.displayName = 'proto.Auth.ResetRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.ResetRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.ResetRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.ResetRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.ResetRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    error: msg.getError()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.ResetRes}\n */\nproto.Auth.ResetRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.ResetRes;\n  return proto.Auth.ResetRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.ResetRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.ResetRes}\n */\nproto.Auth.ResetRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.ResetRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.ResetRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.ResetRes} The clone.\n */\nproto.Auth.ResetRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.ResetRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.Auth.ResetRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string error = 2;\n * @return {string}\n */\nproto.Auth.ResetRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Auth.ResetPasswordFinalStepReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Auth.ResetPasswordFinalStepReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.Auth.ResetPasswordFinalStepReq.displayName = 'proto.Auth.ResetPasswordFinalStepReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.Auth.ResetPasswordFinalStepReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Auth.ResetPasswordFinalStepReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.Auth.ResetPasswordFinalStepReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername(),\n    token: msg.getToken(),\n    password: msg.getPassword()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Auth.ResetPasswordFinalStepReq}\n */\nproto.Auth.ResetPasswordFinalStepReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Auth.ResetPasswordFinalStepReq;\n  return proto.Auth.ResetPasswordFinalStepReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Auth.ResetPasswordFinalStepReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Auth.ResetPasswordFinalStepReq}\n */\nproto.Auth.ResetPasswordFinalStepReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setToken(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.Auth.ResetPasswordFinalStepReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetPasswordFinalStepReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getToken();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.Auth.ResetPasswordFinalStepReq} The clone.\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.Auth.ResetPasswordFinalStepReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetPasswordFinalStepReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string token = 2;\n * @return {string}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.getToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetPasswordFinalStepReq.prototype.setToken = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string password = 3;\n * @return {string}\n */\nproto.Auth.ResetPasswordFinalStepReq.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.Auth.ResetPasswordFinalStepReq.prototype.setPassword = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\ngoog.object.extend(exports, proto.Auth);\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.myproject.AddNewProjectReq', null, global);\ngoog.exportSymbol('proto.myproject.DeleteProjectReq', null, global);\ngoog.exportSymbol('proto.myproject.GetAllProjectReq', null, global);\ngoog.exportSymbol('proto.myproject.ProjectRes', null, global);\ngoog.exportSymbol('proto.myproject.UpdateProjectReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.AddNewProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.AddNewProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.AddNewProjectReq.displayName = 'proto.myproject.AddNewProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.AddNewProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.AddNewProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.AddNewProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.AddNewProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    topic: msg.getTopic(),\n    requesterid: msg.getRequesterid(),\n    projectname: msg.getProjectname(),\n    start: msg.getStart(),\n    end: msg.getEnd(),\n    pb_private: msg.getPrivate(),\n    detail: msg.getDetail(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.AddNewProjectReq}\n */\nproto.myproject.AddNewProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.AddNewProjectReq;\n  return proto.myproject.AddNewProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.AddNewProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.AddNewProjectReq}\n */\nproto.myproject.AddNewProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTopic(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectname(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEnd(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivate(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDetail(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.AddNewProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.AddNewProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.AddNewProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.AddNewProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTopic();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProjectname();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getEnd();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getPrivate();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getDetail();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.AddNewProjectReq} The clone.\n */\nproto.myproject.AddNewProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.AddNewProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string topic = 1;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getTopic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setTopic = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string requesterId = 2;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string projectName = 3;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getProjectname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setProjectname = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string start = 4;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string end = 5;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getEnd = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string private = 6;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getPrivate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string detail = 8;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getDetail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setDetail = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string cookie = 7;\n * @return {string}\n */\nproto.myproject.AddNewProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.AddNewProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.UpdateProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.UpdateProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.UpdateProjectReq.displayName = 'proto.myproject.UpdateProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.UpdateProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.UpdateProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.UpdateProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.UpdateProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    projectid: msg.getProjectid(),\n    requesterid: msg.getRequesterid(),\n    projectname: msg.getProjectname(),\n    start: msg.getStart(),\n    end: msg.getEnd(),\n    pb_private: msg.getPrivate(),\n    cookie: msg.getCookie(),\n    detail: msg.getDetail(),\n    progress: msg.getProgress(),\n    topic: msg.getTopic()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.UpdateProjectReq}\n */\nproto.myproject.UpdateProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.UpdateProjectReq;\n  return proto.myproject.UpdateProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.UpdateProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.UpdateProjectReq}\n */\nproto.myproject.UpdateProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectname(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEnd(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivate(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDetail(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProgress(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTopic(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.UpdateProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.UpdateProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.UpdateProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.UpdateProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getProjectname();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getEnd();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getPrivate();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getDetail();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getProgress();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getTopic();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.UpdateProjectReq} The clone.\n */\nproto.myproject.UpdateProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.UpdateProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string projectId = 1;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string requesterId = 3;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string projectName = 4;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getProjectname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setProjectname = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string start = 5;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string end = 6;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getEnd = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string private = 7;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getPrivate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string cookie = 8;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string detail = 9;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getDetail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setDetail = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string progress = 10;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getProgress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setProgress = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string topic = 11;\n * @return {string}\n */\nproto.myproject.UpdateProjectReq.prototype.getTopic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.UpdateProjectReq.prototype.setTopic = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.DeleteProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.DeleteProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.DeleteProjectReq.displayName = 'proto.myproject.DeleteProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.DeleteProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.DeleteProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.DeleteProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.DeleteProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    projectid: msg.getProjectid(),\n    cookie: msg.getCookie(),\n    requesterid: msg.getRequesterid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.DeleteProjectReq}\n */\nproto.myproject.DeleteProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.DeleteProjectReq;\n  return proto.myproject.DeleteProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.DeleteProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.DeleteProjectReq}\n */\nproto.myproject.DeleteProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.DeleteProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.DeleteProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.DeleteProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.DeleteProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.DeleteProjectReq} The clone.\n */\nproto.myproject.DeleteProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.DeleteProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.myproject.DeleteProjectReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.DeleteProjectReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string cookie = 3;\n * @return {string}\n */\nproto.myproject.DeleteProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.DeleteProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.myproject.DeleteProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.DeleteProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.GetAllProjectReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.GetAllProjectReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.GetAllProjectReq.displayName = 'proto.myproject.GetAllProjectReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.GetAllProjectReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.GetAllProjectReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.GetAllProjectReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.GetAllProjectReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.GetAllProjectReq}\n */\nproto.myproject.GetAllProjectReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.GetAllProjectReq;\n  return proto.myproject.GetAllProjectReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.GetAllProjectReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.GetAllProjectReq}\n */\nproto.myproject.GetAllProjectReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.GetAllProjectReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.GetAllProjectReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.GetAllProjectReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.GetAllProjectReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.GetAllProjectReq} The clone.\n */\nproto.myproject.GetAllProjectReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.GetAllProjectReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 3;\n * @return {string}\n */\nproto.myproject.GetAllProjectReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.GetAllProjectReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string cookie = 2;\n * @return {string}\n */\nproto.myproject.GetAllProjectReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.GetAllProjectReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.myproject.ProjectRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.myproject.ProjectRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.myproject.ProjectRes.displayName = 'proto.myproject.ProjectRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.myproject.ProjectRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.myproject.ProjectRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.myproject.ProjectRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.myproject.ProjectRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    topic: msg.getTopic(),\n    error: msg.getError(),\n    status: msg.getStatus(),\n    projectid: msg.getProjectid(),\n    projectname: msg.getProjectname(),\n    start: msg.getStart(),\n    end: msg.getEnd(),\n    pb_private: msg.getPrivate(),\n    detail: msg.getDetail(),\n    progress: msg.getProgress(),\n    members: msg.getMembers(),\n    currentsprintid: msg.getCurrentsprintid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.myproject.ProjectRes}\n */\nproto.myproject.ProjectRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.myproject.ProjectRes;\n  return proto.myproject.ProjectRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.myproject.ProjectRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.myproject.ProjectRes}\n */\nproto.myproject.ProjectRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTopic(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectname(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEnd(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivate(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDetail(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProgress(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMembers(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCurrentsprintid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.myproject.ProjectRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.ProjectRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.myproject.ProjectRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.myproject.ProjectRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTopic();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getProjectname();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getEnd();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getPrivate();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getDetail();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getProgress();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getMembers();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getCurrentsprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.myproject.ProjectRes} The clone.\n */\nproto.myproject.ProjectRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.myproject.ProjectRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string topic = 10;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getTopic = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setTopic = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string error = 1;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string status = 2;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string projectId = 3;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string projectName = 4;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getProjectname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setProjectname = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string start = 5;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string end = 6;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getEnd = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setEnd = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string private = 7;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getPrivate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string detail = 8;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getDetail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setDetail = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string progress = 9;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getProgress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setProgress = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string members = 11;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getMembers = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setMembers = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string currentSprintId = 12;\n * @return {string}\n */\nproto.myproject.ProjectRes.prototype.getCurrentsprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.myproject.ProjectRes.prototype.setCurrentsprintid = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\ngoog.object.extend(exports, proto.myproject);\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.teamtask.AddMemberReq', null, global);\ngoog.exportSymbol('proto.teamtask.AddNewTeamReq', null, global);\ngoog.exportSymbol('proto.teamtask.DeleteTeamReq', null, global);\ngoog.exportSymbol('proto.teamtask.GetAllMemberReq', null, global);\ngoog.exportSymbol('proto.teamtask.GetAllTeamReq', null, global);\ngoog.exportSymbol('proto.teamtask.GetAllTeamRes', null, global);\ngoog.exportSymbol('proto.teamtask.RemoveMemberReq', null, global);\ngoog.exportSymbol('proto.teamtask.TeamRes', null, global);\ngoog.exportSymbol('proto.teamtask.UpdateMemberReq', null, global);\ngoog.exportSymbol('proto.teamtask.UpdateTeamReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.GetAllTeamReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.GetAllTeamReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.GetAllTeamReq.displayName = 'proto.teamtask.GetAllTeamReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.GetAllTeamReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.GetAllTeamReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    accesstoken: msg.getAccesstoken(),\n    projectid: msg.getProjectid(),\n    option: msg.getOption()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.GetAllTeamReq}\n */\nproto.teamtask.GetAllTeamReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.GetAllTeamReq;\n  return proto.teamtask.GetAllTeamReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.GetAllTeamReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.GetAllTeamReq}\n */\nproto.teamtask.GetAllTeamReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOption(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.GetAllTeamReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.GetAllTeamReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getOption();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.GetAllTeamReq} The clone.\n */\nproto.teamtask.GetAllTeamReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.GetAllTeamReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.GetAllTeamReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string accessToken = 2;\n * @return {string}\n */\nproto.teamtask.GetAllTeamReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string projectId = 3;\n * @return {string}\n */\nproto.teamtask.GetAllTeamReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string option = 4;\n * @return {string}\n */\nproto.teamtask.GetAllTeamReq.prototype.getOption = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamReq.prototype.setOption = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.GetAllTeamRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.GetAllTeamRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.GetAllTeamRes.displayName = 'proto.teamtask.GetAllTeamRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.GetAllTeamRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.GetAllTeamRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    teamid: msg.getTeamid(),\n    status: msg.getStatus(),\n    nummember: msg.getNummember(),\n    name: msg.getName(),\n    department: msg.getDepartment(),\n    description: msg.getDescription()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.GetAllTeamRes}\n */\nproto.teamtask.GetAllTeamRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.GetAllTeamRes;\n  return proto.teamtask.GetAllTeamRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.GetAllTeamRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.GetAllTeamRes}\n */\nproto.teamtask.GetAllTeamRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNummember(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDepartment(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.GetAllTeamRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.GetAllTeamRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getNummember();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDepartment();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.GetAllTeamRes} The clone.\n */\nproto.teamtask.GetAllTeamRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.GetAllTeamRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string teamId = 1;\n * @return {string}\n */\nproto.teamtask.GetAllTeamRes.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamRes.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string status = 2;\n * @return {string}\n */\nproto.teamtask.GetAllTeamRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string numMember = 3;\n * @return {string}\n */\nproto.teamtask.GetAllTeamRes.prototype.getNummember = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamRes.prototype.setNummember = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string name = 4;\n * @return {string}\n */\nproto.teamtask.GetAllTeamRes.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamRes.prototype.setName = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string department = 6;\n * @return {string}\n */\nproto.teamtask.GetAllTeamRes.prototype.getDepartment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamRes.prototype.setDepartment = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string description = 7;\n * @return {string}\n */\nproto.teamtask.GetAllTeamRes.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamRes.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.TeamRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.TeamRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.TeamRes.displayName = 'proto.teamtask.TeamRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.TeamRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.TeamRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.TeamRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.TeamRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    id: msg.getId(),\n    username: msg.getUsername(),\n    name: msg.getName(),\n    option: msg.getOption()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.TeamRes}\n */\nproto.teamtask.TeamRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.TeamRes;\n  return proto.teamtask.TeamRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.TeamRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.TeamRes}\n */\nproto.teamtask.TeamRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOption(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.TeamRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.TeamRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.TeamRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.TeamRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getOption();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.TeamRes} The clone.\n */\nproto.teamtask.TeamRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.TeamRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.teamtask.TeamRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string id = 2;\n * @return {string}\n */\nproto.teamtask.TeamRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string username = 3;\n * @return {string}\n */\nproto.teamtask.TeamRes.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamRes.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string name = 4;\n * @return {string}\n */\nproto.teamtask.TeamRes.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamRes.prototype.setName = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string option = 5;\n * @return {string}\n */\nproto.teamtask.TeamRes.prototype.getOption = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamRes.prototype.setOption = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.AddNewTeamReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.AddNewTeamReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.AddNewTeamReq.displayName = 'proto.teamtask.AddNewTeamReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.AddNewTeamReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.AddNewTeamReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.AddNewTeamReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.AddNewTeamReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    name: msg.getName(),\n    description: msg.getDescription(),\n    department: msg.getDepartment(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.AddNewTeamReq}\n */\nproto.teamtask.AddNewTeamReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.AddNewTeamReq;\n  return proto.teamtask.AddNewTeamReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.AddNewTeamReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.AddNewTeamReq}\n */\nproto.teamtask.AddNewTeamReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDepartment(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.AddNewTeamReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.AddNewTeamReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.AddNewTeamReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.AddNewTeamReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDepartment();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.AddNewTeamReq} The clone.\n */\nproto.teamtask.AddNewTeamReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.AddNewTeamReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.AddNewTeamReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.AddNewTeamReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nproto.teamtask.AddNewTeamReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string description = 4;\n * @return {string}\n */\nproto.teamtask.AddNewTeamReq.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamReq.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string department = 5;\n * @return {string}\n */\nproto.teamtask.AddNewTeamReq.prototype.getDepartment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamReq.prototype.setDepartment = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string accessToken = 6;\n * @return {string}\n */\nproto.teamtask.AddNewTeamReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.UpdateTeamReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.UpdateTeamReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.UpdateTeamReq.displayName = 'proto.teamtask.UpdateTeamReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.UpdateTeamReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.UpdateTeamReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.UpdateTeamReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.UpdateTeamReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    teamid: msg.getTeamid(),\n    name: msg.getName(),\n    description: msg.getDescription(),\n    department: msg.getDepartment(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.UpdateTeamReq}\n */\nproto.teamtask.UpdateTeamReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.UpdateTeamReq;\n  return proto.teamtask.UpdateTeamReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.UpdateTeamReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.UpdateTeamReq}\n */\nproto.teamtask.UpdateTeamReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDepartment(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.UpdateTeamReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.UpdateTeamReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.UpdateTeamReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.UpdateTeamReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDepartment();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.UpdateTeamReq} The clone.\n */\nproto.teamtask.UpdateTeamReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.UpdateTeamReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.UpdateTeamReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamId = 2;\n * @return {string}\n */\nproto.teamtask.UpdateTeamReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string name = 3;\n * @return {string}\n */\nproto.teamtask.UpdateTeamReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string description = 4;\n * @return {string}\n */\nproto.teamtask.UpdateTeamReq.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamReq.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string department = 5;\n * @return {string}\n */\nproto.teamtask.UpdateTeamReq.prototype.getDepartment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamReq.prototype.setDepartment = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string accessToken = 6;\n * @return {string}\n */\nproto.teamtask.UpdateTeamReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.DeleteTeamReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.DeleteTeamReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.DeleteTeamReq.displayName = 'proto.teamtask.DeleteTeamReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.DeleteTeamReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.DeleteTeamReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.DeleteTeamReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.DeleteTeamReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    teamid: msg.getTeamid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.DeleteTeamReq}\n */\nproto.teamtask.DeleteTeamReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.DeleteTeamReq;\n  return proto.teamtask.DeleteTeamReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.DeleteTeamReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.DeleteTeamReq}\n */\nproto.teamtask.DeleteTeamReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.DeleteTeamReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.DeleteTeamReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.DeleteTeamReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.DeleteTeamReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.DeleteTeamReq} The clone.\n */\nproto.teamtask.DeleteTeamReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.DeleteTeamReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.DeleteTeamReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.DeleteTeamReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamId = 2;\n * @return {string}\n */\nproto.teamtask.DeleteTeamReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.DeleteTeamReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string projectId = 3;\n * @return {string}\n */\nproto.teamtask.DeleteTeamReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.DeleteTeamReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.DeleteTeamReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.DeleteTeamReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.AddMemberReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.AddMemberReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.AddMemberReq.displayName = 'proto.teamtask.AddMemberReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.AddMemberReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.AddMemberReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.AddMemberReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.AddMemberReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    teamid: msg.getTeamid(),\n    role: msg.getRole(),\n    memberemail: msg.getMemberemail(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.AddMemberReq}\n */\nproto.teamtask.AddMemberReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.AddMemberReq;\n  return proto.teamtask.AddMemberReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.AddMemberReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.AddMemberReq}\n */\nproto.teamtask.AddMemberReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMemberemail(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.AddMemberReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.AddMemberReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.AddMemberReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.AddMemberReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getMemberemail();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.AddMemberReq} The clone.\n */\nproto.teamtask.AddMemberReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.AddMemberReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.AddMemberReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddMemberReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamId = 3;\n * @return {string}\n */\nproto.teamtask.AddMemberReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddMemberReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string role = 2;\n * @return {string}\n */\nproto.teamtask.AddMemberReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddMemberReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string memberEmail = 5;\n * @return {string}\n */\nproto.teamtask.AddMemberReq.prototype.getMemberemail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddMemberReq.prototype.setMemberemail = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.AddMemberReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddMemberReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.RemoveMemberReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.RemoveMemberReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.RemoveMemberReq.displayName = 'proto.teamtask.RemoveMemberReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.RemoveMemberReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.RemoveMemberReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.RemoveMemberReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.RemoveMemberReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    teamid: msg.getTeamid(),\n    accesstoken: msg.getAccesstoken(),\n    memberemail: msg.getMemberemail()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.RemoveMemberReq}\n */\nproto.teamtask.RemoveMemberReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.RemoveMemberReq;\n  return proto.teamtask.RemoveMemberReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.RemoveMemberReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.RemoveMemberReq}\n */\nproto.teamtask.RemoveMemberReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMemberemail(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.RemoveMemberReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.RemoveMemberReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.RemoveMemberReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.RemoveMemberReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getMemberemail();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.RemoveMemberReq} The clone.\n */\nproto.teamtask.RemoveMemberReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.RemoveMemberReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.RemoveMemberReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RemoveMemberReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamId = 3;\n * @return {string}\n */\nproto.teamtask.RemoveMemberReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RemoveMemberReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.RemoveMemberReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RemoveMemberReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string memberEmail = 5;\n * @return {string}\n */\nproto.teamtask.RemoveMemberReq.prototype.getMemberemail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RemoveMemberReq.prototype.setMemberemail = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.UpdateMemberReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.UpdateMemberReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.UpdateMemberReq.displayName = 'proto.teamtask.UpdateMemberReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.UpdateMemberReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.UpdateMemberReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.UpdateMemberReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.UpdateMemberReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    teamid: msg.getTeamid(),\n    accesstoken: msg.getAccesstoken(),\n    memberemail: msg.getMemberemail(),\n    role: msg.getRole()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.UpdateMemberReq}\n */\nproto.teamtask.UpdateMemberReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.UpdateMemberReq;\n  return proto.teamtask.UpdateMemberReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.UpdateMemberReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.UpdateMemberReq}\n */\nproto.teamtask.UpdateMemberReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMemberemail(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.UpdateMemberReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.UpdateMemberReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.UpdateMemberReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.UpdateMemberReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getMemberemail();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.UpdateMemberReq} The clone.\n */\nproto.teamtask.UpdateMemberReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.UpdateMemberReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.UpdateMemberReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateMemberReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamId = 3;\n * @return {string}\n */\nproto.teamtask.UpdateMemberReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateMemberReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.UpdateMemberReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateMemberReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string memberEmail = 5;\n * @return {string}\n */\nproto.teamtask.UpdateMemberReq.prototype.getMemberemail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateMemberReq.prototype.setMemberemail = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string role = 2;\n * @return {string}\n */\nproto.teamtask.UpdateMemberReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateMemberReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.GetAllMemberReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.GetAllMemberReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.GetAllMemberReq.displayName = 'proto.teamtask.GetAllMemberReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.GetAllMemberReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.GetAllMemberReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.GetAllMemberReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.GetAllMemberReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    teamid: msg.getTeamid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.GetAllMemberReq}\n */\nproto.teamtask.GetAllMemberReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.GetAllMemberReq;\n  return proto.teamtask.GetAllMemberReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.GetAllMemberReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.GetAllMemberReq}\n */\nproto.teamtask.GetAllMemberReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.GetAllMemberReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllMemberReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.GetAllMemberReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllMemberReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.GetAllMemberReq} The clone.\n */\nproto.teamtask.GetAllMemberReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.GetAllMemberReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.GetAllMemberReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllMemberReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamId = 3;\n * @return {string}\n */\nproto.teamtask.GetAllMemberReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllMemberReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.GetAllMemberReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllMemberReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\ngoog.object.extend(exports, proto.teamtask);\n","import React, { Component } from 'react';\r\nimport cookie from 'react-cookies';\r\nimport { saveLogin, setTeam, addProject, setProject } from './actions'\r\nimport { connect } from 'react-redux'\r\nimport authContext from \"./contexts/authContext\";///////\r\nimport { HashRouter, BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Chat from './service/chat'\r\nimport Loadable from 'react-loadable';\r\nimport {\r\n    getFromStorage,\r\n    setInStorage\r\n} from './service/storage'\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { setIn } from 'immutable';\r\ntoast.configure()\r\n\r\nconst proto = {};\r\nproto.auth = require('./gRPC/auth/auth_grpc_web_pb');\r\nproto.myproject = require('./gRPC/myproject/myproject_grpc_web_pb');\r\nproto.team = require('./gRPC/team/team_grpc_web_pb');\r\n// Containers layout\r\n\r\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\r\n\r\nconst DefaultLayout = Loadable({\r\n    loader: () => import('./containers/DefaultLayout'),\r\n    loading\r\n});\r\nconst Login = Loadable({\r\n    loader: () => import('./views/Pages/Login'),\r\n    loading\r\n});\r\n\r\nconst Register = Loadable({\r\n    loader: () => import('./views/Pages/Register'),\r\n    loading\r\n});\r\n\r\nconst Page404 = Loadable({\r\n    loader: () => import('./views/Pages/Page404'),\r\n    loading\r\n});\r\n\r\nconst Page500 = Loadable({\r\n    loader: () => import('./views/Pages/Page500'),\r\n    loading\r\n});\r\nconst PagePay = Loadable({\r\n    loader: () => import('./views/Pages/PagePay'),\r\n    loading\r\n});\r\n\r\nconst AsyncApp = Loadable({\r\n    loader: () => import('./components/AsyncApp'),\r\n    loading\r\n})\r\n\r\nconst ResetSecond = Loadable({\r\n    loader: () => import('./views/Pages/ResetSecond'),\r\n    loading\r\n});\r\n\r\nconst ResetFirst = Loadable({\r\n    loader: () => import('./views/Pages/ResetFirst'),\r\n    loading\r\n});\r\n\r\n\r\n//Home\r\n\r\nconst HomePayment = Loadable({\r\n    loader: () => import('./views/General/Home/Payment'),\r\n    loading\r\n});\r\nconst HomeFinal = Loadable({\r\n    loader: () => import('./views/General/Home/Final'),\r\n    loading\r\n});\r\nconst Admin = Loadable({\r\n    loader: () => import('./views/Pages/Admin'),\r\n    loading\r\n});\r\n//\r\nconst Demo = Loadable({\r\n    loader: () => import('./homeNav'),\r\n    loading\r\n});\r\n\r\n//PJ\r\nconst MyProject = Loadable({\r\n    loader: () => import('./views/Personal/Project/MyProject'),\r\n    loading\r\n});\r\n\r\n\r\n\r\n\r\n//profile\r\nconst ProfileDetail = Loadable({\r\n    loader: () => import('./views/Personal/Profile/detail'),\r\n    loading\r\n});\r\nconst ProfileEdit = Loadable({\r\n    loader: () => import('./views/Personal/Profile/edit'),\r\n    loading\r\n});\r\n\r\nclass Client extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasProject: false,\r\n            hasTeam: false\r\n        }\r\n    };\r\n    auth = () => {\r\n        const authService = new proto.auth.AuthClient('https://www.overlead.co');\r\n        var metadata = {};\r\n        var AuthSessionReq = new proto.auth.AuthSessionReq();\r\n        AuthSessionReq.setSession(getFromStorage(\"accessToken\"));\r\n        AuthSessionReq.setId(getFromStorage(\"userId\"));\r\n        console.log(\"authSession\")\r\n        let that = this\r\n        let dispatch = this.props.dispatch\r\n        authService.authSession(AuthSessionReq, metadata, (err, response) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                console.log(\"SUCCESS\")\r\n                if (response.getStatus() == \"SUCCESS\") {\r\n\r\n                    dispatch(saveLogin(getFromStorage(\"userId\"), getFromStorage(\"accessToken\"), getFromStorage(\"username\"), getFromStorage(\"name\"), getFromStorage(\"avatar\")))\r\n\r\n                    that.getAllProject();\r\n\r\n\r\n                }\r\n                else {\r\n                    setInStorage(\"userId\", \"\")\r\n                    setInStorage(\"accessToken\", \"\")\r\n                    setInStorage(\"avatar\", \"\")\r\n                    setInStorage(\"name\", \"\")\r\n                    setInStorage(\"username\", \"\")\r\n                }\r\n            }\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        this.auth();\r\n    }\r\n\r\n    //getAllProject\r\n    getAllProject = () => {\r\n        let dispatch = this.props.dispatch\r\n        const myprojectService = new proto.myproject.MyprojectClient('https://www.overlead.co');\r\n        var metadata = {};\r\n        var GetAllProjectReq = new proto.myproject.GetAllProjectReq();\r\n        GetAllProjectReq.setRequesterid(getFromStorage(\"userId\"));\r\n        GetAllProjectReq.setCookie(getFromStorage(\"accessToken\"));\r\n        let that = this\r\n        var response = myprojectService.getAllProject(GetAllProjectReq, metadata)\r\n\r\n        response.on('data', function (response) {\r\n            if (response.getStatus() == \"SUCCESS\") {\r\n                dispatch(addProject(response.getProjectid(), response.getTopic(), response.getProjectname(), response.getStart(), response.getEnd(), response.getPrivate(), response.getProgress()))\r\n                console.log(\"receipt\")\r\n            }\r\n        });\r\n        response.on('status', function (status) {\r\n            let flat = false\r\n            let cp = getFromStorage(\"currentProject\")\r\n            let lastCreated = ''\r\n            let lastName = ''\r\n            that.props.currentProject.map(p => {\r\n                if (p.id == cp) flat = true\r\n                lastCreated = p.id\r\n                lastName = p.projectName\r\n                return p\r\n            })\r\n\r\n            if (flat == false){\r\n                setInStorage('currentProject', lastCreated)\r\n                setInStorage('currentProjectName',lastName)\r\n            }\r\n            if (getFromStorage('currentProject') != null && getFromStorage('currentProject') != '') {\r\n                that.loadAllTeam()                \r\n                that.props.dispatch(setProject(lastCreated, lastName))\r\n            }\r\n\r\n\r\n        });\r\n        response.on('end', function (end) {\r\n            console.log(\"edddddddddddddd\")\r\n            console.log(end)\r\n\r\n        });\r\n\r\n\r\n\r\n    }\r\n    loadAllMember = (id) => {\r\n        console.log(\"loadAllMember\")\r\n        const teamService = new proto.team.TeamClient('https://www.overlead.co');\r\n        var metadata = {};\r\n\r\n        var GetAllMemberReq = new proto.team.GetAllMemberReq();\r\n        GetAllMemberReq.setRequesterid(getFromStorage(\"userId\"));\r\n        GetAllMemberReq.setTeamid(id);\r\n        GetAllMemberReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n\r\n        let that = this\r\n        setInStorage('members', [])\r\n        let response = teamService.getAllMember(GetAllMemberReq, metadata)\r\n\r\n        response.on('data', function (response) {\r\n            if (response.getStatus() == \"SUCCESS\") {\r\n                let mem = getFromStorage('members')\r\n                mem.push({ id: response.getId(), name: response.getName(),username:response.getUsername() })\r\n                setInStorage('members', mem)\r\n            }\r\n        })\r\n        response.on('status', function (status) {\r\n            console.log(\"status\")\r\n            console.log(status.code);\r\n            console.log(status.details);\r\n            console.log(status.metadata);\r\n            console.log(getFromStorage('members'))\r\n        });\r\n        response.on('end', function (end) {\r\n            console.log(\"end\")\r\n            console.log(end)\r\n        });\r\n    }\r\n    loadAllTeam = () => {\r\n        console.log(\"getAllTeam\")\r\n        const teamService = new proto.team.TeamClient('https://www.overlead.co');\r\n        var metadata = {};\r\n\r\n        var GetAllTeamReq = new proto.team.GetAllTeamReq();\r\n        GetAllTeamReq.setRequesterid(getFromStorage(\"userId\"));\r\n        GetAllTeamReq.setProjectid(getFromStorage(\"currentProject\"));\r\n        GetAllTeamReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n        let response = teamService.getAllTeam(GetAllTeamReq, metadata)\r\n        console.log(\"currenProject\" + getFromStorage(\"currentProject\"))\r\n        let that = this\r\n        let lastTeam = ''\r\n        let lastName = ''\r\n        let validTeam = false\r\n        response.on('data', function (response) {\r\n            if (response.getStatus() == \"SUCCESS\") {\r\n                console.log(\"hasTeam\" + response.getTeamid())\r\n\r\n                if (getFromStorage('teamId') == response.getTeamid())\r\n                    validTeam = true\r\n                else {\r\n                    lastTeam = response.getTeamid()\r\n                    lastName = response.getName()\r\n                }\r\n\r\n            }\r\n        })\r\n        response.on('status', function (status) {\r\n            console.log(\"status\" + status.code)\r\n            if (validTeam == false) {\r\n                if (lastTeam != '') {\r\n                    setInStorage('teamId', lastTeam)\r\n                    that.props.dispatch(setTeam(lastTeam, lastName))\r\n                    that.loadAllMember(lastTeam)\r\n                }\r\n            }\r\n            else {\r\n                that.props.dispatch(setTeam(getFromStorage('teamId'), getFromStorage('teamName')))\r\n                that.loadAllMember(getFromStorage('teamId'))\r\n\r\n            }\r\n        });\r\n        response.on('end', function (end) {\r\n\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(\"isLogin:\" + this.props.isLogin)\r\n        console.log('hasProject' + this.props.hasProject)\r\n        console.log('hasTeam' + this.props.hasTeam)\r\n        return (\r\n            <authContext.Provider>\r\n                <BrowserRouter>\r\n                    {\r\n                        this.props.isLogin ?\r\n                            (\r\n                                this.props.hasProject ?\r\n                                    (this.props.hasTeam ?\r\n                                        <Switch>\r\n                                            <Route exact path=\"/homeNav\" name=\"HomeNav\" component={Demo} />\r\n\r\n                                            <Route exact path=\"/Home/Payment\" name=\"HomePayment\" component={HomePayment} />\r\n                                            <Route exact path=\"/Home/Final\" name=\"HomeFinal\" component={HomeFinal} />\r\n\r\n                                            <Route exact path=\"/myproject\" name=\"myproject\" component={MyProject} />\r\n\r\n                                            <Route exact path=\"/Profile/Detail\" name=\"ProfileDetail\" component={ProfileDetail} />\r\n                                            <Route exact path=\"/Profile/Edit\" name=\"ProjectTodo\" component={ProfileEdit} />\r\n\r\n\r\n                                            <Route exact path=\"/chat\" name=\"Chat Page\" component={Chat} />\r\n\r\n\r\n                                            <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\r\n                                            <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\r\n                                            <Route exact path=\"/pay\" name=\"Page Pay\" component={PagePay} />\r\n                                            <Route exact path=\"/async\" name=\"page test\" component={AsyncApp} />\r\n                                            <Route exact path=\"/dashboard\" name=\"dashboard\" component={DefaultLayout} />\r\n\r\n\r\n                                            <Route path=\"/\" name=\"Home\" component={DefaultLayout} />\r\n\r\n\r\n                                        </Switch>\r\n                                        :\r\n                                        <Switch>\r\n                                            <Route exact path=\"/pages/Admin\" name=\"Admin\" component={Admin} />\r\n\r\n                                            <Route exact path=\"/homeNav\" name=\"HomeNav\" component={Demo} />\r\n\r\n                                            <Route exact path=\"/Home/Payment\" name=\"HomePayment\" component={HomePayment} />\r\n                                            <Route exact path=\"/Home/Final\" name=\"HomeFinal\" component={HomeFinal} />\r\n\r\n                                            <Route exact path=\"/myproject\" name=\"myproject\" component={MyProject} />\r\n\r\n                                            <Route exact path=\"/Profile/Detail\" name=\"ProfileDetail\" component={ProfileDetail} />\r\n                                            <Route exact path=\"/Profile/Edit\" name=\"ProjectTodo\" component={ProfileEdit} />\r\n\r\n\r\n                                            <Route exact path=\"/chat\" name=\"Chat Page\" component={Chat} />\r\n\r\n\r\n                                            <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\r\n                                            <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\r\n                                            <Route exact path=\"/pay\" name=\"Page Pay\" component={PagePay} />\r\n                                            <Route exact path=\"/async\" name=\"page test\" component={AsyncApp} />\r\n                                            <Route exact path=\"/dashboard\" name=\"dashboard\" component={DefaultLayout} />\r\n\r\n\r\n                                            <Route path=\"/\" name=\"Home\" component={DefaultLayout} />\r\n\r\n\r\n                                        </Switch>\r\n\r\n                                    ) :\r\n                                    (this.props.hasTeam ?\r\n                                        <Switch>\r\n                                            <Route exact path=\"/homeNav\" name=\"HomeNav\" component={Demo} />\r\n\r\n                                            <Route exact path=\"/Home/Payment\" name=\"HomePayment\" component={HomePayment} />\r\n                                            <Route exact path=\"/Home/Final\" name=\"HomeFinal\" component={HomeFinal} />\r\n\r\n                                            <Route exact path=\"/myproject\" name=\"myproject\" component={MyProject} />\r\n\r\n                                            <Route exact path=\"/Profile/Detail\" name=\"ProfileDetail\" component={ProfileDetail} />\r\n                                            <Route exact path=\"/Profile/Edit\" name=\"ProjectTodo\" component={ProfileEdit} />\r\n\r\n\r\n                                            <Route exact path=\"/chat\" name=\"Chat Page\" component={Chat} />\r\n\r\n\r\n                                            <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\r\n                                            <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\r\n                                            <Route exact path=\"/pay\" name=\"Page Pay\" component={PagePay} />\r\n                                            <Route exact path=\"/async\" name=\"page test\" component={AsyncApp} />\r\n\r\n\r\n                                            <Route path=\"/\" name=\"Home\" component={MyProject} />\r\n\r\n\r\n                                        </Switch>\r\n                                        :\r\n                                        <Switch>\r\n                                            <Route exact path=\"/homeNav\" name=\"HomeNav\" component={Demo} />\r\n\r\n                                            <Route exact path=\"/Home/Payment\" name=\"HomePayment\" component={HomePayment} />\r\n                                            <Route exact path=\"/Home/Final\" name=\"HomeFinal\" component={HomeFinal} />\r\n\r\n                                            <Route exact path=\"/myproject\" name=\"myproject\" component={MyProject} />\r\n\r\n                                            <Route exact path=\"/Profile/Detail\" name=\"ProfileDetail\" component={ProfileDetail} />\r\n                                            <Route exact path=\"/Profile/Edit\" name=\"ProjectTodo\" component={ProfileEdit} />\r\n\r\n\r\n                                            <Route exact path=\"/chat\" name=\"Chat Page\" component={Chat} />\r\n\r\n\r\n                                            <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\r\n                                            <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\r\n                                            <Route exact path=\"/pay\" name=\"Page Pay\" component={PagePay} />\r\n\r\n                                            <Route path=\"/\" name=\"Home\" component={MyProject} />\r\n\r\n\r\n                                        </Switch>\r\n                                    )\r\n\r\n\r\n                            )\r\n\r\n                            : <div>\r\n                                <Switch>\r\n                                    <Route exact path=\"/Home/Final\" name=\"HomeFinal\" component={HomeFinal} />\r\n                                    <Route exact path=\"/register\" name=\"Register Page\" component={Register} />\r\n                                    <Route exact path=\"/ResetFirst\" name=\"ResetSecond Page\" component={ResetFirst} />\r\n                                    <Route exact path=\"/ResetSecond\" name=\"ResetSecond Page\" component={ResetSecond} />\r\n                                    <Route exact path=\"/login\" name=\"Login Page\" component={Login} />\r\n                                    <Route exact path=\"/async\" name=\"page test\" component={AsyncApp} />\r\n\r\n                                    <Route path=\"/\" name=\"Home\" component={HomeFinal} />\r\n\r\n                                </Switch>\r\n\r\n                            </div>\r\n                    }\r\n                </BrowserRouter>\r\n            </authContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { changeStatusLogin, updateProjectLoaded, changeStatusProject } = state\r\n    const { isLogin, } = changeStatusLogin\r\n    const currentProject = updateProjectLoaded.project\r\n    const { hasProject, hasTeam, random } = changeStatusProject\r\n    return {\r\n        isLogin, currentProject, hasProject, hasTeam, random\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Client);\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n  SELECT_SUBREDDIT,\r\n  INVALIDATE_SUBREDDIT,\r\n  REQUEST_POSTS,\r\n  RECEIVE_POSTS,\r\n  DO_LOGOUT,\r\n  DO_LOGIN,\r\n  GET_CURENT_PROJECT,\r\n  SET_PROJECT,\r\n  UPDATE_PROJECT,\r\n  DELETE_PROJECT,\r\n  ADD_PROJECT,\r\n  SET_TEAM,\r\n  LOAD_TEAM\r\n} from '../actions'\r\nimport {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../service/storage'\r\nimport cookie from 'react-cookies';\r\n\r\nconst proto = {};\r\nproto.myproject = require('../gRPC/myproject/myproject_grpc_web_pb');\r\n\r\nfunction selectedSubreddit(state = 'reactjs', action) {\r\n  switch (action.type) {\r\n    case SELECT_SUBREDDIT:\r\n      return action.subreddit\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction posts(\r\n  state = {\r\n    isFetching: false,\r\n    didInvalidate: false,\r\n    items: []\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case INVALIDATE_SUBREDDIT:\r\n      return Object.assign({}, state, {\r\n        didInvalidate: true\r\n      })\r\n    case REQUEST_POSTS:\r\n      return Object.assign({}, state, {\r\n        isFetching: true,\r\n        didInvalidate: false\r\n      })\r\n    case RECEIVE_POSTS:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        didInvalidate: false,\r\n        items: action.posts,\r\n        lastUpdated: action.receivedAt\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction postsBySubreddit(state = {}, action) {\r\n  switch (action.type) {\r\n    case INVALIDATE_SUBREDDIT:\r\n    case RECEIVE_POSTS:\r\n    case REQUEST_POSTS:\r\n      return Object.assign({}, state, {\r\n        [action.subreddit]: posts(state[action.subreddit], action)\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//update state login\r\nfunction changeStatusLogin(state = {isLogin:false}, action) {\r\n  console.log(\"changeStatusLogin\"+action.type)\r\n  console.log(action)\r\n  switch (action.type) {\r\n    case DO_LOGIN:    \r\n      if (action.avatar!=undefined && action.avatar!=\"\")\r\n      setInStorage('avatar',action.avatar)\r\n      setInStorage('accessToken',action.token)\r\n      setInStorage('userId',action.id)\r\n      return Object.assign({}, {\r\n                id:action.id,\r\n                token:action.token,\r\n                isLogin:true,\r\n                email:action.email,\r\n                name:action.name,\r\n                avatar:action.avatar})      \r\n    case DO_LOGOUT:\r\n      setInStorage('avatar',\"\")\r\n      setInStorage('accessToken',\"\")\r\n      setInStorage('userId',\"\")\r\n      setInStorage('teamId',\"\")\r\n      setInStorage('currentProject',\"\")\r\n      return Object.assign({},{isLogin:false})\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//state of current project\r\nfunction changeStatusProject(state={projectId:\"noid\"},action){\r\n  console.log(\"changeStatusProject\")\r\n  switch (action.type) {    \r\n    case SET_PROJECT:\r\n      return Object.assign({},state,{\r\n        projectId:action.id,\r\n        projectName:action.name,\r\n        hasProject:true,\r\n        random:Math.random()\r\n      })\r\n    case GET_CURENT_PROJECT:    \r\n    case SET_TEAM:\r\n        setInStorage('teamId',action.id)\r\n        setInStorage('teamName',action.name)\r\n        return Object.assign({},state,{\r\n          teamId:action.id,\r\n          teamName:action.name,\r\n          hasTeam:true,\r\n          random:Math.random()\r\n        })\r\n    case LOAD_TEAM:\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//load all project to cache\r\nfunction updateProjectLoaded(state={project:[],needUpdate:false},action){\r\n  console.log(\"updateProjectLoaded\")\r\n  let newProject\r\n  switch (action.type) {    \r\n    case ADD_PROJECT:\r\n        state.project.push(Object.assign({},{\r\n            id:action.id,\r\n            ownerName:action.ownerName,\r\n            topic:action.topic,\r\n            projectName:action.name,\r\n            start:action.start,\r\n            end:action.end,\r\n            private:action.isPrivate,     \r\n            progress:action.progress     \r\n        }))\r\n        return Object.assign({}, state,{needUpdate:action.id});\r\n    case UPDATE_PROJECT: \r\n        newProject=[];\r\n        state.project=state.project.map(function (item, key) {\r\n            if (item.id!=action.id) newProject.push(item)\r\n              else{\r\n                newProject.push(Object.assign({},{\r\n                  id:action.id,\r\n                  ownerName:action.ownerName,\r\n                  topic:action.topic,\r\n                  projectName:action.name,\r\n                  start:action.start,\r\n                  end:action.end,\r\n                  private:action.isPrivate,     \r\n                  progress:action.progress\r\n              }))}})      \r\n        return Object.assign({},state, {project:newProject},{needUpdate:action.id});\r\n        \r\n    case DELETE_PROJECT:    \r\n        newProject=[];\r\n        state.project=state.project.map(function (item, key) {\r\n            if (item.id!=action.id) newProject.push(item)\r\n        })\r\n        return Object.assign({},state, {project:newProject},{needUpdate:action.id});\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst rootReducer = combineReducers({\r\n  postsBySubreddit,\r\n  selectedSubreddit,\r\n  changeStatusLogin,\r\n  changeStatusProject,\r\n  updateProjectLoaded,\r\n})\r\n\r\nexport default rootReducer","//style \r\nimport './App.scss';\r\n\r\nimport React, { Component } from 'react';\r\n\r\n//context\r\nimport Client from \"./Client\"\r\n\r\n//redux\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from './reducers'\r\nimport { Provider } from 'react-redux'\r\n\r\n//\r\nconst loggerMiddleware = createLogger()\r\n\r\nfunction configureStore(preloadedState) {\r\n  return createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    applyMiddleware(thunkMiddleware, loggerMiddleware)\r\n  )\r\n}\r\n\r\nconst store = configureStore()\r\n\r\n// store.subscribe(() =>{console.log(\"subscribe\")\r\n//  console.log(store.getState())})\r\n\r\nclass App extends Component {\r\n  \r\n\r\n  render() {   \r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <Client />\r\n    </Provider>   \r\n)}}\r\n\r\n\r\nexport default (App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}