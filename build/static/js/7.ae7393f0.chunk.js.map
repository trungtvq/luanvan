{"version":3,"sources":["gRPC/userstory/userstory_grpc_web_pb.js","gRPC/userstory/userstory_pb.js"],"names":["grpc","web","require","proto","userstory","UserStoryClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","credentials_","options_","UserStoryPromiseClient","methodInfo_UserStory_addNewUserStory","AbstractClientBase","MethodInfo","UserStoryRes","request","serializeBinary","deserializeBinary","prototype","addNewUserStory","metadata","callback","rpcCall","unaryCall","methodInfo_UserStory_updateUserStory","updateUserStory","methodInfo_UserStory_deleteUserStory","deleteUserStory","methodInfo_UserStory_sendToProductBacklog","sendToProductBacklog","methodInfo_UserStory_getAllUserStory","GetAllUserStoryRes","getAllUserStory","serverStreaming","module","exports","jspb","goog","global","Function","exportSymbol","SendToProductBacklogReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","id","getId","priority","getPriority","estimation","getEstimation","statusbacklog","getStatusbacklog","accesstoken","getAccesstoken","sprint","getSprint","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setRequesterid","setProjectid","setId","setPriority","setEstimation","setStatusbacklog","setAccesstoken","setSprint","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","length","writeString","cloneMessage","getFieldProto3","setField","AddNewUserStoryReq","role","getRole","want","getWant","so","getSo","name","getName","setRole","setWant","setSo","setName","status","getStatus","setStatus","UpdateUserStoryReq","userstoryid","getUserstoryid","setUserstoryid","DeleteUserStoryReq","GetAllUserStoryReq","object","extend"],"mappings":"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","file":"static/js/7.ae7393f0.chunk.js","sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for userstory\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.userstory = require('./userstory_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.userstory.UserStoryClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.userstory.UserStoryPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.AddNewUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_addNewUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.AddNewUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.AddNewUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.addNewUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/addNewUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_addNewUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.AddNewUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.addNewUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/addNewUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_addNewUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.UpdateUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_updateUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.UpdateUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.UpdateUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.updateUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/updateUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_updateUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.UpdateUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.updateUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/updateUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_updateUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.DeleteUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_deleteUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.DeleteUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.DeleteUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.deleteUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/deleteUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_deleteUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.DeleteUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.deleteUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/deleteUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_deleteUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.SendToProductBacklogReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_sendToProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.SendToProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.SendToProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.sendToProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/sendToProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_UserStory_sendToProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.SendToProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.sendToProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/sendToProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_UserStory_sendToProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.GetAllUserStoryReq,\n *   !proto.userstory.GetAllUserStoryRes>}\n */\nconst methodInfo_UserStory_getAllUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.GetAllUserStoryRes,\n  /** @param {!proto.userstory.GetAllUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.GetAllUserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.GetAllUserStoryReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.GetAllUserStoryRes>}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.getAllUserStory =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/userstory.UserStory/getAllUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_getAllUserStory);\n};\n\n\n/**\n * @param {!proto.userstory.GetAllUserStoryReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.GetAllUserStoryRes>}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryPromiseClient.prototype.getAllUserStory =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/userstory.UserStory/getAllUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_getAllUserStory);\n};\n\n\nmodule.exports = proto.userstory;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.userstory.AddNewUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.DeleteUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.GetAllUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.GetAllUserStoryRes', null, global);\ngoog.exportSymbol('proto.userstory.SendToProductBacklogReq', null, global);\ngoog.exportSymbol('proto.userstory.UpdateUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.UserStoryRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.SendToProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.SendToProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.SendToProductBacklogReq.displayName = 'proto.userstory.SendToProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.SendToProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.SendToProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.SendToProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.SendToProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    id: msg.getId(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    statusbacklog: msg.getStatusbacklog(),\n    accesstoken: msg.getAccesstoken(),\n    sprint: msg.getSprint()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.SendToProductBacklogReq}\n */\nproto.userstory.SendToProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.SendToProductBacklogReq;\n  return proto.userstory.SendToProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.SendToProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.SendToProductBacklogReq}\n */\nproto.userstory.SendToProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.SendToProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.SendToProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.SendToProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.SendToProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getSprint();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.SendToProductBacklogReq} The clone.\n */\nproto.userstory.SendToProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.SendToProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string id = 3;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setId = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string priority = 4;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string estimation = 5;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 6;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string accessToken = 7;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string sprint = 8;\n * @return {string}\n */\nproto.userstory.SendToProductBacklogReq.prototype.getSprint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.SendToProductBacklogReq.prototype.setSprint = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.AddNewUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.AddNewUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.AddNewUserStoryReq.displayName = 'proto.userstory.AddNewUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.AddNewUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.AddNewUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.AddNewUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.AddNewUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    accesstoken: msg.getAccesstoken(),\n    name: msg.getName()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.AddNewUserStoryReq}\n */\nproto.userstory.AddNewUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.AddNewUserStoryReq;\n  return proto.userstory.AddNewUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.AddNewUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.AddNewUserStoryReq}\n */\nproto.userstory.AddNewUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.AddNewUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.AddNewUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.AddNewUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.AddNewUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.AddNewUserStoryReq} The clone.\n */\nproto.userstory.AddNewUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.AddNewUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string accessToken = 6;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string name = 7;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.UserStoryRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.UserStoryRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.UserStoryRes.displayName = 'proto.userstory.UserStoryRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.UserStoryRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.UserStoryRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.UserStoryRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.UserStoryRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    id: msg.getId()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.UserStoryRes}\n */\nproto.userstory.UserStoryRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.UserStoryRes;\n  return proto.userstory.UserStoryRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.UserStoryRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.UserStoryRes}\n */\nproto.userstory.UserStoryRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.UserStoryRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UserStoryRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.UserStoryRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UserStoryRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.UserStoryRes} The clone.\n */\nproto.userstory.UserStoryRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.UserStoryRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.userstory.UserStoryRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UserStoryRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string id = 2;\n * @return {string}\n */\nproto.userstory.UserStoryRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UserStoryRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.UpdateUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.UpdateUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.UpdateUserStoryReq.displayName = 'proto.userstory.UpdateUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.UpdateUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.UpdateUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.UpdateUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.UpdateUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    userstoryid: msg.getUserstoryid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.UpdateUserStoryReq}\n */\nproto.userstory.UpdateUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.UpdateUserStoryReq;\n  return proto.userstory.UpdateUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.UpdateUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.UpdateUserStoryReq}\n */\nproto.userstory.UpdateUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserstoryid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.UpdateUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UpdateUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.UpdateUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UpdateUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getUserstoryid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.UpdateUserStoryReq} The clone.\n */\nproto.userstory.UpdateUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.UpdateUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string userStoryId = 3;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getUserstoryid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setUserstoryid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string role = 4;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string want = 5;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string so = 6;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string accessToken = 7;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.DeleteUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.DeleteUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.DeleteUserStoryReq.displayName = 'proto.userstory.DeleteUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.DeleteUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.DeleteUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.DeleteUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.DeleteUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    userstoryid: msg.getUserstoryid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.DeleteUserStoryReq}\n */\nproto.userstory.DeleteUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.DeleteUserStoryReq;\n  return proto.userstory.DeleteUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.DeleteUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.DeleteUserStoryReq}\n */\nproto.userstory.DeleteUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserstoryid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.DeleteUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.DeleteUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.DeleteUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.DeleteUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getUserstoryid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.DeleteUserStoryReq} The clone.\n */\nproto.userstory.DeleteUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.DeleteUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string userStoryId = 3;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getUserstoryid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setUserstoryid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.GetAllUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.GetAllUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.GetAllUserStoryReq.displayName = 'proto.userstory.GetAllUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.GetAllUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.GetAllUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.GetAllUserStoryReq}\n */\nproto.userstory.GetAllUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.GetAllUserStoryReq;\n  return proto.userstory.GetAllUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.GetAllUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.GetAllUserStoryReq}\n */\nproto.userstory.GetAllUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.GetAllUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.GetAllUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.GetAllUserStoryReq} The clone.\n */\nproto.userstory.GetAllUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.GetAllUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.GetAllUserStoryRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.GetAllUserStoryRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.GetAllUserStoryRes.displayName = 'proto.userstory.GetAllUserStoryRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.GetAllUserStoryRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.GetAllUserStoryRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    status: msg.getStatus(),\n    id: msg.getId(),\n    name: msg.getName()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.GetAllUserStoryRes}\n */\nproto.userstory.GetAllUserStoryRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.GetAllUserStoryRes;\n  return proto.userstory.GetAllUserStoryRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.GetAllUserStoryRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.GetAllUserStoryRes}\n */\nproto.userstory.GetAllUserStoryRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.GetAllUserStoryRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.GetAllUserStoryRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.GetAllUserStoryRes} The clone.\n */\nproto.userstory.GetAllUserStoryRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.GetAllUserStoryRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string role = 1;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string want = 2;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string so = 3;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string status = 4;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string id = 5;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string name = 6;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setName = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto.userstory);\n"],"sourceRoot":""}