{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","gRPC/productbacklog/productbacklog_grpc_web_pb.js","gRPC/productbacklog/productbacklog_pb.js","views/Workspace/Po/ProductBacklog/Detail/Detail.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","__webpack_exports__","grpc","web","require","proto","productbacklog","ProductBacklogClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","credentials_","options_","ProductBacklogPromiseClient","methodInfo_ProductBacklog_addNewProductBacklog","AbstractClientBase","MethodInfo","ProductBacklogRes","request","serializeBinary","deserializeBinary","addNewProductBacklog","metadata","callback","rpcCall","unaryCall","methodInfo_ProductBacklog_updateProductBacklog","updateProductBacklog","methodInfo_ProductBacklog_deleteProductBacklog","deleteProductBacklog","methodInfo_ProductBacklog_sendToSprintBacklog","sendToSprintBacklog","methodInfo_ProductBacklog_getAllProductBacklog","GetAllProductBacklogRes","getAllProductBacklog","serverStreaming","module","exports","jspb","goog","global","Function","exportSymbol","AddNewProductBacklogReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","role","getRole","want","getWant","so","getSo","statusbacklog","getStatusbacklog","priority","getPriority","estimation","getEstimation","sprintid","getSprintid","accesstoken","getAccesstoken","title","getTitle","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setRequesterid","setProjectid","setRole","setWant","setSo","setStatusbacklog","setPriority","setEstimation","setSprintid","setAccesstoken","setTitle","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","writeString","cloneMessage","getFieldProto3","setField","error","getError","status","getStatus","productbacklogid","getProductbacklogid","setError","setStatus","setProductbacklogid","UpdateProductBacklogReq","sprint","getSprint","setSprint","DeleteProductBacklogReq","SendToSprintBacklogReq","start","getStart","deadline","getDeadline","setStart","setDeadline","GetAllProductBacklogReq","object","extend","Detail","props","_this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","toggleAdd","setState","prevState","modalAdd","toggleEdit","modalEdit","toggleSend","modalSend","onTextboxChangeRole","event","target","onTextboxChangeWant","onTextboxChangeSo","onTextboxChangePriority","onTextboxChangeEstimation","onTextboxChangeTitle","onTextboxChangeSprint","onTextboxChangeStatus","handleAdd","console","log","productbacklogService","state","cookie","load","err","response","_ref","data","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","id","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","modalActionStatus","actionStatus","handleDelete","currentTarget","dataset","filter","e","handleUpdate","setUserstoryid","updateId","setSprintId","tmpdata","map","p","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","sprintId","handleSend","that","on","code","details","end","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","xs","md","reactstrap__WEBPACK_IMPORTED_MODULE_11__","type","name","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_12__","size","color","class","reactstrap__WEBPACK_IMPORTED_MODULE_13__","className","onClick","buttonLabel","reactstrap__WEBPACK_IMPORTED_MODULE_14__","isOpen","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","row","reactstrap__WEBPACK_IMPORTED_MODULE_19__","htmlFor","onChange","rows","reactstrap__WEBPACK_IMPORTED_MODULE_20__","item","key","action","data-id","Component","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","noGutters","bool","string","cssModule","form","Row","Tag","attributes","classes","defaultProps","inverse","block","body","outline","innerRef","oneOfType","func","Card","ref"],"mappings":"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","file":"static/js/38.58622814.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","/**\n * @fileoverview gRPC-Web generated client stub for productbacklog\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.productbacklog = require('./productbacklog_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.productbacklog.ProductBacklogClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.productbacklog.ProductBacklogPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.AddNewProductBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_addNewProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.AddNewProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.AddNewProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.addNewProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/addNewProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_addNewProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.AddNewProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.addNewProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/addNewProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_addNewProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.UpdateProductBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_updateProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.UpdateProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.UpdateProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.updateProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/updateProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_updateProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.UpdateProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.updateProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/updateProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_updateProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.DeleteProductBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_deleteProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.DeleteProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.DeleteProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.deleteProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/deleteProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_deleteProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.DeleteProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.deleteProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/deleteProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_deleteProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.SendToSprintBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_sendToSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.SendToSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.SendToSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.sendToSprintBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/sendToSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_sendToSprintBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.SendToSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.sendToSprintBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/sendToSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_sendToSprintBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.GetAllProductBacklogReq,\n *   !proto.productbacklog.GetAllProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_getAllProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.GetAllProductBacklogRes,\n  /** @param {!proto.productbacklog.GetAllProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.GetAllProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.GetAllProductBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.GetAllProductBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.getAllProductBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/productbacklog.ProductBacklog/getAllProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_getAllProductBacklog);\n};\n\n\n/**\n * @param {!proto.productbacklog.GetAllProductBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.GetAllProductBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.getAllProductBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/productbacklog.ProductBacklog/getAllProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_getAllProductBacklog);\n};\n\n\nmodule.exports = proto.productbacklog;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.productbacklog.AddNewProductBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.DeleteProductBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.GetAllProductBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.GetAllProductBacklogRes', null, global);\ngoog.exportSymbol('proto.productbacklog.ProductBacklogRes', null, global);\ngoog.exportSymbol('proto.productbacklog.SendToSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.UpdateProductBacklogReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.AddNewProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.AddNewProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.AddNewProductBacklogReq.displayName = 'proto.productbacklog.AddNewProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.AddNewProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.AddNewProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.AddNewProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    accesstoken: msg.getAccesstoken(),\n    title: msg.getTitle()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.AddNewProductBacklogReq}\n */\nproto.productbacklog.AddNewProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.AddNewProductBacklogReq;\n  return proto.productbacklog.AddNewProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.AddNewProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.AddNewProductBacklogReq}\n */\nproto.productbacklog.AddNewProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.AddNewProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.AddNewProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.AddNewProductBacklogReq} The clone.\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.AddNewProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 6;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string priority = 7;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string estimation = 8;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string sprintId = 9;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string accessToken = 10;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string title = 11;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.ProductBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.ProductBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.ProductBacklogRes.displayName = 'proto.productbacklog.ProductBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.ProductBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.ProductBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.ProductBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.ProductBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    error: msg.getError(),\n    status: msg.getStatus(),\n    productbacklogid: msg.getProductbacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.ProductBacklogRes}\n */\nproto.productbacklog.ProductBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.ProductBacklogRes;\n  return proto.productbacklog.ProductBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.ProductBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.ProductBacklogRes}\n */\nproto.productbacklog.ProductBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.ProductBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.ProductBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.ProductBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.ProductBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.ProductBacklogRes} The clone.\n */\nproto.productbacklog.ProductBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.ProductBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string error = 1;\n * @return {string}\n */\nproto.productbacklog.ProductBacklogRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.ProductBacklogRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string status = 2;\n * @return {string}\n */\nproto.productbacklog.ProductBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.ProductBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.ProductBacklogRes.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.ProductBacklogRes.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.UpdateProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.UpdateProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.UpdateProductBacklogReq.displayName = 'proto.productbacklog.UpdateProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.UpdateProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.UpdateProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.UpdateProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    productbacklogid: msg.getProductbacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprint: msg.getSprint(),\n    accesstoken: msg.getAccesstoken(),\n    title: msg.getTitle(),\n    sprintid: msg.getSprintid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.UpdateProductBacklogReq}\n */\nproto.productbacklog.UpdateProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.UpdateProductBacklogReq;\n  return proto.productbacklog.UpdateProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.UpdateProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.UpdateProductBacklogReq}\n */\nproto.productbacklog.UpdateProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprint(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.UpdateProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.UpdateProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getSprint();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.UpdateProductBacklogReq} The clone.\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.UpdateProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string role = 4;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string want = 5;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string so = 6;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string statusBacklog = 7;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string priority = 8;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string estimation = 9;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string sprint = 10;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getSprint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setSprint = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string accessToken = 11;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string title = 12;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string sprintId = 13;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.DeleteProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.DeleteProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.DeleteProductBacklogReq.displayName = 'proto.productbacklog.DeleteProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.DeleteProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.DeleteProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.DeleteProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    productbacklogid: msg.getProductbacklogid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.DeleteProductBacklogReq}\n */\nproto.productbacklog.DeleteProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.DeleteProductBacklogReq;\n  return proto.productbacklog.DeleteProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.DeleteProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.DeleteProductBacklogReq}\n */\nproto.productbacklog.DeleteProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.DeleteProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.DeleteProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.DeleteProductBacklogReq} The clone.\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.DeleteProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.SendToSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.SendToSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.SendToSprintBacklogReq.displayName = 'proto.productbacklog.SendToSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.SendToSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.SendToSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.SendToSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    productbacklogid: msg.getProductbacklogid(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.SendToSprintBacklogReq}\n */\nproto.productbacklog.SendToSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.SendToSprintBacklogReq;\n  return proto.productbacklog.SendToSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.SendToSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.SendToSprintBacklogReq}\n */\nproto.productbacklog.SendToSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.SendToSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.SendToSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.SendToSprintBacklogReq} The clone.\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.SendToSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string start = 4;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string deadline = 5;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string accessToken = 6;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.GetAllProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.GetAllProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.GetAllProductBacklogReq.displayName = 'proto.productbacklog.GetAllProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.GetAllProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.GetAllProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.GetAllProductBacklogReq}\n */\nproto.productbacklog.GetAllProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.GetAllProductBacklogReq;\n  return proto.productbacklog.GetAllProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.GetAllProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.GetAllProductBacklogReq}\n */\nproto.productbacklog.GetAllProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.GetAllProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.GetAllProductBacklogReq} The clone.\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.GetAllProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.GetAllProductBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.GetAllProductBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.GetAllProductBacklogRes.displayName = 'proto.productbacklog.GetAllProductBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.GetAllProductBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.GetAllProductBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    productbacklogid: msg.getProductbacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    status: msg.getStatus(),\n    error: msg.getError(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    title: msg.getTitle()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.GetAllProductBacklogRes}\n */\nproto.productbacklog.GetAllProductBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.GetAllProductBacklogRes;\n  return proto.productbacklog.GetAllProductBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.GetAllProductBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.GetAllProductBacklogRes}\n */\nproto.productbacklog.GetAllProductBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.GetAllProductBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.GetAllProductBacklogRes} The clone.\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.GetAllProductBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string productBacklogId = 2;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 11;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string status = 9;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string error = 1;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string priority = 6;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string estimation = 7;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string sprintId = 8;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string title = 10;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\ngoog.object.extend(exports, proto.productbacklog);\n","import React, { Component } from 'react';\r\nimport {\r\n  Card, CardHeader, Badge, Button, Col,\r\n  Container, Input, InputGroup, InputGroupAddon, InputGroupText, Row, Table, Pagination, PaginationItem, PaginationLink,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  ModalFooter\r\n} from 'reactstrap';\r\nimport cookie from 'react-cookies';\r\n\r\nconst proto = {};\r\nproto.productbacklog = require('./../../../../../gRPC/productbacklog/productbacklog_grpc_web_pb');\r\n\r\nclass Detail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      modalAdd: false,\r\n      modalEdit: false,\r\n      modalSend: false,\r\n      id: '',\r\n      role: \"\",\r\n      want: \"\",\r\n      so: \"\",\r\n      priority: '',\r\n      estimation: '',\r\n      sprint: '',\r\n      status: \"\",\r\n      title: \"\",\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    var GetAllProductBacklogReq = new proto.productbacklog.GetAllProductBacklogReq();\r\n    GetAllProductBacklogReq.setRequesterid(cookie.load(\"userId\"));\r\n    GetAllProductBacklogReq.setAccesstoken(cookie.load(\"accessToken\"));\r\n    GetAllProductBacklogReq.setProjectid(cookie.load(\"currentProject\"));\r\n\r\n    var response = productbacklogService.getAllProductBacklog(GetAllProductBacklogReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.setState(prevState => ({\r\n          data: [...prevState.data,\r\n          {\r\n            id: response.getProductbacklogid(),\r\n            title: response.getTitle(),\r\n            role: response.getRole(),\r\n            want: response.getWant(),\r\n            so: response.getSo(),\r\n            priority: response.getPriority(),\r\n            estimation: response.getEstimation(),\r\n            sprint: response.getSprintid(),\r\n            status: response.getStatusbacklog()\r\n          }]\r\n        }));\r\n\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      console.log(\"status\")\r\n      console.log(status.code);\r\n      console.log(status.details);\r\n      console.log(status.metadata);\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n\r\n\r\n\r\n  }\r\n  toggleAdd = () => {\r\n    this.setState(prevState => ({\r\n      modalAdd: !prevState.modalAdd\r\n    }));\r\n  }\r\n  toggleEdit = () => {\r\n    this.setState(prevState => ({\r\n      modalEdit: !prevState.modalEdit\r\n    }));\r\n  }\r\n  toggleSend = () => {\r\n    this.setState(prevState => ({\r\n      modalSend: !prevState.modalSend\r\n    }));\r\n  }\r\n\r\n  onTextboxChangeRole = (event) => {\r\n    this.setState({\r\n      role: event.target.value,\r\n    });\r\n\r\n  }\r\n  onTextboxChangeWant = (event) => {\r\n    this.setState({\r\n      want: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeSo = (event) => {\r\n    this.setState({\r\n      so: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangePriority = (event) => {\r\n    this.setState({\r\n      priority: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeEstimation = (event) => {\r\n    this.setState({\r\n      estimation: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeTitle = (event) => {\r\n    this.setState({\r\n      title: event.target.value,\r\n    });\r\n  }\r\n\r\n  onTextboxChangeSprint = (event) => {\r\n    this.setState({\r\n      sprint: event.target.value,\r\n    });\r\n  }\r\n\r\n  onTextboxChangeStatus = (event) => {\r\n    this.setState({\r\n      status: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleAdd = () => {\r\n    console.log(\"handleAdd\")\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n    //some data of request (get that from frontend)\r\n\r\n    var metadata = {};\r\n    //make a request to server\r\n\r\n    var AddNewProductBacklogReq = new proto.productbacklog.AddNewProductBacklogReq();\r\n    AddNewProductBacklogReq.setTitle(this.state.title);\r\n    AddNewProductBacklogReq.setRequesterid(cookie.load(\"userId\"));\r\n    AddNewProductBacklogReq.setProjectid(cookie.load(\"currentProject\"));\r\n    AddNewProductBacklogReq.setRole(this.state.role);\r\n    AddNewProductBacklogReq.setWant(this.state.want);\r\n    AddNewProductBacklogReq.setSo(this.state.so);\r\n    AddNewProductBacklogReq.setAccesstoken(cookie.load(\"accessToken\"));\r\n    AddNewProductBacklogReq.setPriority(this.state.priority)\r\n    AddNewProductBacklogReq.setEstimation(this.state.estimation)\r\n    AddNewProductBacklogReq.setSprintid(this.state.sprint)\r\n    AddNewProductBacklogReq.setStatusbacklog(this.state.status)\r\n\r\n\r\n    productbacklogService.addNewProductBacklog(AddNewProductBacklogReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n        console.log(\"error\")\r\n      } else { //if success\r\n        //get response\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          this.setState(prevState => ({\r\n            modalAdd: !prevState.modalAdd,\r\n          }));\r\n          this.setState(prevState => ({\r\n            data: [...prevState.data,\r\n            {\r\n              id: response.getProductbacklogid(),\r\n              title: this.state.title,\r\n              role: this.state.role,\r\n              want: this.state.want,\r\n              so: this.state.so,\r\n              priority: this.state.priority,\r\n              estimation: this.state.estimation,\r\n              id: response.getProductbacklogid(),\r\n              sprint: this.state.sprint,\r\n              status: this.state.status\r\n            }]\r\n          }));\r\n\r\n          this.setState({\r\n            title: '',\r\n            role: '',\r\n            want: '',\r\n            so: '',\r\n            priority: '',\r\n            estimation: '',\r\n            modalActionStatus: true,\r\n            actionStatus: 'SUCCESS'\r\n          });\r\n        } else {\r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'FALSE',\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  handleDelete = (event) => {\r\n    let id = event.currentTarget.dataset.id\r\n\r\n    console.log(\"handleDelete\")\r\n\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n\r\n    var metadata = {};\r\n    //make a request to server\r\n\r\n    var DeleteProductBacklogReq = new proto.productbacklog.DeleteProductBacklogReq();\r\n    DeleteProductBacklogReq.setRequesterid(cookie.load(\"userId\"));\r\n    DeleteProductBacklogReq.setProjectid(cookie.load(\"currentProject\"));\r\n    DeleteProductBacklogReq.setProductbacklogid(id);\r\n    DeleteProductBacklogReq.setAccesstoken(cookie.load(\"accessToken\"));\r\n\r\n    productbacklogService.deleteProductBacklog(DeleteProductBacklogReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n\r\n          this.setState({\r\n            actionStatus: \"SUCCESS\",\r\n            modalActionStatus: true,\r\n          });\r\n          this.setState(prevState => ({ data: [...prevState.data.filter(function (e) { return e.id !== id; })] }));\r\n        } else {\r\n          this.setState({\r\n            actionStatus: \"FALSE\",\r\n          });\r\n          this.setState(prevState => ({\r\n            modalActionStatus: !prevState.modalActionStatus,\r\n          }));\r\n        }\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n  handleUpdate = (event) => {\r\n    console.log(\"handleUpdate\")\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var UpdateProductBacklogReq = new proto.productbacklog.UpdateProductBacklogReq();\r\n    UpdateProductBacklogReq.setRequesterid(cookie.load(\"userId\"));\r\n    UpdateProductBacklogReq.setAccesstoken(cookie.load(\"accessToken\"));\r\n    UpdateProductBacklogReq.setProjectid(cookie.load(\"currentProject\"));\r\n    UpdateProductBacklogReq.setUserstoryid(this.state.updateId);\r\n    UpdateProductBacklogReq.setRole(this.state.role);\r\n    UpdateProductBacklogReq.setWant(this.state.want);\r\n    UpdateProductBacklogReq.setSo(this.state.so);\r\n    UpdateProductBacklogReq.setPriority();\r\n    UpdateProductBacklogReq.setEstimation();\r\n    UpdateProductBacklogReq.setSprintId();\r\n    UpdateProductBacklogReq.setStatusbacklog();\r\n    productbacklogService.updateProductBacklog(UpdateProductBacklogReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n\r\n          const tmpdata = this.state.data.map(p =>\r\n            p.id == this.state.updateId\r\n              ? {\r\n                ...p,\r\n                role: this.state.role,\r\n                want: this.state.want,\r\n                priority: this.state.priority,\r\n                estimation: this.state.estimation,\r\n                status: this.state.status,\r\n                sprintId: this.state.sprintId,\r\n                title: this.state.title,\r\n                so: this.state.so,\r\n\r\n              }\r\n              : p\r\n          );\r\n          this.setState(prevState => ({\r\n            modalEdit: !prevState.modalEdit,\r\n            modalActionStatus: !prevState.modalActionStatus,\r\n            actionStatus: \"SUCCESS\",\r\n            data: tmpdata,\r\n\r\n          }));\r\n\r\n\r\n          this.setState({\r\n          });\r\n\r\n\r\n        } else {\r\n          this.setState({\r\n            actionStatus: \"FALSE\",\r\n          });\r\n          this.setState(prevState => ({\r\n            modalEdit: !prevState.modalEdit,\r\n            modalActionStatus: !prevState.modalActionStatus,\r\n          }));\r\n        }\r\n      }\r\n    });\r\n  };\r\n  handleSend = () => {\r\n\r\n  };\r\n  render() {\r\n\r\n    let that = this;\r\n    return (\r\n      <Row>\r\n        <Col>\r\n\r\n          <Row>\r\n            <Col xs=\"2\" md=\"2\">\r\n              <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"Search\" />\r\n            </Col>\r\n\r\n            <Col xs=\"0\" md=\"0\">\r\n              <Button type=\"submit\" size=\"sm\" color=\"success\">\r\n                <i class=\"fa fa-search\"></i></Button>\r\n            </Col>\r\n          </Row>\r\n          <Card>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-lg\">\r\n                <thead class=\"thead\">\r\n                  <tr class=\"bg-primary\">\r\n                    <th>Title <i class=\"fa fa-sort\"></i></th>\r\n                    <th>As a... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>I want to be able to... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>So that...  <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Priority <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Estimation <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Sprint <i class=\"fa fa-sort\"></i> </th>\r\n                    <th>Status < i class=\"fa fa-sort\"></i></th>\r\n                    <th>\r\n                      <div>\r\n                        <Button color=\"primary\" size=\"sm\" className=\"mt-3\" onClick={that.toggleAdd}><i class=\"fa fa-plus-square\"></i>{this.props.buttonLabel}</Button>\r\n                        <Modal size=\"lg\" isOpen={that.state.modalAdd} toggle={that.toggleAdd} className={that.props.className}>\r\n                          <ModalHeader toggle={that.toggleAdd}>ProductBacklog</ModalHeader>\r\n                          <ModalBody>\r\n                            <Form className=\"form-horizontal\">\r\n                            <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">Title...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Title...\" value={that.state.title} onChange={that.onTextboxChangeTitle} />\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">As a...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"as\" name=\"as\" placeholder=\"As a...\" value={that.state.role} onChange={that.onTextboxChangeRole} />\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">I want to be able to...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"want\" name=\"want\" placeholder=\"I want to be able to...\" value={that.state.want} onChange={that.onTextboxChangeWant} />\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"textarea-input\">So that...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"textarea\" name=\"so\" id=\"so\" rows=\"9\"\r\n                                    placeholder=\"Content...\" value={that.state.so} onChange={that.onTextboxChangeSo} />\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"date-input\">Status </Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"2\">\r\n                                  <Input type=\"text\" id=\"status\" name=\"status\" placeholder=\"text\" value={that.state.status} onChange={that.onTextboxChangeStatus} />\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Priority</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"priority\" id=\"priority\" rows=\"9\" value={that.state.priority} onChange={that.onTextboxChangePriority} />\r\n                                </Col>\r\n\r\n                                <Col md=\"2\">\r\n                                </Col>\r\n\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Estimation</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"estimation\" id=\"estimation\" rows=\"9\" value={that.state.estimation} onChange={that.onTextboxChangeEstimation} />\r\n                                </Col>\r\n\r\n                                <Col md=\"2\">\r\n                                </Col>\r\n\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Sprint</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"sprint\" id=\"sprint\" rows=\"9\" value={that.state.sprint} onChange={that.onTextboxChangeSprint} />\r\n                                </Col>\r\n                              </FormGroup>\r\n                            </Form>\r\n                          </ModalBody>\r\n                          <ModalFooter>\r\n                            <Button color=\"primary\" onClick={that.handleAdd}>Submit</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={that.toggleAdd}>Cancel</Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </div>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{this.state.data.map(function (item, key) {\r\n\r\n                  return (\r\n                    <tr key={key}>\r\n                      <td>{item.title}</td>\r\n                      <td>{item.role}</td>\r\n                      <td>{item.want}</td>\r\n                      <td>{item.so}</td>\r\n                      <td><center>{item.priority}</center></td>\r\n                      <td><center>{item.estimation}</center></td>\r\n                      <td><center>{item.sprint}</center></td>\r\n                      <td><center>{item.status}</center></td>\r\n                      <td>\r\n                        <Button type=\"submit\" size=\"sm\" color=\"success\" onClick={that.toggleSend}><i class=\"fa fa-share-square\"></i></Button>\r\n                        <Modal size=\"lg\" isOpen={that.state.modalSend} toggle={that.toggleSend} className={that.props.className}>\r\n                          <ModalHeader toggle={that.toggleSend}>ProductBacklog</ModalHeader>\r\n                          <ModalBody>\r\n                            <div class=\"card  bg-primary mb-3\">\r\n                              <div class=\"card-body\">\r\n                                <Form action=\"\" className=\"form-horizontal\">\r\n\r\n\r\n                                  <FormGroup row>\r\n                                    <Col md=\"3\">\r\n                                      <Label htmlFor=\"date-input\">Start </Label>\r\n                                    </Col>\r\n                                    <Col xs=\"3\" md=\"3\">\r\n                                      <Input type=\"time\" id=\"timeStart\" name=\"timeStart\" />\r\n                                    </Col>\r\n                                    <Col xs=\"3\" md=\"3\">\r\n                                      <Input type=\"date\" id=\"dateStart\" name=\"dateStart\" />\r\n                                    </Col>\r\n                                  </FormGroup>\r\n\r\n                                  <FormGroup row>\r\n                                    <Col md=\"3\">\r\n                                      <Label htmlFor=\"date-input\">End </Label>\r\n                                    </Col>\r\n                                    <Col xs=\"3\" md=\"3\">\r\n                                      <Input type=\"time\" id=\"timeEnd\" name=\"timeEnd\" />\r\n                                    </Col>\r\n                                    <Col xs=\"3\" md=\"3\">\r\n                                      <Input type=\"date\" id=\"dateEnd\" name=\"dateEnd\" />\r\n                                    </Col>\r\n                                  </FormGroup>\r\n\r\n\r\n\r\n                                </Form>\r\n                              </div>\r\n                            </div>\r\n                          </ModalBody>\r\n                          <ModalFooter>\r\n                            <Button color=\"primary\" onClick={that.handleSend}>Submit</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={that.toggleSend}>Cancel</Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                        <Button color=\"warning\" size=\"sm\" onClick={that.toggleEdit}><i class=\"fa fa-edit\"></i>{that.props.buttonLabel}</Button>\r\n                        <Modal size=\"lg\" isOpen={that.state.modalEdit} toggle={that.toggleEdit} className={that.props.className}>\r\n                          <ModalHeader toggle={that.toggleEdit}>ProductBacklog</ModalHeader>\r\n                          <ModalBody>\r\n                            <Form className=\"form-horizontal\">\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">As a...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"As a......\" value={that.state.role} onChange={that.onTextboxChangeRole} />\r\n\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">I want to be able to...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"I want to be able to...\" value={that.state.want} onChange={that.onTextboxChangeWant} />\r\n\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"textarea-input\">So that...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"textarea\" name=\"textarea-input\" id=\"textarea-input\" rows=\"9\"\r\n                                    placeholder=\"Content...\" value={that.state.so}  onChange={that.onTextboxChangeSo}/>\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"date-input\">Status</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"2\">\r\n                                  <Input type=\"select\" name=\"status\" id=\"status\" onChange={that.onTextboxChangeStatus} size=\"sm\">\r\n                                    <option value=\"0\">done</option>\r\n                                    <option value=\"1\">to do</option>\r\n                                    <option value=\"2\">inprogress</option>\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Priority</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={that.state.priority} onChange={that.onTextboxChangePriority}/>\r\n                                </Col>\r\n\r\n                                <Col md=\"2\">\r\n                                </Col>\r\n\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Estimation</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={that.state.estimation} onChange={that.onTextboxChangeEstimation} />\r\n                                </Col>\r\n\r\n                                <Col md=\"2\">\r\n                                </Col>\r\n\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Sprint</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={that.state.sprint} onChange={that.onTextboxChangeSprint}/>\r\n                                </Col>\r\n                              </FormGroup>\r\n                            </Form>\r\n                          </ModalBody>\r\n                          <ModalFooter>\r\n                            <Button color=\"primary\" onClick={that.handleUpdate}>Submit</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={that.toggleEdit}>Cancel</Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                        <div data-id={item.id} onClick={that.handleDelete}><Button size=\"sm\" color=\"danger\" ><i class=\"fa fa-trash\"></i></Button></div>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n\r\n                })}</tbody>\r\n              </table>\r\n            </div>\r\n          </Card>\r\n\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;"],"sourceRoot":""}