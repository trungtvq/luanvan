{"version":3,"sources":["gRPC/myprofile/myprofile_grpc_web_pb.js","gRPC/myprofile/myprofile_pb.js","views/Pages/Page500/Page500.js"],"names":["grpc","web","require","proto","profile","MyProfileClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","credentials_","options_","MyProfilePromiseClient","methodInfo_MyProfile_getProfile","AbstractClientBase","MethodInfo","ProfileRes","request","serializeBinary","deserializeBinary","prototype","getProfile","metadata","serverStreaming","methodInfo_MyProfile_getProfileSimple","getProfileSimple","callback","rpcCall","unaryCall","module","exports","jspb","goog","global","Function","exportSymbol","ProfileReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","username","getUsername","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setUsername","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","length","writeString","cloneMessage","getFieldProto3","setField","avatar","getAvatar","status","getStatus","setAvatar","setStatus","undefined","object","extend","myprofile","Page500","props","_this","Object","_home_cpu11290_luanvan_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_cpu11290_luanvan_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_cpu11290_luanvan_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","av","_this2","myprofileService","err","response","console","log","setState","concat","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","md","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","addonType","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","size","type","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_13__","color","src","alt","Component"],"mappings":"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","file":"static/js/44.38a2a1dc.chunk.js","sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for profile\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.profile = require('./myprofile_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.profile.MyProfileClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.profile.MyProfilePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.profile.ProfileReq,\n *   !proto.profile.ProfileRes>}\n */\nconst methodInfo_MyProfile_getProfile = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.profile.ProfileRes,\n  /** @param {!proto.profile.ProfileReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.profile.ProfileRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.profile.ProfileReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.profile.ProfileRes>}\n *     The XHR Node Readable Stream\n */\nproto.profile.MyProfileClient.prototype.getProfile =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/profile.MyProfile/getProfile',\n      request,\n      metadata || {},\n      methodInfo_MyProfile_getProfile);\n};\n\n\n/**\n * @param {!proto.profile.ProfileReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.profile.ProfileRes>}\n *     The XHR Node Readable Stream\n */\nproto.profile.MyProfilePromiseClient.prototype.getProfile =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/profile.MyProfile/getProfile',\n      request,\n      metadata || {},\n      methodInfo_MyProfile_getProfile);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.profile.ProfileReq,\n *   !proto.profile.ProfileRes>}\n */\nconst methodInfo_MyProfile_getProfileSimple = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.profile.ProfileRes,\n  /** @param {!proto.profile.ProfileReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.profile.ProfileRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.profile.ProfileReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.profile.ProfileRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.profile.ProfileRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.profile.MyProfileClient.prototype.getProfileSimple =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/profile.MyProfile/getProfileSimple',\n      request,\n      metadata || {},\n      methodInfo_MyProfile_getProfileSimple,\n      callback);\n};\n\n\n/**\n * @param {!proto.profile.ProfileReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.profile.ProfileRes>}\n *     A native promise that resolves to the response\n */\nproto.profile.MyProfilePromiseClient.prototype.getProfileSimple =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/profile.MyProfile/getProfileSimple',\n      request,\n      metadata || {},\n      methodInfo_MyProfile_getProfileSimple);\n};\n\n\nmodule.exports = proto.profile;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.profile.ProfileReq', null, global);\ngoog.exportSymbol('proto.profile.ProfileRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.profile.ProfileReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.profile.ProfileReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.profile.ProfileReq.displayName = 'proto.profile.ProfileReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.profile.ProfileReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.profile.ProfileReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.profile.ProfileReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.profile.ProfileReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: msg.getUsername()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.profile.ProfileReq}\n */\nproto.profile.ProfileReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.profile.ProfileReq;\n  return proto.profile.ProfileReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.profile.ProfileReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.profile.ProfileReq}\n */\nproto.profile.ProfileReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.profile.ProfileReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.profile.ProfileReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.profile.ProfileReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.profile.ProfileReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.profile.ProfileReq} The clone.\n */\nproto.profile.ProfileReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.profile.ProfileReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string username = 1;\n * @return {string}\n */\nproto.profile.ProfileReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.profile.ProfileReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.profile.ProfileRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.profile.ProfileRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.profile.ProfileRes.displayName = 'proto.profile.ProfileRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.profile.ProfileRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.profile.ProfileRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.profile.ProfileRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.profile.ProfileRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    avatar: msg.getAvatar(),\n    status: msg.getStatus()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.profile.ProfileRes}\n */\nproto.profile.ProfileRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.profile.ProfileRes;\n  return proto.profile.ProfileRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.profile.ProfileRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.profile.ProfileRes}\n */\nproto.profile.ProfileRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAvatar(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.profile.ProfileRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.profile.ProfileRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.profile.ProfileRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.profile.ProfileRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getAvatar();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.profile.ProfileRes} The clone.\n */\nproto.profile.ProfileRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.profile.ProfileRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string avatar = 1;\n * @return {string}\n */\nproto.profile.ProfileRes.prototype.getAvatar = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.profile.ProfileRes.prototype.setAvatar = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string status = 2;\n * @return {string}\n */\nproto.profile.ProfileRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.profile.ProfileRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto.profile);\n","import React, { Component } from 'react';\nimport { Button, Col, Container, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\n\nconst proto = {};\nproto.myprofile = require('./../../../gRPC/myprofile/myprofile_grpc_web_pb');\nclass Page500 extends Component {\n  constructor(props) {\n    super(props);\n  this.state={\n      av:''\n  }}\n  componentWillMount(){\n//vuc me cai firefox\n          //create service to request\n          const myprofileService = new proto.myprofile.MyProfileClient('54.255.233.193:8085');\n          //some data of request (get that from frontend)\n          const username = \"useridoremail\";\n\n          //create var for react\n          var ProfileReq = new proto.myprofile.ProfileReq();\n\n          //set data from frontend to this var\n          ProfileReq.setUsername(username);\n\n          //metadab will be config later\n          var metadata = {};\n          //make a request to server\n          var getTodo = myprofileService.getProfileSimple(ProfileReq, metadata, (err, response) => {\n            if (err) { //if error\n              console.log(err);\n            } else { //if success\n              //get response\n              console.log(\"response\")\n              console.log(response);\n              console.log(\"get avatar\")\n              console.log()\n\n              this.setState({\n                av: response.getAvatar()\n              });\n              \n\n              const ProfileRes = response[0];\n              if (ProfileRes == null) {// if response null => not found\n\t\t\t\n                console.log(`Something was wrong ${username} wasn't found`);\n              } else {\n                console.log(`Fetched TODO with ID ${username}: ${ProfileRes}`);\n              }\n            }\n          });\n  }\n  render() {\n \n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"6\">\n              <span className=\"clearfix\">\n                <h1 className=\"float-left display-3 mr-4\">500</h1>\n                <h4 className=\"pt-3\">Houston, we have a problem!</h4>\n                <p className=\"text-muted float-left\">The page you are looking for is temporarily unavailable.</p>\n              </span>\n              <InputGroup className=\"input-prepend\">\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <i className=\"fa fa-search\"></i>\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input size=\"16\" type=\"text\" placeholder=\"What are you looking for?\" />\n                <InputGroupAddon addonType=\"append\">\n                  <Button color=\"info\">Search</Button>\n                </InputGroupAddon>\n              </InputGroup>\n              <img src={`data:image/jpeg;base64,${this.state.av}`} alt=\"Logo\" />;\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Page500;\n"],"sourceRoot":""}