{"version":3,"sources":["gRPC/auth/auth_grpc_web_pb.js","gRPC/auth/auth_pb.js","views/Pages/Page404/Page404.js"],"names":["grpc","web","require","proto","counter","AuthClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","credentials_","options_","AuthPromiseClient","methodInfo_Auth_SignIn","AbstractClientBase","MethodInfo","SignInRes","request","serializeBinary","deserializeBinary","prototype","signIn","metadata","callback","rpcCall","unaryCall","methodInfo_Auth_SignUp","signUp","methodInfo_Auth_ResetPassword","ResetRes","resetPassword","module","exports","jspb","goog","global","Function","exportSymbol","SignInReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","username","getUsername","password","getPassword","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setUsername","setPassword","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","length","writeString","cloneMessage","getFieldProto3","setField","status","getStatus","response","getResponse","type","getType","setStatus","setResponse","setType","SignUpReq","name","getName","setName","ResetReq","content","getContent","setContent","token","getToken","setToken","object","extend","auth","Page404","authService","err","console","log","getSignInRes","concat","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","md","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","addonType","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","size","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_13__","color","Component"],"mappings":"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","file":"static/js/35.8e22bc77.chunk.js","sourcesContent":["/**\r\n * @fileoverview gRPC-Web generated client stub for counter\r\n * @enhanceable\r\n * @public\r\n */\r\n\r\n// GENERATED CODE -- DO NOT EDIT!\r\n\r\n\r\n\r\nconst grpc = {};\r\ngrpc.web = require('grpc-web');\r\n\r\nconst proto = {};\r\nproto.counter = require('./auth_pb.js');\r\n\r\n/**\r\n * @param {string} hostname\r\n * @param {?Object} credentials\r\n * @param {?Object} options\r\n * @constructor\r\n * @struct\r\n * @final\r\n */\r\nproto.counter.AuthClient =\r\n    function(hostname, credentials, options) {\r\n  if (!options) options = {};\r\n  options['format'] = 'text';\r\n\r\n  /**\r\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\r\n   */\r\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\r\n\r\n  /**\r\n   * @private @const {string} The hostname\r\n   */\r\n  this.hostname_ = hostname;\r\n\r\n  /**\r\n   * @private @const {?Object} The credentials to be used to connect\r\n   *    to the server\r\n   */\r\n  this.credentials_ = credentials;\r\n\r\n  /**\r\n   * @private @const {?Object} Options for the client\r\n   */\r\n  this.options_ = options;\r\n};\r\n\r\n\r\n/**\r\n * @param {string} hostname\r\n * @param {?Object} credentials\r\n * @param {?Object} options\r\n * @constructor\r\n * @struct\r\n * @final\r\n */\r\nproto.counter.AuthPromiseClient =\r\n    function(hostname, credentials, options) {\r\n  if (!options) options = {};\r\n  options['format'] = 'text';\r\n\r\n  /**\r\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\r\n   */\r\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\r\n\r\n  /**\r\n   * @private @const {string} The hostname\r\n   */\r\n  this.hostname_ = hostname;\r\n\r\n  /**\r\n   * @private @const {?Object} The credentials to be used to connect\r\n   *    to the server\r\n   */\r\n  this.credentials_ = credentials;\r\n\r\n  /**\r\n   * @private @const {?Object} Options for the client\r\n   */\r\n  this.options_ = options;\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\r\n *   !proto.counter.SignInReq,\r\n *   !proto.counter.SignInRes>}\r\n */\r\nconst methodInfo_Auth_SignIn = new grpc.web.AbstractClientBase.MethodInfo(\r\n  proto.counter.SignInRes,\r\n  /** @param {!proto.counter.SignInReq} request */\r\n  function(request) {\r\n    return request.serializeBinary();\r\n  },\r\n  proto.counter.SignInRes.deserializeBinary\r\n);\r\n\r\n\r\n/**\r\n * @param {!proto.counter.SignInReq} request The\r\n *     request proto\r\n * @param {?Object<string, string>} metadata User defined\r\n *     call metadata\r\n * @param {function(?grpc.web.Error, ?proto.counter.SignInRes)}\r\n *     callback The callback function(error, response)\r\n * @return {!grpc.web.ClientReadableStream<!proto.counter.SignInRes>|undefined}\r\n *     The XHR Node Readable Stream\r\n */\r\nproto.counter.AuthClient.prototype.signIn =\r\n    function(request, metadata, callback) {\r\n  return this.client_.rpcCall(this.hostname_ +\r\n      '/counter.Auth/SignIn',\r\n      request,\r\n      metadata || {},\r\n      methodInfo_Auth_SignIn,\r\n      callback);\r\n};\r\n\r\n\r\n/**\r\n * @param {!proto.counter.SignInReq} request The\r\n *     request proto\r\n * @param {?Object<string, string>} metadata User defined\r\n *     call metadata\r\n * @return {!Promise<!proto.counter.SignInRes>}\r\n *     A native promise that resolves to the response\r\n */\r\nproto.counter.AuthPromiseClient.prototype.signIn =\r\n    function(request, metadata) {\r\n  return this.client_.unaryCall(this.hostname_ +\r\n      '/counter.Auth/SignIn',\r\n      request,\r\n      metadata || {},\r\n      methodInfo_Auth_SignIn);\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\r\n *   !proto.counter.SignUpReq,\r\n *   !proto.counter.SignInRes>}\r\n */\r\nconst methodInfo_Auth_SignUp = new grpc.web.AbstractClientBase.MethodInfo(\r\n  proto.counter.SignInRes,\r\n  /** @param {!proto.counter.SignUpReq} request */\r\n  function(request) {\r\n    return request.serializeBinary();\r\n  },\r\n  proto.counter.SignInRes.deserializeBinary\r\n);\r\n\r\n\r\n/**\r\n * @param {!proto.counter.SignUpReq} request The\r\n *     request proto\r\n * @param {?Object<string, string>} metadata User defined\r\n *     call metadata\r\n * @param {function(?grpc.web.Error, ?proto.counter.SignInRes)}\r\n *     callback The callback function(error, response)\r\n * @return {!grpc.web.ClientReadableStream<!proto.counter.SignInRes>|undefined}\r\n *     The XHR Node Readable Stream\r\n */\r\nproto.counter.AuthClient.prototype.signUp =\r\n    function(request, metadata, callback) {\r\n  return this.client_.rpcCall(this.hostname_ +\r\n      '/counter.Auth/SignUp',\r\n      request,\r\n      metadata || {},\r\n      methodInfo_Auth_SignUp,\r\n      callback);\r\n};\r\n\r\n\r\n/**\r\n * @param {!proto.counter.SignUpReq} request The\r\n *     request proto\r\n * @param {?Object<string, string>} metadata User defined\r\n *     call metadata\r\n * @return {!Promise<!proto.counter.SignInRes>}\r\n *     A native promise that resolves to the response\r\n */\r\nproto.counter.AuthPromiseClient.prototype.signUp =\r\n    function(request, metadata) {\r\n  return this.client_.unaryCall(this.hostname_ +\r\n      '/counter.Auth/SignUp',\r\n      request,\r\n      metadata || {},\r\n      methodInfo_Auth_SignUp);\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\r\n *   !proto.counter.ResetReq,\r\n *   !proto.counter.ResetRes>}\r\n */\r\nconst methodInfo_Auth_ResetPassword = new grpc.web.AbstractClientBase.MethodInfo(\r\n  proto.counter.ResetRes,\r\n  /** @param {!proto.counter.ResetReq} request */\r\n  function(request) {\r\n    return request.serializeBinary();\r\n  },\r\n  proto.counter.ResetRes.deserializeBinary\r\n);\r\n\r\n\r\n/**\r\n * @param {!proto.counter.ResetReq} request The\r\n *     request proto\r\n * @param {?Object<string, string>} metadata User defined\r\n *     call metadata\r\n * @param {function(?grpc.web.Error, ?proto.counter.ResetRes)}\r\n *     callback The callback function(error, response)\r\n * @return {!grpc.web.ClientReadableStream<!proto.counter.ResetRes>|undefined}\r\n *     The XHR Node Readable Stream\r\n */\r\nproto.counter.AuthClient.prototype.resetPassword =\r\n    function(request, metadata, callback) {\r\n  return this.client_.rpcCall(this.hostname_ +\r\n      '/counter.Auth/ResetPassword',\r\n      request,\r\n      metadata || {},\r\n      methodInfo_Auth_ResetPassword,\r\n      callback);\r\n};\r\n\r\n\r\n/**\r\n * @param {!proto.counter.ResetReq} request The\r\n *     request proto\r\n * @param {?Object<string, string>} metadata User defined\r\n *     call metadata\r\n * @return {!Promise<!proto.counter.ResetRes>}\r\n *     A native promise that resolves to the response\r\n */\r\nproto.counter.AuthPromiseClient.prototype.resetPassword =\r\n    function(request, metadata) {\r\n  return this.client_.unaryCall(this.hostname_ +\r\n      '/counter.Auth/ResetPassword',\r\n      request,\r\n      metadata || {},\r\n      methodInfo_Auth_ResetPassword);\r\n};\r\n\r\n\r\nmodule.exports = proto.counter;\r\n\r\n","/**\r\n * @fileoverview\r\n * @enhanceable\r\n * @public\r\n */\r\n// GENERATED CODE -- DO NOT EDIT!\r\n/* eslint-disable */\r\nvar jspb = require('google-protobuf');\r\nvar goog = jspb;\r\nvar global = Function('return this')();\r\n\r\ngoog.exportSymbol('proto.counter.ResetReq', null, global);\r\ngoog.exportSymbol('proto.counter.ResetRes', null, global);\r\ngoog.exportSymbol('proto.counter.SignInReq', null, global);\r\ngoog.exportSymbol('proto.counter.SignInRes', null, global);\r\ngoog.exportSymbol('proto.counter.SignUpReq', null, global);\r\n\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.counter.SignInReq = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.counter.SignInReq, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  proto.counter.SignInReq.displayName = 'proto.counter.SignInReq';\r\n}\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto suitable for use in Soy templates.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n *     for transitional soy proto support: http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.counter.SignInReq.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.counter.SignInReq.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n *     instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.counter.SignInReq} msg The msg instance to transform.\r\n * @return {!Object}\r\n */\r\nproto.counter.SignInReq.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    username: msg.getUsername(),\r\n    password: msg.getPassword()\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.counter.SignInReq}\r\n */\r\nproto.counter.SignInReq.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.counter.SignInReq;\r\n  return proto.counter.SignInReq.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.counter.SignInReq} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.counter.SignInReq}\r\n */\r\nproto.counter.SignInReq.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setUsername(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setPassword(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Class method variant: serializes the given message to binary data\r\n * (in protobuf wire format), writing to the given BinaryWriter.\r\n * @param {!proto.counter.SignInReq} message\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.counter.SignInReq.serializeBinaryToWriter = function(message, writer) {\r\n  message.serializeBinaryToWriter(writer);\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.counter.SignInReq.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  this.serializeBinaryToWriter(writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format),\r\n * writing to the given BinaryWriter.\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.counter.SignInReq.prototype.serializeBinaryToWriter = function (writer) {\r\n  var f = undefined;\r\n  f = this.getUsername();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = this.getPassword();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Creates a deep clone of this proto. No data is shared with the original.\r\n * @return {!proto.counter.SignInReq} The clone.\r\n */\r\nproto.counter.SignInReq.prototype.cloneMessage = function() {\r\n  return /** @type {!proto.counter.SignInReq} */ (jspb.Message.cloneMessage(this));\r\n};\r\n\r\n\r\n/**\r\n * optional string username = 1;\r\n * @return {string}\r\n */\r\nproto.counter.SignInReq.prototype.getUsername = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.counter.SignInReq.prototype.setUsername = function(value) {\r\n  jspb.Message.setField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string password = 2;\r\n * @return {string}\r\n */\r\nproto.counter.SignInReq.prototype.getPassword = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.counter.SignInReq.prototype.setPassword = function(value) {\r\n  jspb.Message.setField(this, 2, value);\r\n};\r\n\r\n\r\n\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.counter.SignInRes = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.counter.SignInRes, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  proto.counter.SignInRes.displayName = 'proto.counter.SignInRes';\r\n}\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto suitable for use in Soy templates.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n *     for transitional soy proto support: http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.counter.SignInRes.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.counter.SignInRes.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n *     instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.counter.SignInRes} msg The msg instance to transform.\r\n * @return {!Object}\r\n */\r\nproto.counter.SignInRes.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    status: msg.getStatus(),\r\n    response: msg.getResponse(),\r\n    type: msg.getType()\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.counter.SignInRes}\r\n */\r\nproto.counter.SignInRes.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.counter.SignInRes;\r\n  return proto.counter.SignInRes.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.counter.SignInRes} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.counter.SignInRes}\r\n */\r\nproto.counter.SignInRes.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setStatus(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setResponse(value);\r\n      break;\r\n    case 3:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setType(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Class method variant: serializes the given message to binary data\r\n * (in protobuf wire format), writing to the given BinaryWriter.\r\n * @param {!proto.counter.SignInRes} message\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.counter.SignInRes.serializeBinaryToWriter = function(message, writer) {\r\n  message.serializeBinaryToWriter(writer);\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.counter.SignInRes.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  this.serializeBinaryToWriter(writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format),\r\n * writing to the given BinaryWriter.\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.counter.SignInRes.prototype.serializeBinaryToWriter = function (writer) {\r\n  var f = undefined;\r\n  f = this.getStatus();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = this.getResponse();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n  f = this.getType();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      3,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Creates a deep clone of this proto. No data is shared with the original.\r\n * @return {!proto.counter.SignInRes} The clone.\r\n */\r\nproto.counter.SignInRes.prototype.cloneMessage = function() {\r\n  return /** @type {!proto.counter.SignInRes} */ (jspb.Message.cloneMessage(this));\r\n};\r\n\r\n\r\n/**\r\n * optional string status = 1;\r\n * @return {string}\r\n */\r\nproto.counter.SignInRes.prototype.getStatus = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.counter.SignInRes.prototype.setStatus = function(value) {\r\n  jspb.Message.setField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string response = 2;\r\n * @return {string}\r\n */\r\nproto.counter.SignInRes.prototype.getResponse = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.counter.SignInRes.prototype.setResponse = function(value) {\r\n  jspb.Message.setField(this, 2, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string type = 3;\r\n * @return {string}\r\n */\r\nproto.counter.SignInRes.prototype.getType = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.counter.SignInRes.prototype.setType = function(value) {\r\n  jspb.Message.setField(this, 3, value);\r\n};\r\n\r\n\r\n\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.counter.SignUpReq = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.counter.SignUpReq, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  proto.counter.SignUpReq.displayName = 'proto.counter.SignUpReq';\r\n}\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto suitable for use in Soy templates.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n *     for transitional soy proto support: http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.counter.SignUpReq.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.counter.SignUpReq.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n *     instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.counter.SignUpReq} msg The msg instance to transform.\r\n * @return {!Object}\r\n */\r\nproto.counter.SignUpReq.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    username: msg.getUsername(),\r\n    password: msg.getPassword(),\r\n    name: msg.getName()\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.counter.SignUpReq}\r\n */\r\nproto.counter.SignUpReq.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.counter.SignUpReq;\r\n  return proto.counter.SignUpReq.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.counter.SignUpReq} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.counter.SignUpReq}\r\n */\r\nproto.counter.SignUpReq.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setUsername(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setPassword(value);\r\n      break;\r\n    case 3:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setName(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Class method variant: serializes the given message to binary data\r\n * (in protobuf wire format), writing to the given BinaryWriter.\r\n * @param {!proto.counter.SignUpReq} message\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.counter.SignUpReq.serializeBinaryToWriter = function(message, writer) {\r\n  message.serializeBinaryToWriter(writer);\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.counter.SignUpReq.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  this.serializeBinaryToWriter(writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format),\r\n * writing to the given BinaryWriter.\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.counter.SignUpReq.prototype.serializeBinaryToWriter = function (writer) {\r\n  var f = undefined;\r\n  f = this.getUsername();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = this.getPassword();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n  f = this.getName();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      3,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Creates a deep clone of this proto. No data is shared with the original.\r\n * @return {!proto.counter.SignUpReq} The clone.\r\n */\r\nproto.counter.SignUpReq.prototype.cloneMessage = function() {\r\n  return /** @type {!proto.counter.SignUpReq} */ (jspb.Message.cloneMessage(this));\r\n};\r\n\r\n\r\n/**\r\n * optional string username = 1;\r\n * @return {string}\r\n */\r\nproto.counter.SignUpReq.prototype.getUsername = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.counter.SignUpReq.prototype.setUsername = function(value) {\r\n  jspb.Message.setField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string password = 2;\r\n * @return {string}\r\n */\r\nproto.counter.SignUpReq.prototype.getPassword = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.counter.SignUpReq.prototype.setPassword = function(value) {\r\n  jspb.Message.setField(this, 2, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string name = 3;\r\n * @return {string}\r\n */\r\nproto.counter.SignUpReq.prototype.getName = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.counter.SignUpReq.prototype.setName = function(value) {\r\n  jspb.Message.setField(this, 3, value);\r\n};\r\n\r\n\r\n\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.counter.ResetReq = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.counter.ResetReq, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  proto.counter.ResetReq.displayName = 'proto.counter.ResetReq';\r\n}\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto suitable for use in Soy templates.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n *     for transitional soy proto support: http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.counter.ResetReq.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.counter.ResetReq.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n *     instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.counter.ResetReq} msg The msg instance to transform.\r\n * @return {!Object}\r\n */\r\nproto.counter.ResetReq.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    type: msg.getType(),\r\n    content: msg.getContent()\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.counter.ResetReq}\r\n */\r\nproto.counter.ResetReq.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.counter.ResetReq;\r\n  return proto.counter.ResetReq.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.counter.ResetReq} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.counter.ResetReq}\r\n */\r\nproto.counter.ResetReq.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setType(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setContent(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Class method variant: serializes the given message to binary data\r\n * (in protobuf wire format), writing to the given BinaryWriter.\r\n * @param {!proto.counter.ResetReq} message\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.counter.ResetReq.serializeBinaryToWriter = function(message, writer) {\r\n  message.serializeBinaryToWriter(writer);\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.counter.ResetReq.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  this.serializeBinaryToWriter(writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format),\r\n * writing to the given BinaryWriter.\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.counter.ResetReq.prototype.serializeBinaryToWriter = function (writer) {\r\n  var f = undefined;\r\n  f = this.getType();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = this.getContent();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Creates a deep clone of this proto. No data is shared with the original.\r\n * @return {!proto.counter.ResetReq} The clone.\r\n */\r\nproto.counter.ResetReq.prototype.cloneMessage = function() {\r\n  return /** @type {!proto.counter.ResetReq} */ (jspb.Message.cloneMessage(this));\r\n};\r\n\r\n\r\n/**\r\n * optional string type = 1;\r\n * @return {string}\r\n */\r\nproto.counter.ResetReq.prototype.getType = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.counter.ResetReq.prototype.setType = function(value) {\r\n  jspb.Message.setField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string content = 2;\r\n * @return {string}\r\n */\r\nproto.counter.ResetReq.prototype.getContent = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.counter.ResetReq.prototype.setContent = function(value) {\r\n  jspb.Message.setField(this, 2, value);\r\n};\r\n\r\n\r\n\r\n/**\r\n * Generated by JsPbCodeGenerator.\r\n * @param {Array=} opt_data Optional initial data array, typically from a\r\n * server response, or constructed directly in Javascript. The array is used\r\n * in place and becomes part of the constructed object. It is not cloned.\r\n * If no data is provided, the constructed object will be empty, but still\r\n * valid.\r\n * @extends {jspb.Message}\r\n * @constructor\r\n */\r\nproto.counter.ResetRes = function(opt_data) {\r\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\r\n};\r\ngoog.inherits(proto.counter.ResetRes, jspb.Message);\r\nif (goog.DEBUG && !COMPILED) {\r\n  proto.counter.ResetRes.displayName = 'proto.counter.ResetRes';\r\n}\r\n\r\n\r\nif (jspb.Message.GENERATE_TO_OBJECT) {\r\n/**\r\n * Creates an object representation of this proto suitable for use in Soy templates.\r\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\r\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\r\n * For the list of reserved names please see:\r\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\r\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\r\n *     for transitional soy proto support: http://goto/soy-param-migration\r\n * @return {!Object}\r\n */\r\nproto.counter.ResetRes.prototype.toObject = function(opt_includeInstance) {\r\n  return proto.counter.ResetRes.toObject(opt_includeInstance, this);\r\n};\r\n\r\n\r\n/**\r\n * Static version of the {@see toObject} method.\r\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\r\n *     instance for transitional soy proto support:\r\n *     http://goto/soy-param-migration\r\n * @param {!proto.counter.ResetRes} msg The msg instance to transform.\r\n * @return {!Object}\r\n */\r\nproto.counter.ResetRes.toObject = function(includeInstance, msg) {\r\n  var f, obj = {\r\n    status: msg.getStatus(),\r\n    token: msg.getToken()\r\n  };\r\n\r\n  if (includeInstance) {\r\n    obj.$jspbMessageInstance = msg;\r\n  }\r\n  return obj;\r\n};\r\n}\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format).\r\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\r\n * @return {!proto.counter.ResetRes}\r\n */\r\nproto.counter.ResetRes.deserializeBinary = function(bytes) {\r\n  var reader = new jspb.BinaryReader(bytes);\r\n  var msg = new proto.counter.ResetRes;\r\n  return proto.counter.ResetRes.deserializeBinaryFromReader(msg, reader);\r\n};\r\n\r\n\r\n/**\r\n * Deserializes binary data (in protobuf wire format) from the\r\n * given reader into the given message object.\r\n * @param {!proto.counter.ResetRes} msg The message object to deserialize into.\r\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\r\n * @return {!proto.counter.ResetRes}\r\n */\r\nproto.counter.ResetRes.deserializeBinaryFromReader = function(msg, reader) {\r\n  while (reader.nextField()) {\r\n    if (reader.isEndGroup()) {\r\n      break;\r\n    }\r\n    var field = reader.getFieldNumber();\r\n    switch (field) {\r\n    case 1:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setStatus(value);\r\n      break;\r\n    case 2:\r\n      var value = /** @type {string} */ (reader.readString());\r\n      msg.setToken(value);\r\n      break;\r\n    default:\r\n      reader.skipField();\r\n      break;\r\n    }\r\n  }\r\n  return msg;\r\n};\r\n\r\n\r\n/**\r\n * Class method variant: serializes the given message to binary data\r\n * (in protobuf wire format), writing to the given BinaryWriter.\r\n * @param {!proto.counter.ResetRes} message\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.counter.ResetRes.serializeBinaryToWriter = function(message, writer) {\r\n  message.serializeBinaryToWriter(writer);\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format).\r\n * @return {!Uint8Array}\r\n */\r\nproto.counter.ResetRes.prototype.serializeBinary = function() {\r\n  var writer = new jspb.BinaryWriter();\r\n  this.serializeBinaryToWriter(writer);\r\n  return writer.getResultBuffer();\r\n};\r\n\r\n\r\n/**\r\n * Serializes the message to binary data (in protobuf wire format),\r\n * writing to the given BinaryWriter.\r\n * @param {!jspb.BinaryWriter} writer\r\n */\r\nproto.counter.ResetRes.prototype.serializeBinaryToWriter = function (writer) {\r\n  var f = undefined;\r\n  f = this.getStatus();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      1,\r\n      f\r\n    );\r\n  }\r\n  f = this.getToken();\r\n  if (f.length > 0) {\r\n    writer.writeString(\r\n      2,\r\n      f\r\n    );\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Creates a deep clone of this proto. No data is shared with the original.\r\n * @return {!proto.counter.ResetRes} The clone.\r\n */\r\nproto.counter.ResetRes.prototype.cloneMessage = function() {\r\n  return /** @type {!proto.counter.ResetRes} */ (jspb.Message.cloneMessage(this));\r\n};\r\n\r\n\r\n/**\r\n * optional string status = 1;\r\n * @return {string}\r\n */\r\nproto.counter.ResetRes.prototype.getStatus = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.counter.ResetRes.prototype.setStatus = function(value) {\r\n  jspb.Message.setField(this, 1, value);\r\n};\r\n\r\n\r\n/**\r\n * optional string token = 2;\r\n * @return {string}\r\n */\r\nproto.counter.ResetRes.prototype.getToken = function() {\r\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\r\n};\r\n\r\n\r\n/** @param {string} value  */\r\nproto.counter.ResetRes.prototype.setToken = function(value) {\r\n  jspb.Message.setField(this, 2, value);\r\n};\r\n\r\n\r\ngoog.object.extend(exports, proto.counter);\r\n","import React, { Component } from 'react';\r\nimport { Button, Col, Container, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\r\n\r\nconst proto = {};\r\nproto.auth = require('./../../../gRPC/auth/auth_grpc_web_pb');\r\nclass Page404 extends Component {\r\n\r\n  render() {\r\n \r\n          //create service to request\r\n          const authService = new proto.auth.AuthClient('http://trungtvq.ddns.net:8080');\r\n          //some data of request (get that from frontend)\r\n          const username = \"useridoremail\";\r\n          const password = \"mypass\"\r\n\r\n          //create var for react\r\n          var SignInReq = new proto.auth.SignInReq();\r\n\r\n          //set data from frontend to this var\r\n          SignInReq.setUsername(username);\r\n          SignInReq.setPassword(password);\r\n\r\n          //metadab will be config later\r\n          var metadata = {};\r\n\r\n          //make a request to server\r\n          var getTodo = authService.signIn(SignInReq, metadata, (err, response) => {\r\n            if (err) { //if error\r\n              console.log(err);\r\n            } else { //if success\r\n              //get response\r\n              const SignInRes = response.getSignInRes();\r\n              if (SignInRes == null) {// if response null => not found\r\n                console.log(`Something was wrong ${username} wasn't found`);\r\n              } else {\r\n                console.log(`Fetched TODO with ID ${username}: ${SignInRes}`);\r\n              }\r\n            }\r\n          });\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"6\">\r\n              <div className=\"clearfix\">\r\n                <h1 className=\"float-left display-3 mr-4\">404</h1>\r\n                <h4 className=\"pt-3\">Oops! You're lost.</h4>\r\n                <p className=\"text-muted float-left\">The page you are looking for was not found.</p>\r\n              </div>\r\n              <InputGroup className=\"input-prepend\">\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                  <InputGroupText>\r\n                    <i className=\"fa fa-search\"></i>\r\n                  </InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input size=\"16\" type=\"text\" placeholder=\"What are you looking for?\" />\r\n                <InputGroupAddon addonType=\"append\">\r\n                  <Button color=\"info\">Search</Button>\r\n                </InputGroupAddon>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page404;\r\n"],"sourceRoot":""}