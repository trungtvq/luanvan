{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","gRPC/userstory/userstory_grpc_web_pb.js","gRPC/userstory/userstory_pb.js","views/Workspace/Po/UserStory/Detail/Detail.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","__webpack_exports__","grpc","web","require","proto","userstory","UserStoryClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","credentials_","options_","UserStoryPromiseClient","methodInfo_UserStory_addNewUserStory","AbstractClientBase","MethodInfo","UserStoryRes","request","serializeBinary","deserializeBinary","addNewUserStory","metadata","callback","rpcCall","unaryCall","methodInfo_UserStory_updateUserStory","updateUserStory","methodInfo_UserStory_deleteUserStory","deleteUserStory","methodInfo_UserStory_getAllUserStory","GetAllUserStoryRes","getAllUserStory","serverStreaming","module","exports","jspb","goog","global","Function","exportSymbol","AddNewUserStoryReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","role","getRole","want","getWant","so","getSo","accesstoken","getAccesstoken","name","getName","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setRequesterid","setProjectid","setRole","setWant","setSo","setAccesstoken","setName","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","writeString","cloneMessage","getFieldProto3","setField","status","getStatus","id","getId","setStatus","setId","UpdateUserStoryReq","userstoryid","getUserstoryid","setUserstoryid","DeleteUserStoryReq","GetAllUserStoryReq","object","extend","Detail","props","_this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","resetAddForm","setState","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","state","toggleActionStatus","prevState","modalActionStatus","onGetUpdate","userstoryIdUpdate","rouserstoryIdUpdate","asUpdate","wantUpdate","soUpdate","nameUpdate","handleAdd","console","log","userstoryService","cookie","load","err","response","modalAdd","data","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","as","actionStatus","handleDelete","event","currentTarget","dataset","filter","e","handleUpdate","updateId","tmpdata","map","p","modalEdit","toggleAdd","bind","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","toggleEdit","onTextboxChangename","onTextboxChangerole","onTextboxChangewant","onTextboxChangeso","requesterId","updateName","target","that","on","code","details","end","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","size","isOpen","toggle","className","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","xs","md","reactstrap__WEBPACK_IMPORTED_MODULE_13__","type","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_14__","color","class","reactstrap__WEBPACK_IMPORTED_MODULE_15__","onClick","buttonLabel","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","row","reactstrap__WEBPACK_IMPORTED_MODULE_19__","htmlFor","onChange","rows","reactstrap__WEBPACK_IMPORTED_MODULE_20__","key","item","data-id","data-name","disabled","Component","connect","changeStatusProject","projectId","projectName","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","noGutters","bool","string","cssModule","form","Row","Tag","attributes","classes","defaultProps","inverse","block","body","outline","innerRef","oneOfType","func","Card","ref"],"mappings":"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","file":"static/js/39.52e3474d.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","/**\n * @fileoverview gRPC-Web generated client stub for userstory\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.userstory = require('./userstory_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.userstory.UserStoryClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.userstory.UserStoryPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.AddNewUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_addNewUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.AddNewUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.AddNewUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.addNewUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/addNewUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_addNewUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.AddNewUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.addNewUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/addNewUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_addNewUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.UpdateUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_updateUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.UpdateUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.UpdateUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.updateUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/updateUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_updateUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.UpdateUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.updateUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/updateUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_updateUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.DeleteUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_deleteUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.DeleteUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.DeleteUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.deleteUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/deleteUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_deleteUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.DeleteUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.deleteUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/deleteUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_deleteUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.GetAllUserStoryReq,\n *   !proto.userstory.GetAllUserStoryRes>}\n */\nconst methodInfo_UserStory_getAllUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.GetAllUserStoryRes,\n  /** @param {!proto.userstory.GetAllUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.GetAllUserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.GetAllUserStoryReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.GetAllUserStoryRes>}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.getAllUserStory =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/userstory.UserStory/getAllUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_getAllUserStory);\n};\n\n\n/**\n * @param {!proto.userstory.GetAllUserStoryReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.GetAllUserStoryRes>}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryPromiseClient.prototype.getAllUserStory =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/userstory.UserStory/getAllUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_getAllUserStory);\n};\n\n\nmodule.exports = proto.userstory;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.userstory.AddNewUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.DeleteUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.GetAllUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.GetAllUserStoryRes', null, global);\ngoog.exportSymbol('proto.userstory.UpdateUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.UserStoryRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.AddNewUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.AddNewUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.AddNewUserStoryReq.displayName = 'proto.userstory.AddNewUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.AddNewUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.AddNewUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.AddNewUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.AddNewUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    accesstoken: msg.getAccesstoken(),\n    name: msg.getName()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.AddNewUserStoryReq}\n */\nproto.userstory.AddNewUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.AddNewUserStoryReq;\n  return proto.userstory.AddNewUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.AddNewUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.AddNewUserStoryReq}\n */\nproto.userstory.AddNewUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.AddNewUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.AddNewUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.AddNewUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.AddNewUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.AddNewUserStoryReq} The clone.\n */\nproto.userstory.AddNewUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.AddNewUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string accessToken = 6;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string name = 7;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.UserStoryRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.UserStoryRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.UserStoryRes.displayName = 'proto.userstory.UserStoryRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.UserStoryRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.UserStoryRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.UserStoryRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.UserStoryRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    id: msg.getId()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.UserStoryRes}\n */\nproto.userstory.UserStoryRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.UserStoryRes;\n  return proto.userstory.UserStoryRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.UserStoryRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.UserStoryRes}\n */\nproto.userstory.UserStoryRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.UserStoryRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UserStoryRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.UserStoryRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UserStoryRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.UserStoryRes} The clone.\n */\nproto.userstory.UserStoryRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.UserStoryRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.userstory.UserStoryRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UserStoryRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string id = 2;\n * @return {string}\n */\nproto.userstory.UserStoryRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UserStoryRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.UpdateUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.UpdateUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.UpdateUserStoryReq.displayName = 'proto.userstory.UpdateUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.UpdateUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.UpdateUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.UpdateUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.UpdateUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    userstoryid: msg.getUserstoryid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.UpdateUserStoryReq}\n */\nproto.userstory.UpdateUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.UpdateUserStoryReq;\n  return proto.userstory.UpdateUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.UpdateUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.UpdateUserStoryReq}\n */\nproto.userstory.UpdateUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserstoryid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.UpdateUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UpdateUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.UpdateUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UpdateUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getUserstoryid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.UpdateUserStoryReq} The clone.\n */\nproto.userstory.UpdateUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.UpdateUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string userStoryId = 3;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getUserstoryid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setUserstoryid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string role = 4;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string want = 5;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string so = 6;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string accessToken = 7;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.DeleteUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.DeleteUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.DeleteUserStoryReq.displayName = 'proto.userstory.DeleteUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.DeleteUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.DeleteUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.DeleteUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.DeleteUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    userstoryid: msg.getUserstoryid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.DeleteUserStoryReq}\n */\nproto.userstory.DeleteUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.DeleteUserStoryReq;\n  return proto.userstory.DeleteUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.DeleteUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.DeleteUserStoryReq}\n */\nproto.userstory.DeleteUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserstoryid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.DeleteUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.DeleteUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.DeleteUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.DeleteUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getUserstoryid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.DeleteUserStoryReq} The clone.\n */\nproto.userstory.DeleteUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.DeleteUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string userStoryId = 3;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getUserstoryid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setUserstoryid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.GetAllUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.GetAllUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.GetAllUserStoryReq.displayName = 'proto.userstory.GetAllUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.GetAllUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.GetAllUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.GetAllUserStoryReq}\n */\nproto.userstory.GetAllUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.GetAllUserStoryReq;\n  return proto.userstory.GetAllUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.GetAllUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.GetAllUserStoryReq}\n */\nproto.userstory.GetAllUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.GetAllUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.GetAllUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.GetAllUserStoryReq} The clone.\n */\nproto.userstory.GetAllUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.GetAllUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.GetAllUserStoryRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.GetAllUserStoryRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.GetAllUserStoryRes.displayName = 'proto.userstory.GetAllUserStoryRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.GetAllUserStoryRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.GetAllUserStoryRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    status: msg.getStatus(),\n    id: msg.getId(),\n    name: msg.getName()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.GetAllUserStoryRes}\n */\nproto.userstory.GetAllUserStoryRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.GetAllUserStoryRes;\n  return proto.userstory.GetAllUserStoryRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.GetAllUserStoryRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.GetAllUserStoryRes}\n */\nproto.userstory.GetAllUserStoryRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.GetAllUserStoryRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.GetAllUserStoryRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.GetAllUserStoryRes} The clone.\n */\nproto.userstory.GetAllUserStoryRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.GetAllUserStoryRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string role = 1;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string want = 2;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string so = 3;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string status = 4;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string id = 5;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string name = 6;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setName = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto.userstory);\n","import React, { Component } from 'react';\r\nimport {\r\n  Card, Badge, Button, Col, Container, Input, InputGroup,\r\n  InputGroupAddon, InputGroupText, Row, Table, Pagination, PaginationItem, PaginationLink,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  ModalFooter,\r\n\r\n} from 'reactstrap';\r\nimport cookie from 'react-cookies';\r\nimport { getProject } from '../../../../../actions'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Link } from 'react-router-dom';\r\nconst proto = {};\r\nproto.userstory = require('./../../../../../gRPC/userstory/userstory_grpc_web_pb');\r\nclass Detail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleAdd = this.toggleAdd.bind(this);\r\n    this.toggleEdit = this.toggleEdit.bind(this);\r\n\r\n    this.onTextboxChangename = this.onTextboxChangename.bind(this);\r\n    this.onTextboxChangerole = this.onTextboxChangerole.bind(this);\r\n    this.onTextboxChangewant = this.onTextboxChangewant.bind(this);\r\n    this.onTextboxChangeso = this.onTextboxChangeso.bind(this);\r\n\r\n    this.state = {\r\n      data: [],\r\n      requesterId: '',\r\n      actionStatus: '',              //success or show error when action add delete update      \r\n      modalAdd: false,\r\n      modalEdit: false,\r\n      modalActionStatus: false,\r\n      updateName: '',\r\n      name: '',\r\n      as: '',\r\n      want: '',\r\n      updateId:'',\r\n      so: '',\r\n\r\n    }\r\n  };\r\n\r\n\r\n\r\n  resetAddForm = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      name: '',\r\n      role: '',\r\n      want: '',\r\n      so: '',\r\n    });\r\n  }\r\n  toggleAdd() {\r\n    { this.resetAddForm() };\r\n    this.setState(prevState => ({\r\n      modalAdd: !prevState.modalAdd\r\n    }));\r\n  }\r\n  toggleEdit(event) {\r\n    let name = event.currentTarget.dataset.name\r\n    let id = event.currentTarget.dataset.id\r\n\r\n    this.setState(prevState => ({\r\n      modalEdit: !prevState.modalEdit,\r\n      updateName: name,\r\n      updateId: id\r\n    }));\r\n  }\r\n\r\n  toggleActionStatus = () => {\r\n    this.setState(prevState => ({\r\n      modalActionStatus: !prevState.modalActionStatus\r\n    }));\r\n  }\r\n\r\n  onTextboxChangename(event) {\r\n    this.setState({\r\n      name: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangerole(event) {\r\n    this.setState({\r\n      role: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangewant(event) {\r\n    this.setState({\r\n      want: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeso(event) {\r\n    this.setState({\r\n      so: event.target.value,\r\n    });\r\n  }\r\n\r\n  onGetUpdate = (userstoryIdUpdate, name, role, want, so) => {\r\n    this.setState({\r\n      rouserstoryIdUpdate: userstoryIdUpdate,\r\n      asUpdate: role,\r\n      wantUpdate: want,\r\n      soUpdate: so,\r\n      nameUpdate: name\r\n    });\r\n  }\r\n  componentDidMount() {\r\n\r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    var GetAllUserStoryReq = new proto.userstory.GetAllUserStoryReq();\r\n    GetAllUserStoryReq.setRequesterid(cookie.load(\"userId\"));\r\n    GetAllUserStoryReq.setAccesstoken(cookie.load(\"accessToken\"));\r\n    GetAllUserStoryReq.setProjectid(cookie.load(\"currentProject\"));\r\n\r\n    var response = userstoryService.getAllUserStory(GetAllUserStoryReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.setState(prevState => ({\r\n          data: [...prevState.data,\r\n          {\r\n            id: response.getId(),\r\n            name: response.getName(),\r\n            role: response.getRole(),\r\n            want: response.getWant(),\r\n            so: response.getSo()\r\n          }]\r\n        }));\r\n\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      console.log(\"status\")\r\n      console.log(status.code);\r\n      console.log(status.details);\r\n      console.log(status.metadata);\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n\r\n\r\n\r\n  }\r\n  handleAdd = () => {\r\n    console.log(\"handleAdd\")\r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    //some data of request (get that from frontend)\r\n\r\n    var metadata = {};\r\n    //make a request to server\r\n\r\n    var AddNewUserStoryReq = new proto.userstory.AddNewUserStoryReq();\r\n    AddNewUserStoryReq.setName(this.state.name);\r\n    AddNewUserStoryReq.setRequesterid(cookie.load(\"userId\"));\r\n    AddNewUserStoryReq.setProjectid(cookie.load(\"currentProject\"));\r\n    AddNewUserStoryReq.setRole(this.state.role);\r\n    AddNewUserStoryReq.setWant(this.state.want);\r\n    AddNewUserStoryReq.setSo(this.state.so);\r\n    AddNewUserStoryReq.setAccesstoken(cookie.load(\"accessToken\"));\r\n\r\n    userstoryService.addNewUserStory(AddNewUserStoryReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n        console.log(\"error\")\r\n      } else { //if success\r\n        //get response\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          this.setState(prevState => ({\r\n            modalAdd: !prevState.modalAdd,\r\n          }));\r\n          this.setState(prevState => ({ data: [...prevState.data, { id: response.getId(), name: this.state.name, role: this.state.role, want: this.state.want, so: this.state.so }] }));\r\n\r\n          this.setState({\r\n            name: '',\r\n            as: '',\r\n            want: '',\r\n            so: '',\r\n            modalActionStatus: true,\r\n            actionStatus: 'SUCCESS'\r\n          });\r\n        } else {\r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'FALSE',\r\n          });\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n  handleDelete = (event) => {\r\n    let id = event.currentTarget.dataset.id\r\n\r\n    console.log(\"handleDelete\")\r\n\r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n\r\n    var metadata = {};\r\n    //make a request to server\r\n\r\n    var DeleteUserStoryReq = new proto.userstory.DeleteUserStoryReq();\r\n    DeleteUserStoryReq.setRequesterid(cookie.load(\"userId\"));\r\n    DeleteUserStoryReq.setProjectid(cookie.load(\"currentProject\"));\r\n    DeleteUserStoryReq.setUserstoryid(id);\r\n    DeleteUserStoryReq.setAccesstoken(cookie.load(\"accessToken\"));\r\n\r\n    userstoryService.deleteUserStory(DeleteUserStoryReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          this.setState({\r\n            actionStatus: \"SUCCESS\",\r\n            modalActionStatus: true,\r\n          });\r\n          this.setState(prevState => ({ data: [...prevState.data.filter(function (e) { return e.id !== id; })] }));\r\n        } else {\r\n          this.setState({\r\n            actionStatus: \"FALSE\",\r\n          });\r\n          this.setState(prevState => ({\r\n            modalActionStatus: !prevState.modalActionStatus,\r\n          }));\r\n        }\r\n      }\r\n\r\n    });\r\n\r\n  };\r\n  handleUpdate = (event) => {\r\n    console.log(\"handleUpdate\")\r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var UpdateUserStoryReq = new proto.userstory.UpdateUserStoryReq();\r\n    UpdateUserStoryReq.setRequesterid(cookie.load(\"userId\"));\r\n    UpdateUserStoryReq.setProjectid(cookie.load(\"currentProject\"));\r\n    UpdateUserStoryReq.setUserstoryid(this.state.updateId);\r\n    UpdateUserStoryReq.setRole(this.state.role);\r\n    UpdateUserStoryReq.setWant(this.state.want);\r\n    UpdateUserStoryReq.setSo(this.state.so);\r\n    UpdateUserStoryReq.setAccesstoken(cookie.load(\"accessToken\"));\r\n\r\n    userstoryService.updateUserStory(UpdateUserStoryReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n         \r\n          const tmpdata = this.state.data.map(p =>\r\n            p.id == this.state.updateId\r\n              ? {\r\n                ...p, role: this.state.role,\r\n                want: this.state.want, so: this.state.so\r\n              }\r\n              : p\r\n          );\r\n          this.setState(prevState => ({\r\n            modalEdit: !prevState.modalEdit,\r\n            modalActionStatus: !prevState.modalActionStatus,\r\n            actionStatus: \"SUCCESS\",\r\n            data: tmpdata,\r\n\r\n          }));\r\n          \r\n\r\n          this.setState({\r\n          });\r\n\r\n\r\n        } else {\r\n          this.setState({\r\n            actionStatus: \"FALSE\",\r\n          });\r\n          this.setState(prevState => ({\r\n            modalEdit: !prevState.modalEdit,\r\n            modalActionStatus: !prevState.modalActionStatus,\r\n          }));\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // componentDidMount(){\r\n  //   this.resetAddForm();\r\n  // }\r\n  render() {\r\n    let that = this;\r\n    return (\r\n      <Row>\r\n        <Modal size=\"sm\" isOpen={that.state.modalActionStatus} toggle={that.toggleActionStatus} className={that.props.className}>\r\n          <ModalBody>\r\n            <center><h4>{that.state.actionStatus}</h4></center>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Col>\r\n          <Row>\r\n            <Col xs=\"2\" md=\"2\">\r\n              <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"Search\" />\r\n            </Col>\r\n\r\n            <Col xs=\"0\" md=\"0\">\r\n              <Button type=\"submit\" size=\"sm\" color=\"success\"><i class=\"fa fa-search\"></i></Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Card>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-lg\">\r\n                <thead class=\"thead\">\r\n                  <tr class=\"bg-primary\">\r\n                    <th>Title<i class=\"fa fa-sort\"></i></th>\r\n                    <th>As a...<i class=\"fa fa-sort\"></i></th>\r\n                    <th>I want to be able to... </th>\r\n                    <th>So that... </th>\r\n                    <th>\r\n                      <div>\r\n                        <Button color=\"primary\" size=\"sm\" className=\"mt-3\" onClick={that.toggleAdd}><i class=\"fa fa-plus-square\"></i>{this.props.buttonLabel}</Button>\r\n                        <Modal size=\"lg\" isOpen={that.state.modalAdd} toggle={that.toggleAdd}>\r\n                          <ModalHeader toggle={that.toggleAdd}>UserStory</ModalHeader>\r\n                          <ModalBody>\r\n                            <Form className=\"form-horizontal\">\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">Name</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"name\" name=\"name\" placeholder=\"name\" value={that.state.name} onChange={that.onTextboxChangename} />\r\n\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">As a...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"role\" name=\"role\" placeholder=\"As a...\" value={that.state.role} onChange={that.onTextboxChangerole} />\r\n\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">I want to be able to...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"want\" name=\"want\" placeholder=\"I want to be able to...\" value={that.state.want} onChange={that.onTextboxChangewant} />\r\n\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"textarea-input\">So that...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"textarea\" name=\"so\" id=\"so\" rows=\"9\"\r\n                                    placeholder=\"Content...\" value={that.state.so} onChange={that.onTextboxChangeso} />\r\n                                </Col>\r\n                              </FormGroup>\r\n                            </Form>\r\n                          </ModalBody>\r\n                          <ModalFooter>\r\n                            <Button color=\"primary\" onClick={that.handleAdd}>Submit</Button>\r\n                            <Button color=\"secondary\" onClick={that.toggleAdd}>Cancel</Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </div>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{\r\n                  this.state.data.map(function (i, key) {\r\n                    if (i != null) {\r\n                      let item = i\r\n                      let currentName = item.name\r\n                      return (\r\n                        <tr key={key}>\r\n                          <td>{item.name}</td>\r\n                          <td>{item.role}</td>\r\n                          <td>{item.want}</td>\r\n                          <td>{item.so}</td>\r\n                          <td>\r\n                            <div data-id={item.id} data-name={item.name} onClick={that.toggleEdit}>\r\n                              <Button color=\"warning\" size=\"sm\">\r\n                                <i class=\"fa fa-edit\"></i>\r\n                              </Button>\r\n                            </div>\r\n                            <Modal size=\"lg\" isOpen={that.state.modalEdit} toggle={that.toggleEdit} >\r\n                              <ModalHeader toggle={that.toggleEdit}>UserStory</ModalHeader>\r\n                              <ModalBody>\r\n                                <Form className=\"form-horizontal\">\r\n                                  <FormGroup row>\r\n                                    <Col md=\"3\">\r\n                                      <Label htmlFor=\"text-input\">Name</Label>\r\n                                    </Col>\r\n                                    <Col xs=\"12\" md=\"9\">\r\n                                      <Input type=\"text\" id=\"name\" name=\"name\" placeholder=\"name\" disabled={true} value={that.state.updateName} />\r\n\r\n                                    </Col>\r\n                                  </FormGroup>\r\n                                  <FormGroup row>\r\n                                    <Col md=\"3\">\r\n                                      <Label htmlFor=\"text-input\">As a...</Label>\r\n                                    </Col>\r\n                                    <Col xs=\"12\" md=\"9\">\r\n                                      <Input type=\"text\" id=\"role\" name=\"role\" placeholder=\"As a...\" value={that.state.role} onChange={that.onTextboxChangerole} />\r\n\r\n                                    </Col>\r\n                                  </FormGroup>\r\n                                  <FormGroup row>\r\n                                    <Col md=\"3\">\r\n                                      <Label htmlFor=\"text-input\">I want to be able to...</Label>\r\n                                    </Col>\r\n                                    <Col xs=\"12\" md=\"9\">\r\n                                      <Input type=\"text\" id=\"want\" name=\"want\" placeholder=\"I want to be able to...\" value={that.state.want} onChange={that.onTextboxChangewant} />\r\n\r\n                                    </Col>\r\n                                  </FormGroup>\r\n                                  <FormGroup row>\r\n                                    <Col md=\"3\">\r\n                                      <Label htmlFor=\"textarea-input\">So that...</Label>\r\n                                    </Col>\r\n                                    <Col xs=\"12\" md=\"9\">\r\n                                      <Input type=\"textarea\" name=\"so\" id=\"so\" rows=\"9\"\r\n                                        placeholder=\"Content...\" value={that.state.so} onChange={that.onTextboxChangeso} />\r\n                                    </Col>\r\n                                  </FormGroup>\r\n                                </Form>\r\n                              </ModalBody>\r\n                              <div data-id={item.id} onClick={that.handleUpdate}>\r\n                              <ModalFooter>\r\n                               \r\n\r\n                                  <Button color=\"primary\" >Submit</Button>\r\n\r\n                              </ModalFooter>\r\n                              </div>\r\n\r\n                            </Modal>\r\n\r\n                            <div data-id={item.id} onClick={that.handleDelete}> \r\n                            <Button type=\"submit\" size=\"sm\" color=\"danger\">\r\n                              <i class=\"fa fa-trash\"></i></Button>\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      )\r\n                    }\r\n\r\n                  })}</tbody>\r\n              </table>\r\n            </div>\r\n          </  Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { changeStatusProject } = state\r\n  const { projectId, projectName } = changeStatusProject\r\n  return {\r\n    projectId, projectName,\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Detail);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;"],"sourceRoot":""}