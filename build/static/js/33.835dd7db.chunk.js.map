{"version":3,"sources":["../node_modules/lodash.isobject/index.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/reactstrap/es/Button.js","../node_modules/reactstrap/es/Col.js","gRPC/sprintbacklog/sprintbacklog_grpc_web_pb.js","gRPC/sprintbacklog/sprintbacklog_pb.js","views/Workspace/Member/SprintBacklog/SprintBacklog.js"],"names":["module","exports","value","type","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","noGutters","a","bool","className","string","cssModule","object","form","Row","props","Tag","attributes","Object","classes","createElement","defaultProps","__webpack_exports__","inverse","color","block","body","outline","innerRef","oneOfType","func","Card","ref","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","d","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","prop_types__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_5___default","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","_utils__WEBPACK_IMPORTED_MODULE_7__","active","aria-label","disabled","onClick","size","children","node","close","Button","_React$Component","_this","this","bind","_proto","e","preventDefault","render","_this$props","ariaLabel","aria-hidden","btnOutlineColor","href","defaultAriaLabel","undefined","Component","lodash_isobject__WEBPACK_IMPORTED_MODULE_2__","lodash_isobject__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","stringOrNumberProp","number","columnProps","shape","push","pull","order","offset","xs","sm","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Col","colClasses","forEach","columnProp","_classNames","colSizeInterfix","colClass","_colClass","grpc","web","require","proto","sprintbacklog","SprintBacklogClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","SprintBacklogPromiseClient","methodInfo_SprintBacklog_deleteSprintBacklog","AbstractClientBase","MethodInfo","SprintBacklogRes","request","serializeBinary","deserializeBinary","deleteSprintBacklog","metadata","callback","rpcCall","unaryCall","methodInfo_SprintBacklog_getAllSprintBacklog","GetAllSprintBacklogRes","getAllSprintBacklog","serverStreaming","jspb","goog","global","Function","exportSymbol","DeleteSprintBacklogReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","backlogid","getBacklogid","accesstoken","getAccesstoken","teamid","getTeamid","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","setRequesterid","setProjectid","setBacklogid","setAccesstoken","setTeamid","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","writeString","cloneMessage","getFieldProto3","setField","status","getStatus","setStatus","GetAllSprintBacklogReq","title","getTitle","role","getRole","want","getWant","so","getSo","statusbacklog","getStatusbacklog","priority","getPriority","estimation","getEstimation","sprintid","getSprintid","start","getStart","deadline","getDeadline","setTitle","setRole","setWant","setSo","setStatusbacklog","setPriority","setEstimation","setSprintid","setStart","setDeadline","extend","SprintBacklog","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","handleBackToProductbacklog","handleComplete","state","data","sprintbacklogService","getFromStorage","response","that","on","split","end","parseInt","setState","prevState","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","id","sprint","code","console","log","setInStorage","react__WEBPACK_IMPORTED_MODULE_6___default","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","class","map","item","key","reactstrap__WEBPACK_IMPORTED_MODULE_10__"],"mappings":"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","file":"static/js/33.835dd7db.chunk.js","sourcesContent":["/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport isobject from 'lodash.isobject';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  push: deprecated(stringOrNumberProp, 'Please use the prop \"order\"'),\n  pull: deprecated(stringOrNumberProp, 'Please use the prop \"order\"'),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isobject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","/**\n * @fileoverview gRPC-Web generated client stub for sprintbacklog\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.sprintbacklog = require('./sprintbacklog_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprintbacklog.SprintBacklogClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprintbacklog.SprintBacklogPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.DeleteSprintBacklogReq,\n *   !proto.sprintbacklog.SprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_deleteSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.SprintBacklogRes,\n  /** @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.SprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.sprintbacklog.SprintBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.SprintBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.deleteSprintBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/deleteSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_deleteSprintBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.sprintbacklog.SprintBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.deleteSprintBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/deleteSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_deleteSprintBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.GetAllSprintBacklogReq,\n *   !proto.sprintbacklog.GetAllSprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_getAllSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.GetAllSprintBacklogRes,\n  /** @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.GetAllSprintBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.getAllSprintBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/getAllSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_getAllSprintBacklog);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.GetAllSprintBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.getAllSprintBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/getAllSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_getAllSprintBacklog);\n};\n\n\nmodule.exports = proto.sprintbacklog;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.sprintbacklog.DeleteSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.sprintbacklog.GetAllSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.sprintbacklog.GetAllSprintBacklogRes', null, global);\ngoog.exportSymbol('proto.sprintbacklog.SprintBacklogRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.DeleteSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.DeleteSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.DeleteSprintBacklogReq.displayName = 'proto.sprintbacklog.DeleteSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.DeleteSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    backlogid: msg.getBacklogid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.DeleteSprintBacklogReq;\n  return proto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq} The clone.\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.DeleteSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string teamId = 5;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.SprintBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.SprintBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.SprintBacklogRes.displayName = 'proto.sprintbacklog.SprintBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.SprintBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.SprintBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.SprintBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    backlogid: msg.getBacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.SprintBacklogRes}\n */\nproto.sprintbacklog.SprintBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.SprintBacklogRes;\n  return proto.sprintbacklog.SprintBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.SprintBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.SprintBacklogRes}\n */\nproto.sprintbacklog.SprintBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.SprintBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.SprintBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.SprintBacklogRes} The clone.\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.SprintBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.GetAllSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.GetAllSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.GetAllSprintBacklogReq.displayName = 'proto.sprintbacklog.GetAllSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.GetAllSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.GetAllSprintBacklogReq;\n  return proto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq} The clone.\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.GetAllSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string teamId = 4;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.GetAllSprintBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.GetAllSprintBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.GetAllSprintBacklogRes.displayName = 'proto.sprintbacklog.GetAllSprintBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.GetAllSprintBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    title: msg.getTitle(),\n    backlogid: msg.getBacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    status: msg.getStatus()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.GetAllSprintBacklogRes;\n  return proto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes} The clone.\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.GetAllSprintBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string title = 1;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string backlogId = 2;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 11;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string priority = 6;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string estimation = 7;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string sprintId = 8;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string start = 12;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string deadline = 10;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string status = 9;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\ngoog.object.extend(exports, proto.sprintbacklog);\n","import React, { Component } from 'react';\r\nimport { Card,CardHeader,Badge, Button, Col, Container, Input, InputGroup, InputGroupAddon, InputGroupText, Row, Table, Pagination, PaginationItem, PaginationLink, } from 'reactstrap';\r\nimport cookie from 'react-cookies';\r\nimport {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../../../../service/storage'\r\nconst proto = {};\r\nproto.sprintbacklog = require('./../../../../gRPC/sprintbacklog/sprintbacklog_grpc_web_pb');\r\n\r\nclass SprintBacklog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      }\r\n    };\r\n\r\n    componentDidMount() {  \r\n      const sprintbacklogService = new proto.sprintbacklog.SprintBacklogClient('https://www.overlead.co');\r\n      var metadata = {};\r\n      var GetAllSprintBacklogReq = new proto.sprintbacklog.GetAllSprintBacklogReq();\r\n      GetAllSprintBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n      GetAllSprintBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n      GetAllSprintBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n      GetAllSprintBacklogReq.setTeamid(getFromStorage(\"teamId\"));\r\n      \r\n      var response = sprintbacklogService.getAllSprintBacklog(GetAllSprintBacklogReq, metadata)\r\n      let that = this\r\n      response.on('data', function (response) {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          let arr = response.getStart().split('-');\r\n          let start = \"\"\r\n          let end = \"\"\r\n          if (arr[1] > 12) {\r\n            arr[1] = arr[1] - 12\r\n            start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n          } else {\r\n            start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n          }\r\n\r\n\r\n\r\n          arr = response.getDeadline().split('-')\r\n          if (arr[1] > 12) {\r\n            arr[1] = arr[1] - 12\r\n            end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n          } else {\r\n            end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n          }\r\n\r\n\r\n          that.setState(prevState => ({\r\n            data: [...prevState.data,\r\n            {\r\n              id: response.getBacklogid(),\r\n            title: response.getTitle(),\r\n            role: response.getRole(),\r\n            want: response.getWant(),\r\n            so: response.getSo(),\r\n            priority: response.getPriority(),\r\n            estimation: response.getEstimation(),\r\n            sprint: response.getSprintid(),\r\n            status: response.getStatusbacklog(),\r\n            start: start,\r\n            deadline: end\r\n            }]\r\n          }));\r\n  \r\n        }\r\n      })\r\n      response.on('status', function (status) {\r\n        if (status.code!=0) console.log(status)\r\n        setInStorage(\"sprints\",that.state.data)\r\n\r\n      });\r\n      response.on('end', function (end) {\r\n        console.log(\"end\")\r\n        console.log(end)\r\n      });\r\n  \r\n  \r\n  \r\n    }\r\n    handleBackToProductbacklog = () => {\r\n      \r\n    };\r\n    handleComplete = () => {\r\n      \r\n    };\r\n  render() {\r\n    let that=this;\r\n    return (\r\n      <Row>\r\n          <Col>    \r\n              <Card>\r\n              <div class=\"table-responsive\"> \r\n                <table class=\"table table-lg\">\r\n                  <thead class=\"thead\">\r\n                  <tr class=\"bg-primary\">\r\n                    <th>Title... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>As a... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>I want to be able to... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>So that... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Priority <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Estimation <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Sprint <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Start <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Deadline <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Status <i class=\"fa fa-sort\"></i></th>\r\n                    <th></th>\r\n                  </tr>\r\n                  </thead>\r\n                    <tbody>{this.state.data.map(function(item, key) {    \r\n               return (\r\n                  <tr key = {key}>\r\n                      <td>{item.title}</td>\r\n                      <td>{item.role}</td>\r\n                      <td>{item.want}</td>\r\n                      <td>{item.so}</td>\r\n                      <td><center>{item.priority}</center></td>\r\n                      <td><center>{item.estimation}</center></td>\r\n                      <td><center>{item.sprint}</center></td>\r\n                      <td><center>{item.start}</center></td>\r\n                      <td><center>{item.deadline}</center></td>\r\n                      <td></td>\r\n                      <td>                        \r\n                      <Button size=\"sm\" color=\"danger\" onClick={that.handleBackToProductbacklog}><i class=\"fa fa-trash\"></i></Button>\r\n                      <Button size=\"sm\" color=\"success\" onClick={that.handleComplete}><i class=\"fa fa-check\"></i></Button>\r\n                      </td>\r\n                  </tr>\r\n                )\r\n             \r\n             })}</tbody>\r\n                </table>\r\n            </div>\r\n               </Card>\r\n          </Col>\r\n        </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SprintBacklog;\r\n"],"sourceRoot":""}