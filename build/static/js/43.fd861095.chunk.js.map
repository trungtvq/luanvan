{"version":3,"sources":["assets/img/avatar/avatardefault.png","containers/HomeNav/index.js","views/Workspace/Team/AllTeam/AllTeam.js"],"names":["module","exports","__webpack_require__","p","proto","require","myproject","HomeTopNav","props","_this","Object","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","toggleActionStatus","setState","prevState","modalActionStatus","toggleCreatePj","modalCreatePj","mobileMoreAnchorEl","handleProfileMenuOpen","event","anchorEl","currentTarget","handleMenuClose","handleMobileMenuClose","handleMobileMenuOpen","handleCreatePj","myprojectService","MyprojectClient","d","state","startDate","start","getMinutes","getHours","getDate","getMonth","getFullYear","end","endDate","AddNewProjectReq","setTopic","Topic","console","log","setRequesterid","getFromStorage","setProjectname","ProjectName","setStart","setEnd","setPrivate","isPrivate","setCookie","addNewProject","err","response","getStatus","dispatch","addProject","getProjectid","actionStatus","onTextboxChangeTopic","target","value","onTextboxChangeProjectName","onChangeStartDate","date","onChangeEndDate","onTextboxChangePrivate","Date","setDate","_this2","classes","isMenuOpen","Boolean","isMobileMenuOpen","_this$state","renderMenu","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_material_ui_core_Menu__WEBPACK_IMPORTED_MODULE_14___default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_13___default","onClick","href","renderMobileMenu","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_9___default","color","_material_ui_core_Badge__WEBPACK_IMPORTED_MODULE_12___default","badgeContent","_material_ui_icons_Mail__WEBPACK_IMPORTED_MODULE_20___default","_material_ui_icons_Notifications__WEBPACK_IMPORTED_MODULE_21___default","_material_ui_icons_AccountCircle__WEBPACK_IMPORTED_MODULE_19___default","className","root","reactstrap__WEBPACK_IMPORTED_MODULE_30__","size","isOpen","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_31__","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_7___default","position","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_8___default","menuButton","aria-label","_material_ui_icons_Menu__WEBPACK_IMPORTED_MODULE_17___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_10___default","title","variant","noWrap","search","searchIcon","_material_ui_icons_Search__WEBPACK_IMPORTED_MODULE_18___default","_material_ui_core_InputBase__WEBPACK_IMPORTED_MODULE_11___default","placeholder","inputRoot","input","inputInput","reactstrap__WEBPACK_IMPORTED_MODULE_32__","type","grow","sectionDesktop","reactstrap__WEBPACK_IMPORTED_MODULE_33__","class","reactstrap__WEBPACK_IMPORTED_MODULE_34__","reactstrap__WEBPACK_IMPORTED_MODULE_35__","row","reactstrap__WEBPACK_IMPORTED_MODULE_36__","md","reactstrap__WEBPACK_IMPORTED_MODULE_37__","htmlFor","xs","reactstrap__WEBPACK_IMPORTED_MODULE_38__","id","name","onChange","react_datepicker__WEBPACK_IMPORTED_MODULE_25__","selected","timeInputLabel","dateFormat","showTimeInput","reactstrap__WEBPACK_IMPORTED_MODULE_39__","_coreui_react__WEBPACK_IMPORTED_MODULE_26__","direction","reactstrap__WEBPACK_IMPORTED_MODULE_40__","nav","src","avatardefault","alt","width","height","reactstrap__WEBPACK_IMPORTED_MODULE_41__","right","style","reactstrap__WEBPACK_IMPORTED_MODULE_42__","header","tag","email","react_router_dom__WEBPACK_IMPORTED_MODULE_27__","to","divider","e","onLogout","sectionMobile","aria-haspopup","_material_ui_icons_MoreVert__WEBPACK_IMPORTED_MODULE_22___default","React","Component","connect","updateProjectLoaded","project","needUpdate","withStyles","theme","flexGrow","marginLeft","marginRight","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_5__","display","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","pointerEvents","alignItems","justifyContent","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","team","AllTeam","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onTextboxChangeEmailMember","emailMember","onTextboxChangeRoleMember","roleMember","onTextboxChangeNameTeam","nameTeam","onTextboxChangeDescriptionTeam","descriptionTeam","onTextboxChangeDepartmentTeam","departmentTeam","toggleAddMember","modalAddMember","toggleEditMember","idMember","dataset","idTeam","role","modalEditMember","updateMemberId","updateTeamId","toggleAddTeam","modalAddTeam","toggleEditTeam","description","des","department","modalEditTeam","updateNameTeam","loadAllTeam","teamService","TeamClient","GetAllTeamReq","setProjectid","setAccesstoken","getAllTeam","that","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","on","newData","dataTeam","push","getTeamid","getName","getDescription","getDepartment","members","loadAllMember","status","code","GetAllMemberReq","setTeamid","getAllMember","map","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","assign","getId","point","currentTask","numOfTaskDone","handleAddMember","AddMemberReq","setMemberemail","setRole","addMember","handleUpdateMember","idteam","handleDeleteMember","idmember","RemoveMemberReq","removeMember","filter","i","handleAddTeam","handleUpdateTeam","UpdateTeamReq","setName","setDepartment","setDescription","updateTeam","handleDeleteTeam","DeleteTeamReq","deleteTeam","requesterId","forEach","react__WEBPACK_IMPORTED_MODULE_7___default","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","item","key","itemTeam","data-id","data-name","data-des","data-department","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","undefined","data-idTeam","itemMem","data-idMember","data-role","data-idmember","data-idteam"],"mappings":"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","file":"static/js/43.fd861095.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatardefault.197fb955.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { connect } from 'react-redux'\r\nimport { addProject } from '../../actions'\r\nimport DatePicker from \"react-datepicker\";\r\nimport {  AppHeaderDropdown,  AppSidebarToggler } from '@coreui/react';\r\nimport { Link } from 'react-router-dom';\r\nimport avatardefault from '../../assets/img/avatar/avatardefault.png'; // Tell Webpack this JS file uses this image\r\n\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Input,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  ModalFooter, UncontrolledDropdown, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Nav, NavItem, NavLink\r\n} from 'reactstrap';\r\nimport {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../../service/storage'\r\nlet Img = require('react-image')\r\n\r\nconst proto = {};\r\nproto.myproject = require('../../gRPC/myproject/myproject_grpc_web_pb');\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing.unit * 2,\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit * 3,\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 200,\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n});\r\n\r\nclass HomeTopNav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      anchorEl: null,\r\n      mobileMoreAnchorEl: null,\r\n      modalCreatePj: false,\r\n      Topic: '',\r\n      ProjectName: '',\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      isPrivate: \"false\",\r\n      actionStatus: '',\r\n      modalActionStatus: false,        //success or show error when action add delete update    \r\n    };\r\n  };\r\n  componentDidMount() {\r\n    let end = this.state.endDate\r\n    end.setDate(end.getDate() + 15)\r\n    this.setState({\r\n      endDate: end\r\n    })\r\n  }\r\n  toggleActionStatus = () => {\r\n    this.setState(prevState => ({\r\n      modalActionStatus: !prevState.modalActionStatus\r\n    }));\r\n  }\r\n\r\n  toggleCreatePj = () => {\r\n    this.setState(prevState => ({\r\n      modalCreatePj: !prevState.modalCreatePj,\r\n      mobileMoreAnchorEl: null,\r\n    }));\r\n\r\n  }\r\n  handleProfileMenuOpen = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleMenuClose = () => {\r\n    this.setState({ anchorEl: null });\r\n    this.handleMobileMenuClose();\r\n  };\r\n\r\n  handleMobileMenuOpen = event => {\r\n    this.setState({ mobileMoreAnchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleMobileMenuClose = () => {\r\n    this.setState({ mobileMoreAnchorEl: null });\r\n  };\r\n\r\n  handleCreatePj = () => {\r\n    const myprojectService = new proto.myproject.MyprojectClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    let d = this.state.startDate;\r\n    let start = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n    d = this.state.endDate;\r\n    let end = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n\r\n    var AddNewProjectReq = new proto.myproject.AddNewProjectReq();\r\n    AddNewProjectReq.setTopic(this.state.Topic);\r\n    console.log(this.state.Topic)\r\n    AddNewProjectReq.setRequesterid(getFromStorage(\"userId\"));\r\n    AddNewProjectReq.setProjectname(this.state.ProjectName);\r\n\r\n    AddNewProjectReq.setStart(start);\r\n    AddNewProjectReq.setEnd(end);\r\n    AddNewProjectReq.setPrivate(this.state.isPrivate);\r\n    AddNewProjectReq.setCookie(getFromStorage(\"accessToken\"));\r\n    myprojectService.addNewProject(AddNewProjectReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n        console.log(\"error AddNewProjectReq\")\r\n      } else {\r\n        console.log(response.getStatus())\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          this.props.dispatch(addProject(response.getProjectid(), this.state.Topic, this.state.ProjectName, start, end, this.state.isPrivate, \"0\"))\r\n          this.toggleCreatePj();\r\n          this.setState({\r\n            Topic: '',\r\n            ProjectName: '',\r\n            modalActionStatus: true,\r\n            actionStatus: 'SUCCESS'\r\n          });\r\n        } else {\r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'FAIL',\r\n          });\r\n        }\r\n\r\n\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  onTextboxChangeTopic = (event) => {\r\n    this.setState({\r\n      Topic: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeProjectName = (event) => {\r\n    this.setState({\r\n      ProjectName: event.target.value,\r\n    });\r\n  }\r\n  onChangeStartDate = (date) => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  }\r\n  onChangeEndDate = (date) => {\r\n    this.setState({\r\n      endDate: date\r\n    });\r\n  }\r\n\r\n\r\n  onTextboxChangePrivate = event => {\r\n    this.setState({\r\n      isPrivate: this.state.isPrivate == \"false\" ? \"true\" : \"false\",\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n    let that = this;\r\n    const {\r\n      anchorEl,\r\n      mobileMoreAnchorEl,\r\n    } = this.state;\r\n    const renderMenu = (\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={isMenuOpen}\r\n        onClose={this.handleMenuClose}\r\n      >\r\n        <MenuItem onClick={this.handleMenuClose}><a href=\"/Profile/Detail\">Profile</a></MenuItem>\r\n        <MenuItem onClick={this.handleMenuClose}><a href=\"/myproject\">My project</a></MenuItem>\r\n        <MenuItem onClick={this.handleMenuClose}><a href=\"/login\">Log out</a></MenuItem>\r\n      </Menu>\r\n    );\r\n\r\n    const renderMobileMenu = (\r\n      <Menu\r\n        anchorEl={mobileMoreAnchorEl}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={isMobileMenuOpen}\r\n        onClose={this.handleMenuClose}\r\n      >\r\n        <MenuItem onClick={this.handleMobileMenuClose}>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <MailIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <p>Messages</p>\r\n        </MenuItem>\r\n        <MenuItem onClick={this.handleMobileMenuClose}>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={11} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <p>Notifications</p>\r\n        </MenuItem>\r\n        <MenuItem onClick={this.handleProfileMenuOpen}>\r\n          <IconButton color=\"inherit\">\r\n            <AccountCircle />\r\n          </IconButton>\r\n          <p>Profile</p>\r\n        </MenuItem>\r\n      </Menu>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n\r\n        <Modal size=\"sm\" isOpen={that.state.modalActionStatus} toggle={that.toggleActionStatus} className={that.props.className}>\r\n          <ModalBody>\r\n            <center><h4>{that.state.actionStatus}</h4></center>\r\n          </ModalBody>\r\n        </Modal>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n              Overlead\r\n            </Typography>\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n              />\r\n            </div>\r\n            <Button type=\"button\" color=\"primary\" href=\"/myproject\">All project</Button>\r\n\r\n            <div className={classes.grow} />\r\n            <div className={classes.sectionDesktop}>\r\n\r\n              <Button variant=\"outlined\" color=\"primary\" size=\"sm\" onClick={that.toggleCreatePj}><b>Create Project</b></Button>\r\n              <Modal size=\"lg\" isOpen={that.state.modalCreatePj} toggle={that.toggleCreatePj} className={that.props.className}>\r\n                <ModalHeader toggle={that.toggleCreatePj}>Project</ModalHeader>\r\n                <ModalBody>\r\n                  <div class=\"card  bg-primary mb-3\">\r\n                    <div class=\"card-body\">\r\n                      <Form className=\"form-horizontal\">\r\n\r\n                        <FormGroup row>\r\n                          <Col md=\"3\">\r\n                            <Label htmlFor=\"text-input\">Topic Name</Label>\r\n                          </Col>\r\n                          <Col xs=\"5\" md=\"5\">\r\n                            <Input type=\"text\" id=\"Topic\" name=\"Topic\" placeholder=\"Topic\" value={this.state.Topic} onChange={that.onTextboxChangeTopic} />\r\n                          </Col>\r\n                        </FormGroup>\r\n\r\n\r\n                        <FormGroup row>\r\n                          <Col md=\"3\">\r\n                            <Label htmlFor=\"text-input\">Project Name</Label>\r\n                          </Col>\r\n                          <Col xs=\"5\" md=\"5\">\r\n                            <Input type=\"text\" id=\"ProjectName\" name=\"ProjectName\" placeholder=\"Project Name\" value={this.state.ProjectName} onChange={that.onTextboxChangeProjectName} />\r\n\r\n                          </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row>\r\n                          <Col md=\"3\">\r\n                            <Label htmlFor=\"date-input\">Start </Label>\r\n                          </Col>\r\n                          <Col xs=\"3\" md=\"3\">\r\n\r\n                            <DatePicker\r\n\r\n                              selected={that.state.startDate}\r\n                              timeInputLabel=\"Time:\"\r\n                              onChange={that.onChangeStartDate}\r\n                              dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                              showTimeInput\r\n                            />\r\n                          </Col>\r\n\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row>\r\n                          <Col md=\"3\">\r\n                            <Label htmlFor=\"date-input\">End </Label>\r\n                          </Col>\r\n                          <Col xs=\"3\" md=\"3\">\r\n                            <DatePicker\r\n\r\n\r\n                              selected={that.state.endDate}\r\n                              timeInputLabel=\"Time:\"\r\n                              onChange={that.onChangeEndDate}\r\n                              dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                              showTimeInput\r\n                            />\r\n                          </Col>\r\n\r\n                        </FormGroup>\r\n\r\n                        <FormGroup row>\r\n                          <Col md=\"5\">\r\n                            <Label htmlFor=\"date-input\">Private </Label>\r\n                          </Col>\r\n                          <Col xs=\"5\" md=\"5\">\r\n                            <Input type=\"checkbox\" id=\"Private\" name=\"Private\" value={this.state.isPrivate} onChange={that.onTextboxChangePrivate} />\r\n                          </Col>\r\n                        </FormGroup>\r\n                      </Form>\r\n                    </div>\r\n                  </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                  <Button type=\"submit\" color=\"primary\" onClick={that.handleCreatePj}>Submit</Button>\r\n                  <Button color=\"secondary\" onClick={that.toggleCreatePj}>Cancel</Button>\r\n                </ModalFooter>\r\n              </Modal>\r\n\r\n\r\n\r\n              <AppHeaderDropdown direction=\"down\" >\r\n                <DropdownToggle nav >\r\n                  {\r\n                    (getFromStorage('avatar') == \"\" || getFromStorage('avatar') == null) ?\r\n                      <img src={avatardefault} className=\"img-avatar\" alt=\"\" width=\"25px\" height=\"25px\" /> :\r\n                      <img src={getFromStorage('avatar')} className=\"img-avatar\" alt=\"\" />\r\n\r\n                  }\r\n                </DropdownToggle>\r\n                <DropdownMenu right style={{ right: 'auto' }}>\r\n\r\n\r\n                  <DropdownItem header tag=\"div\" className=\"text-center\"><strong>\r\n                    {this.props.email}\r\n                  </strong></DropdownItem>\r\n\r\n\r\n\r\n\r\n\r\n                  <DropdownItem><i className=\"fa fa-envelope-o\"></i> Messages</DropdownItem>\r\n                  <Link to=\"/Member/Task/MyTask\">\r\n                    <DropdownItem><i className=\"fa fa-tasks\"></i> Notify</DropdownItem>\r\n                  </Link>\r\n                  <Link to=\"/Profile/Detail\">\r\n                    <DropdownItem><i className=\"fa fa-user\"></i>\r\n                      Profile\r\n              </DropdownItem>\r\n                  </Link>\r\n\r\n                  <Link to=\"/donate\">\r\n                    <DropdownItem><i className=\"fa fa-usd\"></i> Upgrade</DropdownItem>\r\n                  </Link>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem onClick={e => this.onLogout()}><i className=\"fa fa-lock\"></i> Logout</DropdownItem>\r\n                </DropdownMenu>\r\n              </AppHeaderDropdown>\r\n            </div>\r\n            <div className={classes.sectionMobile}>\r\n              <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\r\n                <MoreIcon />\r\n              </IconButton>\r\n            </div>\r\n\r\n          </Toolbar>\r\n        </AppBar>\r\n        {renderMenu}\r\n        {renderMobileMenu}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nHomeTopNav.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\nfunction mapStateToProps(state) {\r\n  console.log(\"mapStateToProps homeNav\")\r\n  const { updateProjectLoaded } = state\r\n  const { project, needUpdate } = updateProjectLoaded\r\n  return {\r\n    project, needUpdate\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(withStyles(styles)(HomeTopNav));","import React, { Component } from 'react';\r\nimport {\r\n\r\n  Button,\r\n\r\n  Card,\r\n  Container,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  Col,\r\n  Collapse,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Form,\r\n  FormGroup,\r\n\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Label,\r\n\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n\r\n} from 'reactstrap';\r\nimport {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../../../../service/storage'\r\nimport { Link } from 'react-router-dom';\r\nimport Demo from '../../../../containers/HomeNav'\r\n\r\nimport cookie from 'react-cookies';\r\nconst proto = {};\r\nproto.team = require('../../../../gRPC/team/team_grpc_web_pb');\r\nclass AllTeam extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataTeam: [],\r\n\r\n      requesterId: '',\r\n      actionStatus: '',              //success or show error when action add delete update      \r\n      modalAddMember: false,\r\n      modalEditMember: false,\r\n      modalAddTeam: false,\r\n      modalEditTeam: false,\r\n      modalActionStatus: false,\r\n\r\n      updateTeamId: '',\r\n      updateNameTeam: '',\r\n\r\n      nameTeam: '',\r\n      descriptionTeam: '',\r\n      departmentTeam: '',\r\n\r\n\r\n      updateMemberId: '',\r\n      emailMember: '',\r\n      roleMember: '',\r\n\r\n\r\n    }\r\n  };\r\n  //onchange member\r\n  onTextboxChangeEmailMember = (event) => {\r\n    this.setState({\r\n      emailMember: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeRoleMember = (event) => {\r\n    this.setState({\r\n      roleMember: event.target.value,\r\n    });\r\n  }\r\n  //onchange team\r\n  onTextboxChangeNameTeam = (event) => {\r\n    this.setState({\r\n      nameTeam: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeDescriptionTeam = (event) => {\r\n    this.setState({\r\n      descriptionTeam: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeDepartmentTeam = (event) => {\r\n    this.setState({\r\n      departmentTeam: event.target.value,\r\n    });\r\n  }\r\n  //action status\r\n  toggleActionStatus = () => {\r\n    this.setState(prevState => ({\r\n      modalActionStatus: !prevState.modalActionStatus\r\n    }));\r\n  }\r\n  //toggle member\r\n  toggleAddMember = (event) => {\r\n    this.setState(prevState => ({\r\n      modalAddMember: !prevState.modalAddMember,\r\n    }));\r\n  }\r\n  toggleEditMember = (event) => {\r\n    let idMember = event.currentTarget.dataset.idMember;\r\n    let idTeam = event.currentTarget.dataset.idTeam;\r\n    let role = event.currentTarget.dataset.role;\r\n    let name= event.currentTarget.dataset.name;\r\n    this.setState(prevState => ({\r\n      modalEditMember: !prevState.modalEditMember,\r\n      updateMemberId: idMember,\r\n      updateTeamId: idTeam,\r\n      roleMember: role,\r\n      emailMember:name,\r\n    }));\r\n  }\r\n  //toggle team\r\n  toggleAddTeam = () => {\r\n    this.setState(prevState => ({\r\n      modalAddTeam: !prevState.modalAddTeam\r\n    }));\r\n  }\r\n  toggleEditTeam = (event) => {\r\n    let name = event.currentTarget.dataset.name;\r\n    let id = event.currentTarget.dataset.id;\r\n    let description = event.currentTarget.dataset.des;\r\n    let department = event.currentTarget.dataset.department;\r\n\r\n\r\n    this.setState(prevState => ({\r\n      modalEditTeam: !prevState.modalEditTeam,\r\n      updateNameTeam: name,\r\n      updateTeamId: id,\r\n      departmentTeam:department,\r\n      descriptionTeam:description,\r\n      nameTeam:name,\r\n    }));\r\n  }\r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  loadAllTeam = () => {\r\n    console.log(\"getAllTeam\")\r\n    const teamService = new proto.team.TeamClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var GetAllTeamReq = new proto.team.GetAllTeamReq();\r\n    GetAllTeamReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllTeamReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    GetAllTeamReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    let response = teamService.getAllTeam(GetAllTeamReq, metadata)\r\n\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        let newData = that.state.dataTeam\r\n        newData.push({\r\n          id: response.getTeamid(),\r\n          name: response.getName(),\r\n          description: response.getDescription(),\r\n          department: response.getDepartment(),\r\n          members: []\r\n        })\r\n        console.log(\"newData\")\r\n        console.log(newData)\r\n        that.setState({\r\n          dataTeam: newData\r\n        })\r\n        that.loadAllMember(response.getTeamid())\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n\r\n  }\r\n  loadAllMember = (id) => {\r\n    console.log(\"loadAllMember\")\r\n    const teamService = new proto.team.TeamClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var GetAllMemberReq = new proto.team.GetAllMemberReq();\r\n    GetAllMemberReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllMemberReq.setTeamid(id);\r\n    GetAllMemberReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    let response = teamService.getAllMember(GetAllMemberReq, metadata)\r\n\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        let newData = that.state.dataTeam\r\n        newData.map(p =>\r\n          p.id == id\r\n            ? {\r\n              ...p, members: Object.assign(p.members, p.members.push({\r\n                id: response.getId(),\r\n                name: response.getName(),\r\n                role: 'member',\r\n                point: '0',\r\n                currentTask: '0',\r\n                numOfTaskDone: '0',\r\n              }))\r\n            } :\r\n            {\r\n              p\r\n            }\r\n\r\n        )\r\n\r\n        console.log(\"newData\")\r\n        console.log(newData)\r\n        that.setState({\r\n          dataTeam: newData\r\n        })\r\n\r\n\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    //viet hàm lấy toàn bộ dữ liệu trong collection team đổ vào array dataTeam\r\n\r\n    this.loadAllTeam()\r\n    this.state.dataTeam.forEach(i => {\r\n      this.loadAllMember(i.id)\r\n    })\r\n  }\r\n  //member\r\n  handleAddMember = () => {\r\n\r\n    console.log(\"handleAddMember\")\r\n    const teamService = new proto.team.TeamClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var AddMemberReq = new proto.team.AddMemberReq();\r\n    AddMemberReq.setRequesterid(getFromStorage(\"userId\"));\r\n    AddMemberReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    AddMemberReq.setTeamid(this.state.updateTeamId)\r\n    AddMemberReq.setMemberemail(this.state.emailMember)\r\n    AddMemberReq.setRole(this.state.roleMember)\r\n    let that = this\r\n    teamService.addMember(AddMemberReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          let newData = that.state.dataTeam\r\n          newData.map(p =>\r\n            p.id == that.state.updateTeamId\r\n              ? {\r\n                ...p, members: Object.assign(p.members, p.members.push({\r\n                  id: response.getId(),\r\n                  name: response.getName(),\r\n                  role: this.state.roleMember,\r\n                  point: '0',\r\n                  currentTask: '0',\r\n                  numOfTaskDone: '0',\r\n                }))\r\n              } :\r\n              {\r\n                p\r\n              }\r\n  \r\n          )\r\n  \r\n          console.log(\"newData\")\r\n          console.log(newData)\r\n          that.setState({\r\n            modalAddMember:false,\r\n            dataTeam: newData,\r\n            modalActionStatus: true,\r\n            actionStatus: 'SUCCESS',\r\n            emailMember: '',\r\n            roleMember: '',\r\n      \r\n          })\r\n\r\n        } else {\r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'FAIL',\r\n          });\r\n\r\n        }\r\n      }\r\n    })\r\n  }\r\n  handleUpdateMember = (event) => {\r\n    let idMember = event.currentTarget.dataset.idMember;\r\n    let idteam = event.currentTarget.dataset.idteam;\r\n  }\r\n  handleDeleteMember = (event) => {\r\n    let idmember = event.currentTarget.dataset.idmember;\r\n    let idteam = event.currentTarget.dataset.idteam;\r\n    console.log(\"handleDeleteMember\")\r\n    const teamService = new proto.team.TeamClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var RemoveMemberReq = new proto.team.RemoveMemberReq();\r\n    RemoveMemberReq.setRequesterid(getFromStorage(\"userId\"));\r\n    RemoveMemberReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    RemoveMemberReq.setTeamid(idteam)\r\n    RemoveMemberReq.setMemberemail(idmember);\r\n    let that = this\r\n    teamService.removeMember(RemoveMemberReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          console.log(\"SUCCESS\")\r\n          let newData = that.state.dataTeam\r\n          newData.map(p =>\r\n            p.id == idteam\r\n              ? {\r\n                ...p, members: p.members.filter(i=>\r\n                  i.id==idmember?false:true)\r\n              } :\r\n              {\r\n                p\r\n              }\r\n  \r\n          )\r\n  \r\n          console.log(\"newData\")\r\n          console.log(newData)\r\n          that.setState({\r\n            dataTeam: newData,\r\n            modalActionStatus: true,\r\n            actionStatus: 'SUCCESS',\r\n          })\r\n\r\n        } else {\r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'FAIL',\r\n          });\r\n\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n  //team\r\n  handleAddTeam = () => { }\r\n  handleUpdateTeam = (event) => {\r\n    console.log(\"handleUpdateTeam\")\r\n    const teamService = new proto.team.TeamClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var UpdateTeamReq = new proto.team.UpdateTeamReq();\r\n    UpdateTeamReq.setRequesterid(getFromStorage(\"userId\"));\r\n    UpdateTeamReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    UpdateTeamReq.setTeamid(this.state.updateTeamId)\r\n    UpdateTeamReq.setName(this.state.nameTeam);\r\n    UpdateTeamReq.setDepartment(this.state.departmentTeam);\r\n    UpdateTeamReq.setDescription(this.state.descriptionTeam);\r\n    let that = this\r\n    teamService.updateTeam(UpdateTeamReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n\r\n          let newData = this.state.dataTeam.map(p =>\r\n            p.id == that.state.updateTeamId\r\n              ? {\r\n                ...p, name: that.state.nameTeam, department: that.state.departmentTeam, description: that.state.descriptionTeam\r\n              }\r\n              : p\r\n          )\r\n          that.setState(prevState => ({\r\n            modalEditTeam: !prevState.modalEditTeam,\r\n            dataTeam: newData,\r\n            modalActionStatus: true,\r\n            actionStatus: 'SUCCESS', \r\n          }))\r\n        \r\n        } else {\r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'FAIL',           \r\n          });\r\n\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n  handleDeleteTeam = (event) => {\r\n    let id = event.currentTarget.dataset.id;\r\n    console.log(this.state.updateTeamId)\r\n\r\n    console.log(\"getAllTeam\")\r\n    const teamService = new proto.team.TeamClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var DeleteTeamReq = new proto.team.DeleteTeamReq();\r\n    DeleteTeamReq.setRequesterid(getFromStorage(\"userId\"));\r\n    DeleteTeamReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    DeleteTeamReq.setTeamid(id)\r\n    let that = this\r\n    teamService.deleteTeam(DeleteTeamReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n\r\n          let newData = this.state.dataTeam.filter(p =>\r\n            p.id == id\r\n              ? false : true)\r\n          that.setState({\r\n            dataTeam: newData,\r\n            modalActionStatus: true,\r\n            actionStatus: 'SUCCESS',\r\n          })\r\n\r\n        } else {\r\n          this.setState({\r\n            modalActionStatus: true,\r\n            actionStatus: 'FAIL',\r\n          });\r\n\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n  render() {\r\n    let that = this;\r\n    console.log(\"render\")\r\n    console.log(this.state.dataTeam.members)\r\n    return (\r\n      <div>\r\n        <Modal size=\"sm\" isOpen={this.state.modalActionStatus} toggle={this.toggleActionStatus} className={this.props.className}>\r\n          <ModalBody>\r\n            <center><h4>{this.state.actionStatus}</h4></center>\r\n          </ModalBody>\r\n        </Modal>\r\n        {that.state.dataTeam.map(function (item, key) {\r\n          let itemTeam = item;\r\n          return (\r\n            <div class=\"card border-primary  mb-6\">\r\n              <div class=\"card-header bg-primary\">\r\n                <div class=\"row justify-content-md-center\">\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <strong>{itemTeam.name}</strong>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-auto\">\r\n                  </div>\r\n\r\n                  <div class=\"col col-sm-1\">\r\n                  \r\n                    <div class=\"row \">\r\n                         \r\n                          <div class=\"col col-sm-1\">\r\n                          <div data-id={itemTeam.id} data-name={itemTeam.name} data-des={itemTeam.description} data-department={itemTeam.department}onClick={that.toggleEditTeam}>\r\n                            <Button color=\"warning\" size=\"sm\" className=\"mt-3\"><i class=\"fa fa-edit\"></i></Button>\r\n                          </div>\r\n                          </div>\r\n                          <Modal size=\"lg\" isOpen={that.state.modalEditTeam} toggle={that.toggleEditTeam} >\r\n                            <ModalHeader toggle={that.toggleEditTeam}>Team</ModalHeader>\r\n                            <ModalBody>\r\n                              <Form className=\"form-horizontal\">\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"text-input\">Name</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <Input type=\"text\" id=\"Name\" name=\"Name\" placeholder=\"Name\" value={that.state.nameTeam} onChange={that.onTextboxChangeNameTeam} />\r\n\r\n                                  </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"text-input\">Description</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <Input type=\"text\" id=\"Description\" name=\"Description\" placeholder=\"Description\" value={that.state.descriptionTeam} onChange={that.onTextboxChangeDescriptionTeam} />\r\n\r\n                                  </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"text-input\">Department</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <Input type=\"text\" id=\"Department\" name=\"Department\" placeholder=\"Department\" value={that.state.departmentTeam} onChange={that.onTextboxChangeDepartmentTeam} />\r\n\r\n                                  </Col>\r\n                                </FormGroup>\r\n\r\n                              </Form>\r\n                            </ModalBody>\r\n                            <div data-id={itemTeam.id} onClick={that.handleUpdateTeam}>\r\n                              <ModalFooter>\r\n                                <Button color=\"primary\" >Submit</Button>\r\n                              </ModalFooter>\r\n                            </div>\r\n\r\n                          </Modal>\r\n                          \r\n                          <div class=\"col col-sm-1\">\r\n                          <div data-id={itemTeam.id} onClick={that.handleDeleteTeam}>\r\n                            <Button color=\"danger\" size=\"sm\" className=\"mt-3\" ><i class=\"fa fa-trash\"></i></Button>\r\n                          </div>\r\n                          </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n              <div class=\"card-body\">\r\n              {item.members != undefined ?\r\n                      <table class=\"table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Name</th>\r\n                            <th>Role</th>\r\n                            <th>Point</th>\r\n                            <th>Current task</th>\r\n                            <th>Task completed</th>\r\n                            <th>\r\n                              <div>\r\n                                <center>\r\n                                  <div  onClick={()=>that.setState({updateTeamId:item.id})}>\r\n                                  <Button color=\"primary\" size=\"sm\" className=\"mt-3\" onClick={that.toggleAddMember} >\r\n                                    <i class=\"fa fa-plus-square\"></i>\r\n                                    </Button>\r\n                                    </div>\r\n                                    </center>\r\n                                <Modal size=\"lg\" isOpen={that.state.modalAddMember} toggle={that.toggleAddMember}>\r\n                                  <ModalHeader  toggle={that.toggleAddMember}>Member</ModalHeader>\r\n                                  <ModalBody>\r\n\r\n                                    <Form className=\"form-horizontal\">\r\n                                      <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">User name</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"5\" md=\"5\">\r\n                                          <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"User name\" value={that.state.emailMember} onChange={that.onTextboxChangeEmailMember} />\r\n                                        </Col>\r\n                                      </FormGroup>\r\n                                      <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">Role</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"5\" md=\"5\">\r\n                                          <Input type=\"text\" id=\"Role\" name=\"Role\" placeholder=\"Role\" value={that.state.roleMember} onChange={that.onTextboxChangeRoleMember} />\r\n                                        </Col>\r\n                                      </FormGroup>\r\n\r\n                                    </Form>\r\n\r\n                                  </ModalBody>\r\n                                  <div data-idTeam={itemTeam.id} onClick={that.handleAddMember}>\r\n                                    <ModalFooter>\r\n                                      <Button color=\"primary\" >Submit</Button>\r\n                                    </ModalFooter>\r\n                                  </div>\r\n                                </Modal>\r\n                              </div>\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                       \r\n                        {item.members.map(function (itemMem, key) {\r\n                        return (\r\n                          <tbody>\r\n                          <tr>\r\n                            <td>{itemMem.name}</td>\r\n                            <td>{itemMem.role}</td>\r\n                            <td>{itemMem.point}</td>\r\n                            <td>{itemMem.currentTask}</td>\r\n                            <td>{itemMem.numOfTaskDone}</td>\r\n                            <td>\r\n                              <center>\r\n                                <div data-idTeam={itemTeam.id} data-idMember={itemMem.id} data-name={itemMem.name} data-role={itemMem.role}onClick={that.toggleEditMember}>\r\n                                  <Button color=\"warning\" size=\"sm\">\r\n                                    <i class=\"fa fa-edit\"></i>\r\n                                  </Button>\r\n                                </div>\r\n                                <Modal size=\"lg\" isOpen={that.state.modalEditMember} toggle={that.toggleEditMember} >\r\n                                  <ModalHeader toggle={that.toggleEditMember}>Member</ModalHeader>\r\n                                  <ModalBody>\r\n                                    <Form className=\"form-horizontal\">\r\n                                      <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">User name</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"5\" md=\"5\">\r\n                                          <Input type=\"text\" id=\"text-input\" name=\"text-input\" value={that.state.emailMember}  placeholder=\"User name\" onChange={that.onTextboxChangeEmailMember}/>\r\n                                        </Col>\r\n                                      </FormGroup>\r\n                                      <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">Role</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"5\" md=\"5\">\r\n                                          <Input type=\"text\" id=\"Role\" name=\"Role\" placeholder=\"Role\" value={that.state.roleMember} onChange={that.onTextboxChangeRoleMember} />\r\n                                        </Col>\r\n                                      </FormGroup>\r\n\r\n                                    </Form>\r\n\r\n                                  </ModalBody>\r\n                                  <div data-idTeam={itemTeam.id} data-idMember={itemMem.id} onClick={that.handleUpdateMember}>\r\n                                    <ModalFooter>\r\n                                      <Button color=\"primary\" >Submit</Button>\r\n                                    </ModalFooter>\r\n                                  </div>\r\n                                </Modal>\r\n\r\n                                <div data-idmember={itemMem.id} data-idteam={itemTeam.id} onClick={that.handleDeleteMember}>\r\n                                  <Button size=\"sm\" color=\"danger\" >\r\n                                    <i class=\"fa fa-trash\"></i></Button>\r\n                                </div>\r\n                              </center>\r\n                            </td>\r\n                          </tr>\r\n\r\n                        </tbody>\r\n\r\n\r\n                        )})} </table> :\r\n                        <div>Empty Member</div> }\r\n                     \r\n                    \r\n                \r\n\r\n               \r\n\r\n              </div>\r\n            </div>\r\n\r\n          )\r\n        })}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        {/* <div class=\"card border-primary mb-3\">\r\n                <div class=\"card-header bg-primary\">\r\n                  <strong>Find and add member</strong>\r\n                      <Row>       \r\n                        <Col xs=\"2\" md=\"2\">\r\n                          <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"Search\" /> \r\n                        </Col> \r\n                        <Col xs=\"0\" md=\"0\">\r\n                          <Button type=\"submit\" size=\"sm\" color=\"success\"><i class=\"fa fa-search\"></i></Button>\r\n                        </Col> \r\n                      </Row>     \r\n\r\n                      <Form action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">               \r\n                        <FormGroup row>\r\n                          <Col md=\"3\">\r\n                            <Label htmlFor=\"text-input\">Skill</Label>\r\n                          </Col>\r\n                          <Col xs=\"5\" md=\"5\">\r\n                            <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"skill\" />\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                          <Col md=\"3\">\r\n                            <Label htmlFor=\"text-input\">Point</Label>\r\n                          </Col>\r\n                          <Col xs=\"2\" md=\"2\">\r\n                            <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"Point min\" />\r\n                            <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"Point max\" />  \r\n                          </Col>\r\n                        </FormGroup>   \r\n                        <FormGroup row>\r\n                          <Col md=\"3\">\r\n                            <Label htmlFor=\"text-input\">Freelancer</Label>\r\n                          </Col>\r\n                          <Col xs=\"2\" md=\"2\">\r\n                            <Input type=\"checkbox\" id=\"text-input\" name=\"text-input\"  />  \r\n                          </Col>\r\n                        </FormGroup>                                          \r\n                      </Form>\r\n                </div>           \r\n                <div class=\"card-body\">\r\n                    <Table hover bordered striped responsive size=\"sm\">\r\n                      <thead>\r\n                      <tr>\r\n                        <th>Name</th>\r\n                        <th>Skill</th>\r\n                        <th>Point</th>\r\n                        <th>Number Project</th>\r\n                        <th></th>\r\n          \r\n                       \r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                      <tr>\r\n                        <td></td>\r\n                       \r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td>\r\n                          <Button type=\"submit\" size=\"sm\" color=\"primary\"><i class=\"fa fa-user-plus\"></i></Button>\r\n                        </td>\r\n                      </tr>\r\n                     \r\n                     \r\n                      <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td>\r\n                          <Button type=\"submit\" size=\"sm\" color=\"primary\"><i class=\"fa fa-user-plus\"></i></Button>\r\n                        </td>\r\n                      </tr>\r\n                     \r\n                     \r\n                      <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td>\r\n                          <Button type=\"submit\" size=\"sm\" color=\"primary\"><i class=\"fa fa-user-plus\"></i></Button>\r\n                        </td>\r\n                      </tr>\r\n\r\n                      <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td>\r\n                          <Button type=\"submit\" size=\"sm\" color=\"primary\"><i class=\"fa fa-user-plus\"></i></Button>\r\n                        </td>\r\n                      </tr>\r\n                      \r\n                      </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div> */}\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllTeam;\r\n"],"sourceRoot":""}