{"version":3,"sources":["views/Workspace/Member/Task/MyTask/MyTask.js","gRPC/mytask/mytask_grpc_web_pb.js","gRPC/mytask/mytask_pb.js"],"names":["proto","mytask","require","MyTask","props","_this","Object","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","toggle","bind","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","state","collapse","fadeIn","selected","data","setState","mytaskService","MytaskClient","GetAllMyTaskReq","setRequesterid","getFromStorage","setAccesstoken","setProjectid","setTeamid","setUsername","response","getAllMyTask","that","start","end","on","getStatus","arr","getStart","split","length","parseInt","getDeadline","prevState","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","id","getTeamtaskid","title","getTitle","description","getDescription","priority","getPriority","review","getReview","comment","getComment","status","getStatustask","deadline","code","console","log","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","xs","md","reactstrap__WEBPACK_IMPORTED_MODULE_12__","type","name","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_13__","size","color","class","reactstrap__WEBPACK_IMPORTED_MODULE_14__","map","item","key","Component","grpc","web","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","MytaskPromiseClient","methodInfo_Mytask_getAllMyTask","AbstractClientBase","MethodInfo","GetAllMyTaskRes","request","serializeBinary","deserializeBinary","prototype","metadata","serverStreaming","methodInfo_Mytask_commentMyTask","MyTaskRes","commentMyTask","callback","rpcCall","unaryCall","methodInfo_Mytask_updateMyTask","updateMyTask","module","exports","jspb","goog","global","Function","exportSymbol","MyTaskReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","teamid","getTeamid","accesstoken","getAccesstoken","taskid","getTaskid","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setTaskid","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","writeString","cloneMessage","getFieldProto3","setField","CommentMyTaskReq","getMytask","readMessage","setMytask","setComment","writeMessage","getWrapperField","setWrapperField","clearMytask","hasMytask","getField","UpdateMyTaskReq","statustask","setStatustask","setStatus","username","getUsername","teamtaskid","point","getPoint","setTeamtaskid","setTitle","setDescription","setPriority","setStart","setDeadline","setReview","setPoint","object","extend"],"mappings":"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","file":"static/js/48.60fc5927.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport DualListBox from 'react-dual-listbox';\r\nimport { \r\nForm,\r\nFormGroup,\r\nLabel,\r\nCard,\r\nCardBody, \r\nCardFooter,\r\nCardHeader,\r\nCollapse,\r\nProgress, \r\nBadge, \r\nButton, \r\nCol, \r\nContainer, \r\nInput, \r\nInputGroup, \r\nInputGroupAddon, \r\nInputGroupText, \r\nRow, \r\nTable, \r\nPagination, \r\nPaginationItem,\r\nListGroup,\r\nListGroupItem,\r\nPaginationLink, } from 'reactstrap';\r\nimport {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../../../../../service/storage'\r\nconst proto = {};\r\nproto.mytask = require('../../../../../gRPC/mytask/mytask_grpc_web_pb');\r\n\r\n    \r\nclass MyTask extends Component {\r\n   constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n   \r\n    this.state = {\r\n      collapse: true,\r\n      fadeIn: true,\r\n      selected: ['one'],\r\n       data: [],\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n//this.notify()\r\n\r\nconst mytaskService = new proto.mytask.MytaskClient('https://www.overlead.co');\r\nvar metadata = {};\r\n\r\nvar GetAllMyTaskReq = new proto.mytask.GetAllMyTaskReq();\r\nGetAllMyTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\nGetAllMyTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\nGetAllMyTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\nGetAllMyTaskReq.setTeamid(getFromStorage(\"teamId\"));\r\nGetAllMyTaskReq.setUsername(getFromStorage(\"username\"));\r\n\r\n\r\nvar response = mytaskService.getAllMyTask(GetAllMyTaskReq, metadata)\r\nlet that = this\r\nlet start=\"\"\r\nlet end=\"\"\r\nresponse.on('data', function (response) {\r\n  if (response.getStatus() == \"SUCCESS\") {\r\n    let arr = response.getStart().split('-');\r\n    if (arr[1] > 12) {\r\n      arr[1] = arr[1] - 12\r\n      start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n    } else {\r\n      start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n    }\r\n\r\n    arr = response.getDeadline().split('-')\r\n    if (arr[1] > 12) {\r\n      arr[1] = arr[1] - 12\r\n      end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n    } else {\r\n      end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n    }\r\n\r\n   \r\n  \r\n\r\n  \r\n\r\n    that.setState(prevState => ({\r\n      data: [...prevState.data,\r\n      {\r\n        id: response.getTeamtaskid(),\r\n        title: response.getTitle(),\r\n        description: response.getDescription(),\r\n        priority: response.getPriority(),\r\n        review: response.getReview(),\r\n        comment: response.getComment(),\r\n        status: response.getStatustask(),\r\n        start: start,\r\n        deadline: end\r\n      }]\r\n    }));\r\n\r\n  }\r\n})\r\nresponse.on('status', function (status) {\r\n  if (status.code!=0) console.log(status)\r\n   \r\n});\r\nresponse.on('end', function (end) {\r\n  console.log(\"end\")\r\n  console.log(end)\r\n});\r\n  }\r\n\r\n  render() {\r\n\r\n        return (\r\n           <Row>\r\n          <Col>         \r\n         \r\n            \r\n            <Row>       \r\n                    <Col xs=\"2\" md=\"2\">\r\n                      <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"Search\" /> \r\n                    </Col> \r\n                   \r\n                    <Col xs=\"0\" md=\"0\">\r\n                      <Button type=\"submit\" size=\"sm\" color=\"success\"><i class=\"fa fa-search\"></i></Button>\r\n                    </Col> \r\n            </Row>  \r\n           <Card> \r\n           <div class=\"table-responsive\"> \r\n            <table class=\"table table-lg\">\r\n                  <thead class=\"thead\">\r\n                  <tr class=\"bg-primary\">\r\n                    <th>Title <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Description <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Priority <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Start day <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Deadline <i class=\"fa fa-sort\"></i></th>   \r\n                    <th>Comment</th>\r\n                    <th>Status</th>   \r\n                    \r\n                  </tr>\r\n                  </thead>\r\n                   <tbody>{this.state.data.map(function(item, key) {\r\n             \r\n               return (\r\n                  <tr key = {key}>\r\n                      <td>{item.title}</td>\r\n                      <td>{item.description}</td>\r\n                      <td>{item.priority}</td>\r\n                      <td>{item.start}</td>\r\n                      <td>{item.deadline}</td>\r\n                      <td>{item.comment}</td>\r\n                      <td>{item.status}</td> \r\n                     \r\n                  </tr>\r\n                )\r\n             \r\n             })}</tbody>\r\n                </table>\r\n            </div>\r\n           </Card>\r\n            </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyTask;\r\n","/**\n * @fileoverview gRPC-Web generated client stub for mytask\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.mytask = require('./mytask_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.mytask.MytaskClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.mytask.MytaskPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.mytask.GetAllMyTaskReq,\n *   !proto.mytask.GetAllMyTaskRes>}\n */\nconst methodInfo_Mytask_getAllMyTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.mytask.GetAllMyTaskRes,\n  /** @param {!proto.mytask.GetAllMyTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.mytask.GetAllMyTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.mytask.GetAllMyTaskReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.mytask.GetAllMyTaskRes>}\n *     The XHR Node Readable Stream\n */\nproto.mytask.MytaskClient.prototype.getAllMyTask =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/mytask.Mytask/getAllMyTask',\n      request,\n      metadata || {},\n      methodInfo_Mytask_getAllMyTask);\n};\n\n\n/**\n * @param {!proto.mytask.GetAllMyTaskReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.mytask.GetAllMyTaskRes>}\n *     The XHR Node Readable Stream\n */\nproto.mytask.MytaskPromiseClient.prototype.getAllMyTask =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/mytask.Mytask/getAllMyTask',\n      request,\n      metadata || {},\n      methodInfo_Mytask_getAllMyTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.mytask.CommentMyTaskReq,\n *   !proto.mytask.MyTaskRes>}\n */\nconst methodInfo_Mytask_commentMyTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.mytask.MyTaskRes,\n  /** @param {!proto.mytask.CommentMyTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.mytask.MyTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.mytask.CommentMyTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.mytask.MyTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.mytask.MyTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.mytask.MytaskClient.prototype.commentMyTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/mytask.Mytask/commentMyTask',\n      request,\n      metadata || {},\n      methodInfo_Mytask_commentMyTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.mytask.CommentMyTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.mytask.MyTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.mytask.MytaskPromiseClient.prototype.commentMyTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/mytask.Mytask/commentMyTask',\n      request,\n      metadata || {},\n      methodInfo_Mytask_commentMyTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.mytask.UpdateMyTaskReq,\n *   !proto.mytask.MyTaskRes>}\n */\nconst methodInfo_Mytask_updateMyTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.mytask.MyTaskRes,\n  /** @param {!proto.mytask.UpdateMyTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.mytask.MyTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.mytask.UpdateMyTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.mytask.MyTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.mytask.MyTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.mytask.MytaskClient.prototype.updateMyTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/mytask.Mytask/updateMyTask',\n      request,\n      metadata || {},\n      methodInfo_Mytask_updateMyTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.mytask.UpdateMyTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.mytask.MyTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.mytask.MytaskPromiseClient.prototype.updateMyTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/mytask.Mytask/updateMyTask',\n      request,\n      metadata || {},\n      methodInfo_Mytask_updateMyTask);\n};\n\n\nmodule.exports = proto.mytask;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.mytask.CommentMyTaskReq', null, global);\ngoog.exportSymbol('proto.mytask.GetAllMyTaskReq', null, global);\ngoog.exportSymbol('proto.mytask.GetAllMyTaskRes', null, global);\ngoog.exportSymbol('proto.mytask.MyTaskReq', null, global);\ngoog.exportSymbol('proto.mytask.MyTaskRes', null, global);\ngoog.exportSymbol('proto.mytask.UpdateMyTaskReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.mytask.MyTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.mytask.MyTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.mytask.MyTaskReq.displayName = 'proto.mytask.MyTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.mytask.MyTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.mytask.MyTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.mytask.MyTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.mytask.MyTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamid: msg.getTeamid(),\n    accesstoken: msg.getAccesstoken(),\n    taskid: msg.getTaskid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.mytask.MyTaskReq}\n */\nproto.mytask.MyTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.mytask.MyTaskReq;\n  return proto.mytask.MyTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.mytask.MyTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.mytask.MyTaskReq}\n */\nproto.mytask.MyTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTaskid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.mytask.MyTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.MyTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.mytask.MyTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.MyTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getTaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.mytask.MyTaskReq} The clone.\n */\nproto.mytask.MyTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.mytask.MyTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.mytask.MyTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.MyTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.mytask.MyTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.MyTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamId = 4;\n * @return {string}\n */\nproto.mytask.MyTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.MyTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.mytask.MyTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.MyTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string taskId = 5;\n * @return {string}\n */\nproto.mytask.MyTaskReq.prototype.getTaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.MyTaskReq.prototype.setTaskid = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.mytask.CommentMyTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.mytask.CommentMyTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.mytask.CommentMyTaskReq.displayName = 'proto.mytask.CommentMyTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.mytask.CommentMyTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.mytask.CommentMyTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.mytask.CommentMyTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.mytask.CommentMyTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    mytask: (f = msg.getMytask()) && proto.mytask.MyTaskReq.toObject(includeInstance, f),\n    comment: msg.getComment()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.mytask.CommentMyTaskReq}\n */\nproto.mytask.CommentMyTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.mytask.CommentMyTaskReq;\n  return proto.mytask.CommentMyTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.mytask.CommentMyTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.mytask.CommentMyTaskReq}\n */\nproto.mytask.CommentMyTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.mytask.MyTaskReq;\n      reader.readMessage(value,proto.mytask.MyTaskReq.deserializeBinaryFromReader);\n      msg.setMytask(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setComment(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.mytask.CommentMyTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.CommentMyTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.mytask.CommentMyTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.CommentMyTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getMytask();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.mytask.MyTaskReq.serializeBinaryToWriter\n    );\n  }\n  f = this.getComment();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.mytask.CommentMyTaskReq} The clone.\n */\nproto.mytask.CommentMyTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.mytask.CommentMyTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional MyTaskReq mytask = 1;\n * @return {proto.mytask.MyTaskReq}\n */\nproto.mytask.CommentMyTaskReq.prototype.getMytask = function() {\n  return /** @type{proto.mytask.MyTaskReq} */ (\n    jspb.Message.getWrapperField(this, proto.mytask.MyTaskReq, 1));\n};\n\n\n/** @param {proto.mytask.MyTaskReq|undefined} value  */\nproto.mytask.CommentMyTaskReq.prototype.setMytask = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.mytask.CommentMyTaskReq.prototype.clearMytask = function() {\n  this.setMytask(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return{!boolean}\n */\nproto.mytask.CommentMyTaskReq.prototype.hasMytask = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string comment = 2;\n * @return {string}\n */\nproto.mytask.CommentMyTaskReq.prototype.getComment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.CommentMyTaskReq.prototype.setComment = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.mytask.UpdateMyTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.mytask.UpdateMyTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.mytask.UpdateMyTaskReq.displayName = 'proto.mytask.UpdateMyTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.mytask.UpdateMyTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.mytask.UpdateMyTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.mytask.UpdateMyTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.mytask.UpdateMyTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamid: msg.getTeamid(),\n    accesstoken: msg.getAccesstoken(),\n    statustask: msg.getStatustask()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.mytask.UpdateMyTaskReq}\n */\nproto.mytask.UpdateMyTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.mytask.UpdateMyTaskReq;\n  return proto.mytask.UpdateMyTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.mytask.UpdateMyTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.mytask.UpdateMyTaskReq}\n */\nproto.mytask.UpdateMyTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatustask(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.mytask.UpdateMyTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.UpdateMyTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.mytask.UpdateMyTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.UpdateMyTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStatustask();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.mytask.UpdateMyTaskReq} The clone.\n */\nproto.mytask.UpdateMyTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.mytask.UpdateMyTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.mytask.UpdateMyTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.UpdateMyTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.mytask.UpdateMyTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.UpdateMyTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamId = 4;\n * @return {string}\n */\nproto.mytask.UpdateMyTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.UpdateMyTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.mytask.UpdateMyTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.UpdateMyTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string statusTask = 5;\n * @return {string}\n */\nproto.mytask.UpdateMyTaskReq.prototype.getStatustask = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.UpdateMyTaskReq.prototype.setStatustask = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.mytask.MyTaskRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.mytask.MyTaskRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.mytask.MyTaskRes.displayName = 'proto.mytask.MyTaskRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.mytask.MyTaskRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.mytask.MyTaskRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.mytask.MyTaskRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.mytask.MyTaskRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.mytask.MyTaskRes}\n */\nproto.mytask.MyTaskRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.mytask.MyTaskRes;\n  return proto.mytask.MyTaskRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.mytask.MyTaskRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.mytask.MyTaskRes}\n */\nproto.mytask.MyTaskRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.mytask.MyTaskRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.MyTaskRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.mytask.MyTaskRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.MyTaskRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.mytask.MyTaskRes} The clone.\n */\nproto.mytask.MyTaskRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.mytask.MyTaskRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.mytask.MyTaskRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.MyTaskRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.mytask.GetAllMyTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.mytask.GetAllMyTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.mytask.GetAllMyTaskReq.displayName = 'proto.mytask.GetAllMyTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.mytask.GetAllMyTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.mytask.GetAllMyTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.mytask.GetAllMyTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.mytask.GetAllMyTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamid: msg.getTeamid(),\n    accesstoken: msg.getAccesstoken(),\n    username: msg.getUsername()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.mytask.GetAllMyTaskReq}\n */\nproto.mytask.GetAllMyTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.mytask.GetAllMyTaskReq;\n  return proto.mytask.GetAllMyTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.mytask.GetAllMyTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.mytask.GetAllMyTaskReq}\n */\nproto.mytask.GetAllMyTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.mytask.GetAllMyTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.GetAllMyTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.mytask.GetAllMyTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.GetAllMyTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.mytask.GetAllMyTaskReq} The clone.\n */\nproto.mytask.GetAllMyTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.mytask.GetAllMyTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamId = 4;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string username = 5;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskReq.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskReq.prototype.setUsername = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.mytask.GetAllMyTaskRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.mytask.GetAllMyTaskRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.mytask.GetAllMyTaskRes.displayName = 'proto.mytask.GetAllMyTaskRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.mytask.GetAllMyTaskRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.mytask.GetAllMyTaskRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.mytask.GetAllMyTaskRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.mytask.GetAllMyTaskRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    teamtaskid: msg.getTeamtaskid(),\n    title: msg.getTitle(),\n    description: msg.getDescription(),\n    priority: msg.getPriority(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    comment: msg.getComment(),\n    status: msg.getStatus(),\n    review: msg.getReview(),\n    point: msg.getPoint(),\n    statustask: msg.getStatustask()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.mytask.GetAllMyTaskRes}\n */\nproto.mytask.GetAllMyTaskRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.mytask.GetAllMyTaskRes;\n  return proto.mytask.GetAllMyTaskRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.mytask.GetAllMyTaskRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.mytask.GetAllMyTaskRes}\n */\nproto.mytask.GetAllMyTaskRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setComment(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReview(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPoint(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatustask(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.mytask.GetAllMyTaskRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.GetAllMyTaskRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.mytask.GetAllMyTaskRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.mytask.GetAllMyTaskRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getComment();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getReview();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getStatustask();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.mytask.GetAllMyTaskRes} The clone.\n */\nproto.mytask.GetAllMyTaskRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.mytask.GetAllMyTaskRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string teamTaskId = 9;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string title = 1;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string description = 2;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string priority = 3;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string start = 4;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string deadline = 5;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string comment = 6;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getComment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setComment = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string status = 7;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string review = 10;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getReview = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setReview = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string point = 11;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setPoint = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string statusTask = 8;\n * @return {string}\n */\nproto.mytask.GetAllMyTaskRes.prototype.getStatustask = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.mytask.GetAllMyTaskRes.prototype.setStatustask = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\ngoog.object.extend(exports, proto.mytask);\n"],"sourceRoot":""}