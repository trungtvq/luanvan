{"version":3,"sources":["../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/inheritsLoose.js","gRPC/productbacklog/productbacklog_grpc_web_pb.js","gRPC/productbacklog/productbacklog_pb.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","views/Workspace/Po/ProductBacklog/Detail/Detail.js"],"names":["module","exports","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","subClass","superClass","prototype","create","constructor","__proto__","grpc","web","require","proto","productbacklog","ProductBacklogClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","credentials_","options_","ProductBacklogPromiseClient","methodInfo_ProductBacklog_addNewProductBacklog","AbstractClientBase","MethodInfo","ProductBacklogRes","request","serializeBinary","deserializeBinary","addNewProductBacklog","metadata","callback","rpcCall","unaryCall","methodInfo_ProductBacklog_updateProductBacklog","updateProductBacklog","methodInfo_ProductBacklog_deleteProductBacklog","deleteProductBacklog","methodInfo_ProductBacklog_sendToSprintBacklog","sendToSprintBacklog","methodInfo_ProductBacklog_sendToUserStory","sendToUserStory","methodInfo_ProductBacklog_getAllProductBacklog","GetAllProductBacklogRes","getAllProductBacklog","serverStreaming","jspb","goog","global","Function","exportSymbol","AddNewProductBacklogReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","role","getRole","want","getWant","so","getSo","statusbacklog","getStatusbacklog","priority","getPriority","estimation","getEstimation","sprintid","getSprintid","accesstoken","getAccesstoken","title","getTitle","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setRequesterid","setProjectid","setRole","setWant","setSo","setStatusbacklog","setPriority","setEstimation","setSprintid","setAccesstoken","setTitle","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","writeString","cloneMessage","getFieldProto3","setField","error","getError","status","getStatus","productbacklogid","getProductbacklogid","setError","setStatus","setProductbacklogid","UpdateProductBacklogReq","sprint","getSprint","setSprint","DeleteProductBacklogReq","SendToSprintBacklogReq","start","getStart","deadline","getDeadline","teamid","getTeamid","setStart","setDeadline","setTeamid","GetAllProductBacklogReq","object","extend","_extends","assign","arguments","hasOwnProperty","call","apply","defineProperty","enumerable","configurable","writable","self","ReferenceError","Detail","props","_this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","toggleActionStatus","setState","prevState","modalActionStatus","toggleAdd","modalAdd","toggleDetail","event","currentTarget","dataset","modalDetail","toastId","notify","toast","autoClose","success","update","render","type","TYPE","SUCCESS","failed","ERROR","toggleEdit","id","modalEdit","updateId","toggleSend","modalSend","toggleSendOpen","backlogSendId","onTextboxChangeRole","onTextboxChangeWant","onTextboxChangeSo","onTextboxChangePriority","onTextboxChangeEstimation","onTextboxChangeTitle","onTextboxChangeSprint","onTextboxChangeStatus","handleAdd","console","log","productbacklogService","state","getFromStorage","that","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","err","response","_ref","data","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","handleDelete","filter","e","handleUpdate","tmpdata","map","p","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","handleSend","d","startDate","getMinutes","getHours","getDate","getMonth","getFullYear","end","endDate","onChangeStartDate","date","onChangeEndDate","Date","setDate","on","code","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","size","isOpen","toggle","className","reactstrap__WEBPACK_IMPORTED_MODULE_12__","actionStatus","reactstrap__WEBPACK_IMPORTED_MODULE_13__","xs","md","reactstrap__WEBPACK_IMPORTED_MODULE_14__","name","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_15__","color","class","reactstrap__WEBPACK_IMPORTED_MODULE_16__","onClick","buttonLabel","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_19__","row","reactstrap__WEBPACK_IMPORTED_MODULE_20__","htmlFor","onChange","rows","reactstrap__WEBPACK_IMPORTED_MODULE_21__","item","data-id","data-title","data-role","data-want","data-so","data-priority","data-estimation","data-sprint","data-status","action","react_datepicker__WEBPACK_IMPORTED_MODULE_24__","selected","timeInputLabel","dateFormat","showTimeInput","Component"],"mappings":"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","file":"static/js/36.1a5196d1.chunk.js","sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;","/**\n * @fileoverview gRPC-Web generated client stub for productbacklog\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.productbacklog = require('./productbacklog_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.productbacklog.ProductBacklogClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.productbacklog.ProductBacklogPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.AddNewProductBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_addNewProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.AddNewProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.AddNewProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.addNewProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/addNewProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_addNewProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.AddNewProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.addNewProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/addNewProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_addNewProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.UpdateProductBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_updateProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.UpdateProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.UpdateProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.updateProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/updateProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_updateProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.UpdateProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.updateProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/updateProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_updateProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.DeleteProductBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_deleteProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.DeleteProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.DeleteProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.deleteProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/deleteProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_deleteProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.DeleteProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.deleteProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/deleteProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_deleteProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.SendToSprintBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_sendToSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.SendToSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.SendToSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.sendToSprintBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/sendToSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_sendToSprintBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.SendToSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.sendToSprintBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/sendToSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_sendToSprintBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.SendToSprintBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_sendToUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.SendToSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.SendToSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.sendToUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/sendToUserStory',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_sendToUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.SendToSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.sendToUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/sendToUserStory',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_sendToUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.GetAllProductBacklogReq,\n *   !proto.productbacklog.GetAllProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_getAllProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.GetAllProductBacklogRes,\n  /** @param {!proto.productbacklog.GetAllProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.GetAllProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.GetAllProductBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.GetAllProductBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.getAllProductBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/productbacklog.ProductBacklog/getAllProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_getAllProductBacklog);\n};\n\n\n/**\n * @param {!proto.productbacklog.GetAllProductBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.GetAllProductBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.getAllProductBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/productbacklog.ProductBacklog/getAllProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_getAllProductBacklog);\n};\n\n\nmodule.exports = proto.productbacklog;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.productbacklog.AddNewProductBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.DeleteProductBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.GetAllProductBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.GetAllProductBacklogRes', null, global);\ngoog.exportSymbol('proto.productbacklog.ProductBacklogRes', null, global);\ngoog.exportSymbol('proto.productbacklog.SendToSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.UpdateProductBacklogReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.AddNewProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.AddNewProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.AddNewProductBacklogReq.displayName = 'proto.productbacklog.AddNewProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.AddNewProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.AddNewProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.AddNewProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    accesstoken: msg.getAccesstoken(),\n    title: msg.getTitle()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.AddNewProductBacklogReq}\n */\nproto.productbacklog.AddNewProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.AddNewProductBacklogReq;\n  return proto.productbacklog.AddNewProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.AddNewProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.AddNewProductBacklogReq}\n */\nproto.productbacklog.AddNewProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.AddNewProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.AddNewProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.AddNewProductBacklogReq} The clone.\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.AddNewProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 6;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string priority = 7;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string estimation = 8;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string sprintId = 9;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string accessToken = 10;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string title = 11;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.ProductBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.ProductBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.ProductBacklogRes.displayName = 'proto.productbacklog.ProductBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.ProductBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.ProductBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.ProductBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.ProductBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    error: msg.getError(),\n    status: msg.getStatus(),\n    productbacklogid: msg.getProductbacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.ProductBacklogRes}\n */\nproto.productbacklog.ProductBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.ProductBacklogRes;\n  return proto.productbacklog.ProductBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.ProductBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.ProductBacklogRes}\n */\nproto.productbacklog.ProductBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.ProductBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.ProductBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.ProductBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.ProductBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.ProductBacklogRes} The clone.\n */\nproto.productbacklog.ProductBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.ProductBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string error = 1;\n * @return {string}\n */\nproto.productbacklog.ProductBacklogRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.ProductBacklogRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string status = 2;\n * @return {string}\n */\nproto.productbacklog.ProductBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.ProductBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.ProductBacklogRes.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.ProductBacklogRes.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.UpdateProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.UpdateProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.UpdateProductBacklogReq.displayName = 'proto.productbacklog.UpdateProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.UpdateProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.UpdateProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.UpdateProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    productbacklogid: msg.getProductbacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprint: msg.getSprint(),\n    accesstoken: msg.getAccesstoken(),\n    title: msg.getTitle(),\n    sprintid: msg.getSprintid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.UpdateProductBacklogReq}\n */\nproto.productbacklog.UpdateProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.UpdateProductBacklogReq;\n  return proto.productbacklog.UpdateProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.UpdateProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.UpdateProductBacklogReq}\n */\nproto.productbacklog.UpdateProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprint(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.UpdateProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.UpdateProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getSprint();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.UpdateProductBacklogReq} The clone.\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.UpdateProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string role = 4;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string want = 5;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string so = 6;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string statusBacklog = 7;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string priority = 8;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string estimation = 9;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string sprint = 10;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getSprint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setSprint = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string accessToken = 11;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string title = 12;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string sprintId = 13;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.DeleteProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.DeleteProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.DeleteProductBacklogReq.displayName = 'proto.productbacklog.DeleteProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.DeleteProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.DeleteProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.DeleteProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    productbacklogid: msg.getProductbacklogid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.DeleteProductBacklogReq}\n */\nproto.productbacklog.DeleteProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.DeleteProductBacklogReq;\n  return proto.productbacklog.DeleteProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.DeleteProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.DeleteProductBacklogReq}\n */\nproto.productbacklog.DeleteProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.DeleteProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.DeleteProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.DeleteProductBacklogReq} The clone.\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.DeleteProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.SendToSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.SendToSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.SendToSprintBacklogReq.displayName = 'proto.productbacklog.SendToSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.SendToSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.SendToSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.SendToSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    productbacklogid: msg.getProductbacklogid(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.SendToSprintBacklogReq}\n */\nproto.productbacklog.SendToSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.SendToSprintBacklogReq;\n  return proto.productbacklog.SendToSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.SendToSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.SendToSprintBacklogReq}\n */\nproto.productbacklog.SendToSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.SendToSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.SendToSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.SendToSprintBacklogReq} The clone.\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.SendToSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string start = 4;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string deadline = 5;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string accessToken = 6;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string teamId = 7;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.GetAllProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.GetAllProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.GetAllProductBacklogReq.displayName = 'proto.productbacklog.GetAllProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.GetAllProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.GetAllProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.GetAllProductBacklogReq}\n */\nproto.productbacklog.GetAllProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.GetAllProductBacklogReq;\n  return proto.productbacklog.GetAllProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.GetAllProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.GetAllProductBacklogReq}\n */\nproto.productbacklog.GetAllProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.GetAllProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.GetAllProductBacklogReq} The clone.\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.GetAllProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.GetAllProductBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.GetAllProductBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.GetAllProductBacklogRes.displayName = 'proto.productbacklog.GetAllProductBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.GetAllProductBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.GetAllProductBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    productbacklogid: msg.getProductbacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    status: msg.getStatus(),\n    error: msg.getError(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    title: msg.getTitle()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.GetAllProductBacklogRes}\n */\nproto.productbacklog.GetAllProductBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.GetAllProductBacklogRes;\n  return proto.productbacklog.GetAllProductBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.GetAllProductBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.GetAllProductBacklogRes}\n */\nproto.productbacklog.GetAllProductBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.GetAllProductBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.GetAllProductBacklogRes} The clone.\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.GetAllProductBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string productBacklogId = 2;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 11;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string status = 9;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string error = 1;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string priority = 6;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string estimation = 7;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string sprintId = 8;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string title = 10;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\ngoog.object.extend(exports, proto.productbacklog);\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","import React, { Component } from 'react';\r\nimport {\r\n  Card, CardHeader, Badge, Button, Col,\r\n  Container, Input, InputGroup, InputGroupAddon, InputGroupText, Row, Table, Pagination, PaginationItem, PaginationLink,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  ModalFooter\r\n} from 'reactstrap';\r\nimport cookie from 'react-cookies';\r\nimport {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../../../../../service/storage'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst proto = {};\r\nproto.productbacklog = require('./../../../../../gRPC/productbacklog/productbacklog_grpc_web_pb');\r\n\r\nclass Detail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      modalAdd: false,\r\n      modalEdit: false,\r\n      modalDetail: false,\r\n      modalSend: false,\r\n      id: '',\r\n      role: \"\",\r\n      want: \"\",\r\n      so: \"\",\r\n      priority: '',\r\n      estimation: '',\r\n      sprint: '',\r\n      status: \"\",\r\n      title: \"\",\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      backlogSendId:\"\"\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    let end = this.state.endDate;\r\n    end.setDate(end.getDate() + 15);\r\n    this.setState({\r\n      endDate: end\r\n    })\r\n\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    var GetAllProductBacklogReq = new proto.productbacklog.GetAllProductBacklogReq();\r\n    GetAllProductBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllProductBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllProductBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n\r\n    var response = productbacklogService.getAllProductBacklog(GetAllProductBacklogReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.setState(prevState => ({\r\n          data: [...prevState.data,\r\n          {\r\n            id: response.getProductbacklogid(),\r\n            title: response.getTitle(),\r\n            role: response.getRole(),\r\n            want: response.getWant(),\r\n            so: response.getSo(),\r\n            priority: response.getPriority(),\r\n            estimation: response.getEstimation(),\r\n            sprint: response.getSprintid(),\r\n            status: response.getStatusbacklog()\r\n          }]\r\n        }));\r\n\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n\r\n\r\n\r\n  }\r\n  toggleActionStatus = () => {\r\n    this.setState(prevState => ({\r\n      modalActionStatus: !prevState.modalActionStatus\r\n    }));\r\n  }\r\n  toggleAdd = () => {\r\n    this.setState(prevState => ({\r\n      modalAdd: !prevState.modalAdd\r\n    }));\r\n  }\r\n \r\n  toggleDetail = (event) => {\r\n\r\n    let title = event.currentTarget.dataset.title\r\n    let role = event.currentTarget.dataset.role\r\n    let want = event.currentTarget.dataset.want\r\n    let so = event.currentTarget.dataset.so\r\n    let priority = event.currentTarget.dataset.priority\r\n    let estimation = event.currentTarget.dataset.estimation\r\n    let sprint = event.currentTarget.dataset.sprint\r\n    let status = event.currentTarget.dataset.status\r\n\r\n    this.setState(prevState => ({\r\n      modalDetail: !prevState.modalDetail,\r\n      title:title,\r\n      role: role,\r\n      want: want,\r\n      so: so,\r\n      priority: priority,\r\n      estimation: estimation,\r\n      sprint: sprint,\r\n      status: status,   \r\n    }));\r\n  }\r\n\r\n  toastId = null;\r\n  notify = () => this.toastId = toast(\"Processing... please wait...\", { autoClose: false });\r\n  success = () => toast.update(this.toastId, { render: \"Success\", type: toast.TYPE.SUCCESS, autoClose: 3000 });\r\n  failed = () => toast.update(this.toastId, { render: \"Failed\", type: toast.TYPE.ERROR, autoClose: 3000 });\r\n\r\n  toggleEdit = (event) => {\r\n    let id = event.currentTarget.dataset.id\r\n\r\n    let title = event.currentTarget.dataset.title\r\n    let role = event.currentTarget.dataset.role\r\n    let want = event.currentTarget.dataset.want\r\n    let so = event.currentTarget.dataset.so\r\n    let priority = event.currentTarget.dataset.priority\r\n    let estimation = event.currentTarget.dataset.estimation\r\n    let sprint = event.currentTarget.dataset.sprint\r\n    let status = event.currentTarget.dataset.status\r\n\r\n    this.setState(prevState => ({\r\n      modalEdit: !prevState.modalEdit,\r\n      updateId:id,\r\n      title:title,\r\n      role: role,\r\n      want: want,\r\n      so: so,\r\n      priority: priority,\r\n      estimation: estimation,\r\n      sprint: sprint,\r\n      status: status,   \r\n    }));\r\n  }\r\n  toggleSend = () => {\r\n    this.setState(prevState => ({\r\n      modalSend: !prevState.modalSend\r\n    }));\r\n  }\r\n  toggleSendOpen = (event) => {\r\n    let id=event.currentTarget.dataset.id\r\n    this.setState(prevState => ({\r\n      modalSend: !prevState.modalSend,\r\n      backlogSendId: id\r\n    }));\r\n  }\r\n  onTextboxChangeRole = (event) => {\r\n    this.setState({\r\n      role: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeWant = (event) => {\r\n    this.setState({\r\n      want: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeSo = (event) => {\r\n    this.setState({\r\n      so: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangePriority = (event) => {\r\n    this.setState({\r\n      priority: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeEstimation = (event) => {\r\n    this.setState({\r\n      estimation: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeTitle = (event) => {\r\n    this.setState({\r\n      title: event.target.value,\r\n    });\r\n  }\r\n\r\n  onTextboxChangeSprint = (event) => {\r\n    this.setState({\r\n      sprint: event.target.value,\r\n    });\r\n  }\r\n\r\n  onTextboxChangeStatus = (event) => {\r\n    this.setState({\r\n      status: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleAdd = () => {\r\n    console.log(\"handleAdd\")\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n    //some data of request (get that from frontend)\r\n    this.notify()\r\n    var metadata = {};\r\n    //make a request to server\r\n\r\n    var AddNewProductBacklogReq = new proto.productbacklog.AddNewProductBacklogReq();\r\n    AddNewProductBacklogReq.setTitle(this.state.title);\r\n    AddNewProductBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    AddNewProductBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    AddNewProductBacklogReq.setRole(this.state.role);\r\n    AddNewProductBacklogReq.setWant(this.state.want);\r\n    AddNewProductBacklogReq.setSo(this.state.so);\r\n    AddNewProductBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    AddNewProductBacklogReq.setPriority(this.state.priority)\r\n    AddNewProductBacklogReq.setEstimation(this.state.estimation)\r\n    AddNewProductBacklogReq.setSprintid(this.state.sprint)\r\n    AddNewProductBacklogReq.setStatusbacklog(\"To do\")\r\n\r\n    let that = this\r\n\r\n    productbacklogService.addNewProductBacklog(AddNewProductBacklogReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n        console.log(\"error\")\r\n      } else { //if success\r\n        //get response\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          this.toggleAdd()\r\n          that.success()\r\n          this.setState(prevState => ({\r\n            data: [...prevState.data,\r\n            {\r\n              id: response.getProductbacklogid(),\r\n              title: this.state.title,\r\n              role: this.state.role,\r\n              want: this.state.want,\r\n              so: this.state.so,\r\n              priority: this.state.priority,\r\n              estimation: this.state.estimation,\r\n              id: response.getProductbacklogid(),\r\n              sprint: this.state.sprint,\r\n              status: this.state.status\r\n            }],\r\n              title: '',\r\n              role: '',\r\n              want: '',\r\n              so: '',\r\n              priority: '',\r\n              estimation: '',\r\n          }));\r\n        } else {\r\n          that.failed()\r\n        }\r\n      }\r\n    });\r\n  };\r\n  handleDelete = (event) => {\r\n    let id = event.currentTarget.dataset.id\r\n    this.notify()\r\n    console.log(\"handleDelete\")\r\n\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n\r\n    var metadata = {};\r\n    //make a request to server\r\n\r\n    var DeleteProductBacklogReq = new proto.productbacklog.DeleteProductBacklogReq();\r\n    DeleteProductBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    DeleteProductBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    DeleteProductBacklogReq.setProductbacklogid(id);\r\n    DeleteProductBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    let that = this\r\n    productbacklogService.deleteProductBacklog(DeleteProductBacklogReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          that.success()\r\n          this.setState(prevState => ({ data: [...prevState.data.filter(function (e) { return e.id !== id; })] }));\r\n        } else {\r\n          that.failed()\r\n        }\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n  handleUpdate = (event) => {\r\n    console.log(\"handleUpdate\")\r\n    this.notify()\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    console.log(\"so\"+this.state.so)\r\n    var UpdateProductBacklogReq = new proto.productbacklog.UpdateProductBacklogReq();\r\n    UpdateProductBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    UpdateProductBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    UpdateProductBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    UpdateProductBacklogReq.setProductbacklogid(this.state.updateId);\r\n    UpdateProductBacklogReq.setRole(this.state.role);\r\n    UpdateProductBacklogReq.setWant(this.state.want);\r\n    UpdateProductBacklogReq.setSo(this.state.so);\r\n    UpdateProductBacklogReq.setPriority(this.state.priority);\r\n    UpdateProductBacklogReq.setEstimation(this.state.estimation);\r\n    UpdateProductBacklogReq.setSprintid(this.state.sprint);\r\n    UpdateProductBacklogReq.setStatusbacklog(\"To do\");\r\n    let that = this\r\n    productbacklogService.updateProductBacklog(UpdateProductBacklogReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          that.success()\r\n          const tmpdata = this.state.data.map(p =>\r\n            p.id == this.state.updateId\r\n              ? {\r\n                ...p,\r\n                role: this.state.role,\r\n                want: this.state.want,\r\n                priority: this.state.priority,\r\n                estimation: this.state.estimation,\r\n                status: this.state.status,\r\n                sprint: this.state.sprint,\r\n                so: this.state.so,\r\n                \r\n              }\r\n              : p\r\n          );\r\n          this.setState(prevState => ({ \r\n            data: tmpdata,\r\n            modalEdit:false,\r\n          }));\r\n\r\n        } else {\r\n          that.failed()\r\n        }\r\n      }\r\n    });\r\n  };\r\n  handleSend = () => {\r\n    console.log(this.state.backlogSendId)\r\n    const productbacklogService = new proto.productbacklog.ProductBacklogClient('https://www.overlead.co');\r\n    this.notify()\r\n    var metadata = {};\r\n    //make a request to server\r\n\r\n\r\n    let d = this.state.startDate;\r\n    let start = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n    d = this.state.endDate;\r\n    let end = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n    \r\n    var SendToSprintBacklogReq = new proto.productbacklog.SendToSprintBacklogReq();\r\n    SendToSprintBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    SendToSprintBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    SendToSprintBacklogReq.setProductbacklogid(this.state.backlogSendId);\r\n    SendToSprintBacklogReq.setStart(start);\r\n    SendToSprintBacklogReq.setDeadline(end);\r\n    SendToSprintBacklogReq.setTeamid(getFromStorage('teamId'));\r\n    SendToSprintBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    let that=this\r\n    productbacklogService.sendToSprintBacklog(SendToSprintBacklogReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n      } else {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          that.success()\r\n          that.setState(prevState => ({ data: [...prevState.data.filter(function (e) { return e.id !== that.state.backlogSendId; })] }));\r\n        } else {\r\n         that.failed()\r\n        }\r\n      }\r\n\r\n    });\r\n  };\r\n  onChangeStartDate = (date) => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  }\r\n  onChangeEndDate = (date) => {\r\n    this.setState({\r\n      endDate: date\r\n    });\r\n  }\r\n  render() {\r\n\r\n    let that = this;\r\n    return (\r\n      <Row>\r\n        <Modal size=\"sm\" isOpen={that.state.modalActionStatus} toggle={that.toggleActionStatus} className={that.props.className}>\r\n          <ModalBody>\r\n            <center><h4>{that.state.actionStatus}</h4></center>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Col>\r\n\r\n          <Row>\r\n            <Col xs=\"2\" md=\"2\">\r\n              <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"Search\" />\r\n            </Col>\r\n\r\n            <Col xs=\"0\" md=\"0\">\r\n              <Button type=\"submit\" size=\"sm\" color=\"success\">\r\n                <i class=\"fa fa-search\"></i></Button>\r\n            </Col>\r\n          </Row>\r\n          <Card>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-lg\">\r\n                <thead class=\"thead\">\r\n                  <tr class=\"bg-primary\">\r\n                    <th>Title <i class=\"fa fa-sort\"></i></th>\r\n                    <th>As a... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>I want to be able to... <i class=\"fa fa-sort\"></i></th>\r\n                    {/* <th>So that...  <i class=\"fa fa-sort\"></i></th> */}\r\n                    <th>Priority <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Estimation <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Sprint <i class=\"fa fa-sort\"></i> </th>\r\n                   \r\n                    <th>\r\n                      <div>\r\n                        <Button color=\"primary\" size=\"sm\" className=\"mt-3\" onClick={that.toggleAdd}><i class=\"fa fa-plus-square\"></i>{this.props.buttonLabel}</Button>\r\n                        <Modal size=\"lg\" isOpen={that.state.modalAdd} toggle={that.toggleAdd} className={that.props.className}>\r\n                          <ModalHeader toggle={that.toggleAdd}>ProductBacklog</ModalHeader>\r\n                          <ModalBody>\r\n                            <Form className=\"form-horizontal\">\r\n                            <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">Title...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Title...\" value={that.state.title} onChange={that.onTextboxChangeTitle} />\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">As a...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"as\" name=\"as\" placeholder=\"As a...\" value={that.state.role} onChange={that.onTextboxChangeRole} />\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">I want to be able to...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"want\" name=\"want\" placeholder=\"I want to be able to...\" value={that.state.want} onChange={that.onTextboxChangeWant} />\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"textarea-input\">So that...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"textarea\" name=\"so\" id=\"so\" rows=\"9\"\r\n                                    placeholder=\"Content...\" value={that.state.so} onChange={that.onTextboxChangeSo} />\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                              {/* <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"date-input\">Status </Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"2\">\r\n                                <Input type=\"text\" name=\"priority\" id=\"priority\" rows=\"9\" value=\"To do\" />\r\n                                     \r\n                                </Col>\r\n                              </FormGroup> */}\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Priority</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"priority\" id=\"priority\" rows=\"9\" value={that.state.priority} onChange={that.onTextboxChangePriority} />\r\n                                </Col>\r\n\r\n                                <Col md=\"2\">\r\n                                </Col>\r\n\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Estimation</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"estimation\" id=\"estimation\" rows=\"9\" value={that.state.estimation} onChange={that.onTextboxChangeEstimation} />\r\n                                </Col>\r\n\r\n                                <Col md=\"2\">\r\n                                </Col>\r\n\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Sprint</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"sprint\" id=\"sprint\" rows=\"9\" value={that.state.sprint} onChange={that.onTextboxChangeSprint} />\r\n                                </Col>\r\n                              </FormGroup>\r\n                            </Form>\r\n                          </ModalBody>\r\n                          <ModalFooter>\r\n                            <Button color=\"primary\" onClick={that.handleAdd}>Submit</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={that.toggleAdd}>Cancel</Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </div>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{this.state.data.map(function (item, key) {\r\n\r\n                  return (\r\n                    <tr key={key}>\r\n                      <td data-id={item.id} data-title={item.title} data-role={item.role} data-want={item.want} \r\n                           data-so={item.so} data-priority={item.priority} data-estimation={item.estimation} \r\n                           data-sprint={item.sprint} data-status={item.status}\r\n                           onClick={that.toggleDetail}>\r\n                      <u>{item.title}</u>\r\n                      </td>\r\n                      <Modal size=\"lg\" isOpen={that.state.modalDetail} toggle={that.toggleDetail} className={that.props.className}>\r\n                          <ModalHeader toggle={that.toggleDetail}>ProductBacklog</ModalHeader>\r\n                          <ModalBody>\r\n                            <Form className=\"form-horizontal\">\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">As a...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"As a......\" value={that.state.role} />\r\n\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">I want to be able to...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"text-input\" name=\"text-input\" value={that.state.want} />\r\n\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"textarea-input\">So that...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"textarea\" name=\"textarea-input\" id=\"textarea-input\" rows=\"9\"\r\n                                    value={that.state.so}/>\r\n                                </Col>\r\n                              </FormGroup>\r\n                             \r\n                              <FormGroup row>\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Priority</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={that.state.priority} />\r\n                                </Col>\r\n\r\n                                <Col md=\"2\">\r\n                                </Col>\r\n\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Estimation</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={that.state.estimation}/>\r\n                                </Col>\r\n\r\n                                <Col md=\"2\">\r\n                                </Col>\r\n\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Sprint</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={that.state.sprint}/>\r\n                                </Col>\r\n                              </FormGroup>\r\n                            </Form>\r\n                          </ModalBody>\r\n                          \r\n                        </Modal>\r\n                      <td>{item.role}</td>\r\n                      <td>{item.want}</td>\r\n                      {/* <td>{item.so}</td> */}\r\n                      <td>{item.priority}</td>\r\n                      <td>{item.estimation}</td>\r\n                      <td>{item.sprint}</td>\r\n                      {/* <td>{item.status}</td> */}\r\n                      <td>\r\n                        <div data-id={item.id}  onClick={that.toggleSendOpen}>\r\n                        <Button type=\"submit\" size=\"sm\" color=\"success\"><i class=\"fa fa-share-square\"></i></Button>\r\n                        </div>\r\n                        <Modal size=\"lg\" isOpen={that.state.modalSend} toggle={that.toggleSend} className={that.props.className}>\r\n                          <ModalHeader toggle={that.toggleSend}>ProductBacklog</ModalHeader>\r\n                          <ModalBody>\r\n                            <div class=\"card  bg-primary mb-3\">\r\n                              <div class=\"card-body\">\r\n                                <Form action=\"\" className=\"form-horizontal\">\r\n\r\n\r\n                                  <FormGroup row>\r\n                                    <Col md=\"3\">\r\n                                      <Label htmlFor=\"date-input\">Start </Label>\r\n                                    </Col>\r\n                                    <Col xs=\"3\" md=\"3\">\r\n                                    <DatePicker\r\n\r\n                                      selected={that.state.startDate}\r\n                                      timeInputLabel=\"Time:\"\r\n                                      onChange={that.onChangeStartDate}\r\n                                      dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                                      showTimeInput\r\n                                      />\r\n\r\n                                \r\n\r\n                                    </Col>\r\n                                  </FormGroup>\r\n\r\n                                  <FormGroup row>\r\n                                    <Col md=\"3\">\r\n                                      <Label htmlFor=\"date-input\">End </Label>\r\n                                    </Col>\r\n\r\n                                    <Col xs=\"3\" md=\"3\">\r\n                                    <DatePicker\r\n                                      selected={that.state.endDate}\r\n                                      timeInputLabel=\"Time:\"\r\n                                      onChange={that.onChangeEndDate}\r\n                                      dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                                      showTimeInput\r\n                                      />\r\n                                    </Col>\r\n\r\n                                  </FormGroup>\r\n\r\n\r\n\r\n                                </Form>\r\n                              </div>\r\n                            </div>\r\n                          </ModalBody>\r\n                          <ModalFooter>\r\n                            <Button color=\"primary\" onClick={that.handleSend}>Submit</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={that.toggleSend}>Cancel</Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n\r\n                        {/* update */}\r\n                        <div data-id={item.id} data-title={item.title} data-role={item.role} data-want={item.want} \r\n                             data-so={item.so} data-priority={item.priority} data-estimation={item.estimation} \r\n                             data-sprint={item.sprint} data-status={item.status}\r\n                        onClick={that.toggleEdit}>\r\n                          <Button color=\"warning\" size=\"sm\"><i class=\"fa fa-edit\"></i>{that.props.buttonLabel}</Button>\r\n                        </div>                        \r\n                        <Modal size=\"lg\" isOpen={that.state.modalEdit} toggle={that.toggleEdit} className={that.props.className}>\r\n                          <ModalHeader toggle={that.toggleEdit}>ProductBacklog</ModalHeader>\r\n                          <ModalBody>\r\n                            <Form className=\"form-horizontal\">\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">As a...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"As a......\" value={that.state.role} onChange={that.onTextboxChangeRole} />\r\n\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">I want to be able to...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"I want to be able to...\" value={that.state.want} onChange={that.onTextboxChangeWant} />\r\n\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"textarea-input\">So that...</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"textarea\" name=\"textarea-input\" id=\"textarea-input\" rows=\"9\"\r\n                                    placeholder=\"Content...\" value={that.state.so}  onChange={that.onTextboxChangeSo}/>\r\n                                </Col>\r\n                              </FormGroup>\r\n                              {/* <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"date-input\">Status</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"2\">\r\n                                <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangeStatus}>\r\n                                          <option value=\"0\">Please select</option>\r\n                                          <option value=\"Todo\">Todo</option>\r\n                                          <option value=\"Inprogress\">Inprogress</option>\r\n                                          <option value=\"Done\">Done</option>\r\n                                  </Input>                                                     \r\n                                </Col>\r\n                              </FormGroup> */}\r\n                              <FormGroup row>\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Priority</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={that.state.priority} onChange={that.onTextboxChangePriority}/>\r\n                                </Col>\r\n\r\n                                <Col md=\"2\">\r\n                                </Col>\r\n\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Estimation</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={that.state.estimation} onChange={that.onTextboxChangeEstimation} />\r\n                                </Col>\r\n\r\n                                <Col md=\"2\">\r\n                                </Col>\r\n\r\n                                <Col md=\"1\">\r\n                                  <Label htmlFor=\"text-input\">Sprint</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"1\">\r\n                                  <Input type=\"text\" name=\"text-input\" id=\"text-input\" rows=\"9\" value={that.state.sprint} onChange={that.onTextboxChangeSprint}/>\r\n                                </Col>\r\n                              </FormGroup>\r\n                            </Form>\r\n                          </ModalBody>\r\n                          <ModalFooter>\r\n                          <div data-id={item.id} onClick={that.handleUpdate}><Button color=\"primary\">Submit</Button></div>{' '}\r\n                            <Button color=\"secondary\" onClick={that.toggleEdit}>Cancel</Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                        \r\n\r\n                        {/* delete */}\r\n                        <div data-id={item.id} onClick={that.handleDelete}><Button size=\"sm\" color=\"danger\" ><i class=\"fa fa-trash\"></i></Button></div>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n\r\n                })}</tbody>\r\n              </table>\r\n            </div>\r\n          </Card>\r\n\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n"],"sourceRoot":""}