{"version":3,"sources":["views/Workspace/Member/Velocity/Velocity.js"],"names":["Velocity","props","_this","Object","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleDragEnd","cardId","sourceLaneId","targetLaneId","console","log","concat","toggle","bind","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","state","collapse","fadeIn","boardData","lanes","id","title","label","style","width","color","cards","cardStyle","maxWidth","margin","marginBottom","description","setState","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","react_trello__WEBPACK_IMPORTED_MODULE_9___default","collapsibleLanes","onCardAdd","handleCardAdd","data","draggable","onDataChange","shouldReceiveNewData","eventBusHandle","setEventBus","handleDragStart","Component"],"mappings":"0MA8BMA,cACH,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAoETQ,cAAgB,SAACC,EAAQC,EAAcC,GACpCC,QAAQC,IAAI,cACZD,QAAQC,IAAR,WAAAC,OAAuBL,IACvBG,QAAQC,IAAR,iBAAAC,OAA6BJ,IAC7BE,QAAQC,IAAR,iBAAAC,OAA6BH,KAtE7BV,EAAKc,OAASd,EAAKc,OAAOC,KAAZd,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAEdA,EAAKiB,MAAQ,CACXC,UAAU,EACVC,QAAQ,EACRC,UAAW,CAACC,MAAM,CAChB,CACEC,GAAI,QACJC,MAAO,gBACPC,MAAO,IACPC,MAAO,CAACC,MAAS,IAAIC,MAAQ,QAC7BC,MAAO,CACL,CACEN,GAAI,IACJC,MAAO,qBACPC,MAAO,OACPK,UAAW,CAAEH,MAAS,IAAKI,SAAY,IAAKC,OAAU,OAAQC,aAAgB,GAC9EC,YAAa,+JAInB,CACEX,GAAI,aACJC,MAAO,mBACPC,MAAO,IACPC,MAAO,CAACC,MAAS,IAAIC,MAAQ,YAC7BC,MAAO,CACL,CACEN,GAAI,IACJC,MAAO,mCACPC,MAAO,MACPK,UAAW,CAAEH,MAAS,IAAKI,SAAY,IAAKC,OAAU,OAAQC,aAAgB,GAC9EC,YAAa,gHAKnB,CACEX,GAAI,OACJC,MAAO,OACPE,MAAO,CAACC,MAAS,IAAIC,MAAQ,SAC7BH,MAAO,IACPI,MAAO,CACL,CACEN,GAAI,IACJC,MAAO,4BACPC,MAAO,SACPK,UAAW,CAAEH,MAAS,IAAKI,SAAY,IAAKC,OAAU,OAAQC,aAAgB,GAC9EC,YAAa,4GAnDLjC,wEA6DlBG,KAAK+B,SAAS,CAAEhB,UAAWf,KAAKc,MAAMC,4CA2EtC,OACEiB,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KA6DDJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACCK,kBAAgB,EACpBC,UAAWvC,KAAKwC,cACXC,KAAMzC,KAAKc,MAAMG,UACjByB,WAAS,EACTC,aAAc3C,KAAK4C,qBACnBC,eAAgB7C,KAAK8C,YACrBC,gBAAiB/C,KAAK+C,gBACtB3C,cAAeJ,KAAKI,0BAjNP4C,aA2NRrD","file":"static/js/58.7fc185c7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { \r\nForm,\r\nFormGroup,\r\nLabel,\r\nCard,\r\nCardBody, \r\nCardFooter,\r\nCardHeader,\r\nCollapse,\r\nProgress, \r\nBadge, \r\nButton, \r\nCol, \r\nContainer, \r\nInput, \r\nInputGroup, \r\nInputGroupAddon, \r\nInputGroupText, \r\nRow, \r\nTable, \r\nPagination, \r\nPaginationItem,\r\nListGroup,\r\nListGroupItem,\r\nPaginationLink, } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Board from 'react-trello';\r\n\r\n\r\nclass Velocity extends Component {\r\n   constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n   \r\n    this.state = {\r\n      collapse: true,\r\n      fadeIn: true,\r\n      boardData: {lanes:[\r\n        {\r\n          id: \"To do\",             //chứa các task to do\r\n          title: \"Planned Tasks\",\r\n          label: \"1\",             //số task todo \r\n          style: {\"width\": 350,\"color\":\"blue\",},\r\n          cards: [\r\n            {\r\n              id: \"1\",              //id của task\r\n              title: \"Login bằng Fb\", //title của task\r\n              label: \"High\",          //priority của task\r\n              cardStyle: { \"width\": 340, \"maxWidth\": 340, \"margin\": \"auto\", \"marginBottom\": 5, },           \r\n              description: \"Người dùng không cần tạo tài khoản mà sử dụng tài khoản fb để đăng nhập\t\"   //description của task\r\n            },\r\n          ]\r\n        },\r\n        {\r\n          id: \"InProgress\",             //chứa các task InProgress\r\n          title: \"Work In Progress\",\r\n          label: \"1\",                    //số task InProgress \r\n          style: {\"width\": 350,\"color\":\"orange  \"},\r\n          cards: [\r\n            {\r\n              id: \"2\",\r\n              title: \"Đổi mật khẩu\",\r\n              label: \"Low\",\r\n              cardStyle: { \"width\": 340, \"maxWidth\": 340, \"margin\": \"auto\", \"marginBottom\": 5 , },\r\n              description: \"Người dùng đổi mật khẩu của tài khoản mà mình tạo\"\r\n            }\r\n          ]\r\n        },\r\n        \r\n        {\r\n          id: \"Done\",                    //chứa các task done\r\n          title: \"DONE\",\r\n          style: {\"width\": 350,\"color\":\"green\" },\r\n          label: \"1\",                         //số task done \r\n          cards: [\r\n            {\r\n              id: \"3\",\r\n              title: \"Thay đổi avatar\",\r\n              label: \"Medium\",\r\n              cardStyle: { \"width\": 340, \"maxWidth\": 340, \"margin\": \"auto\", \"marginBottom\": 5, },\r\n              description: \"Người dùng thay đổi avatar hiển thị ở giao diện chính\"\r\n            },         \r\n          ]\r\n        },\r\n      ]}\r\n    \r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  }\r\n//   handleDragStart = (cardId, laneId) => {\r\n//     console.log('drag started')\r\n//     console.log(`cardId: ${cardId}`)\r\n//     console.log(`laneId: ${laneId}`)\r\n// }\r\n\r\n handleDragEnd = (cardId, sourceLaneId, targetLaneId) => {\r\n    console.log('drag ended')\r\n    console.log(`cardId: ${cardId}`)\r\n    console.log(`sourceLaneId: ${sourceLaneId}`)      //targetLaneId: là todo, inprogress, done\r\n    console.log(`targetLaneId: ${targetLaneId}`)      //targetLaneId: là todo, inprogress, done\r\n    //to do\r\n    //viết hàm update lại task vừa dc  chuyển trạng thái tức là cập nhật lại trạng thái của task từ sourceLaneId\r\n    //thành targetLaneId\r\n}\r\n// handleLaneDragStart = (cardId, laneId) => {\r\n//   console.log('drag started')\r\n//   console.log(`cardId: ${cardId}`)\r\n//   console.log(`laneId: ${laneId}`)\r\n// }\r\n\r\n// handleLaneDragEnd = (cardId, sourceLaneId, targetLaneId) => {\r\n//   console.log('drag ended')\r\n//   console.log(`cardId: ${cardId}`)\r\n//   console.log(`sourceLaneId: ${sourceLaneId}`)\r\n//   console.log(`targetLaneId: ${targetLaneId}`)\r\n// }\r\n        \r\n  // setEventBus = eventBus => {\r\n  //   this.setState({eventBus})\r\n  // }\r\n\r\n// async componentWillMount() {\r\n//   const response = await this.getBoard()\r\n//   this.setState({boardData: response})\r\n// }\r\n\r\n// getBoard() {\r\n//   return new Promise(resolve => {\r\n//       resolve(data)\r\n//   })\r\n// }\r\n\r\n// completeCard = () => {\r\n//   this.state.eventBus.publish({\r\n//       type: 'ADD_CARD',\r\n//       laneId: 'COMPLETED',\r\n//       card: {id: 'Milk', title: 'Buy Milk', label: '15 mins', description: 'Use Headspace app'}\r\n//   })\r\n//   this.state.eventBus.publish({type: 'REMOVE_CARD', laneId: 'PLANNED', cardId: 'Milk'})\r\n// }\r\n\r\n// addCard = () => {\r\n//   this.state.eventBus.publish({\r\n//       type: 'ADD_CARD',\r\n//       laneId: 'BLOCKED',\r\n//       card: {id: 'Ec2Error', title: 'EC2 Instance Down', label: '30 mins', description: 'Main EC2 instance down'}\r\n//   })\r\n// }\r\n\r\n// shouldReceiveNewData = nextData => {\r\n//   console.log('New card has been added')\r\n//   console.log(nextData)\r\n// }\r\n\r\n// handleCardAdd = (card, laneId) => {\r\n// console.log(`New card added to lane' ${laneId}`)\r\n// console.dir(card)\r\n// }\r\n\r\n                     \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n         <Row>\r\n         <Col>\r\n            {/* <div class=\"col col-lg-4 col-md-4 col-sm-4\">\r\n                <div class=\"card \" >\r\n                  <div class=\"card-header text-white bg-primary mb-3\">\r\n                     <b>To do </b>     \r\n                  </div>\r\n                  <div class=\"card-body\">\r\n                      <div class=\"card border-primary mb-3\" >\r\n                        <div class=\"card-body\">\r\n                          Người dùng đổi mật khẩu của tài khoản mà mình tạo\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"card border-primary mb-3\" >\r\n                        <div class=\"card-body\">\r\n                          Người dùng thay đổi avatar hiển thị ở giao diện chính\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"card border-primary mb-3\" >\r\n                        <div class=\"card-body\">\r\n                          Người dùng sử dụng paypal để trả phí\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col col-lg-4 col-md-4 col-sm-4\">\r\n                <div class=\"card \" >\r\n                  <div class=\"card-header text-white bg-warning mb-3\">\r\n                     <b>Inprogress </b>     \r\n                  </div>\r\n                  <div class=\"card-body\">\r\n                      <div class=\"card border-warning mb-3\" >\r\n                        <div class=\"card-body\">\r\n                         Người dùng không cần tạo tài khoản mà sử dụng tài khoản email để đăng nhập\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"card border-warning mb-3\" >\r\n                        <div class=\"card-body\">\r\n                          Người dùng tạo tài khoản và sử dụng tài khoản này để đăng nhập\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col col-lg-4 col-md-4 col-sm-4\">\r\n                <div class=\"card \" >\r\n                  <div class=\"card-header text-white bg-success mb-3\">\r\n                     <b>Done </b>     \r\n                  </div>\r\n                  <div class=\"card-body\">\r\n                      <div class=\"card border-success mb-3\" >\r\n                        <div class=\"card-body\">\r\n                         Người dùng không cần tạo tài khoản mà sử dụng tài khoản fb để đăng nhập\r\n                        </div>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n            </div> */}\r\n       \r\n        <Board\r\n         collapsibleLanes\r\n\t\t\t\t\tonCardAdd={this.handleCardAdd}\r\n          data={this.state.boardData}\r\n          draggable\r\n          onDataChange={this.shouldReceiveNewData}\r\n          eventBusHandle={this.setEventBus}\r\n          handleDragStart={this.handleDragStart}\r\n          handleDragEnd={this.handleDragEnd}\r\n                    />\r\n        </Col>\r\n       </Row>\r\n      </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Velocity;\r\n"],"sourceRoot":""}