{"version":3,"sources":["views/Workspace/Member/SprintBacklog/SprintBacklog.js","../node_modules/lodash.isobject/index.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/Button.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/reactstrap/es/Col.js","gRPC/sprintbacklog/sprintbacklog_grpc_web_pb.js","gRPC/sprintbacklog/sprintbacklog_pb.js"],"names":["proto","sprintbacklog","require","SprintBacklog","props","_this","Object","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleBackToProductbacklog","handleComplete","state","data","sprintbacklogService","SprintBacklogClient","GetAllSprintBacklogReq","setRequesterid","getFromStorage","setAccesstoken","setProjectid","setTeamid","response","getAllSprintBacklog","that","on","getStatus","arr","getStart","split","start","end","length","parseInt","getDeadline","setState","prevState","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","id","getBacklogid","title","getTitle","role","getRole","want","getWant","so","getSo","priority","getPriority","estimation","getEstimation","sprint","getSprintid","status","getStatusbacklog","deadline","code","console","log","setInStorage","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","class","map","item","key","reactstrap__WEBPACK_IMPORTED_MODULE_10__","size","color","onClick","Component","module","exports","value","type","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","noGutters","bool","className","string","cssModule","object","form","Row","Tag","attributes","classes","defaultProps","__webpack_exports__","inverse","block","body","outline","innerRef","oneOfType","func","Card","ref","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","prop_types__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_5___default","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","_utils__WEBPACK_IMPORTED_MODULE_7__","active","aria-label","disabled","children","node","close","Button","_React$Component","bind","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","aria-hidden","btnOutlineColor","href","defaultAriaLabel","undefined","_toConsumableArray","Array","isArray","i","arr2","_arrayWithoutHoles","iter","Symbol","iterator","toString","from","_iterableToArray","TypeError","_nonIterableSpread","d","lodash_isobject__WEBPACK_IMPORTED_MODULE_2__","lodash_isobject__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","classnames__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","stringOrNumberProp","number","columnProps","shape","push","pull","order","offset","xs","sm","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Col","colClasses","forEach","columnProp","_classNames","colSizeInterfix","colClass","_colClass","grpc","web","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","SprintBacklogPromiseClient","methodInfo_SprintBacklog_deleteSprintBacklog","AbstractClientBase","MethodInfo","SprintBacklogRes","request","serializeBinary","deserializeBinary","deleteSprintBacklog","metadata","callback","rpcCall","unaryCall","methodInfo_SprintBacklog_getAllSprintBacklog","GetAllSprintBacklogRes","serverStreaming","jspb","goog","global","Function","exportSymbol","DeleteSprintBacklogReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","backlogid","accesstoken","getAccesstoken","teamid","getTeamid","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","setBacklogid","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","writeString","cloneMessage","getFieldProto3","setField","setStatus","statusbacklog","sprintid","setTitle","setRole","setWant","setSo","setStatusbacklog","setPriority","setEstimation","setSprintid","setStart","setDeadline","extend"],"mappings":"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","file":"static/js/41.cb174b69.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card,CardHeader,Badge, Button, Col, Container, Input, InputGroup, InputGroupAddon, InputGroupText, Row, Table, Pagination, PaginationItem, PaginationLink, } from 'reactstrap';\r\nimport cookie from 'react-cookies';\r\nimport {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../../../../service/storage'\r\nconst proto = {};\r\nproto.sprintbacklog = require('./../../../../gRPC/sprintbacklog/sprintbacklog_grpc_web_pb');\r\n\r\nclass SprintBacklog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      }\r\n    };\r\n\r\n    componentDidMount() {  \r\n      const sprintbacklogService = new proto.sprintbacklog.SprintBacklogClient('https://www.overlead.co');\r\n      var metadata = {};\r\n      var GetAllSprintBacklogReq = new proto.sprintbacklog.GetAllSprintBacklogReq();\r\n      GetAllSprintBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n      GetAllSprintBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n      GetAllSprintBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n      GetAllSprintBacklogReq.setTeamid(getFromStorage(\"teamId\"));\r\n      \r\n      var response = sprintbacklogService.getAllSprintBacklog(GetAllSprintBacklogReq, metadata)\r\n      let that = this\r\n      response.on('data', function (response) {\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n          let arr = response.getStart().split('-');\r\n          let start = \"\"\r\n          let end = \"\"\r\n          if (arr[1] > 12) {\r\n            arr[1] = arr[1] - 12\r\n            start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n          } else {\r\n            start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n          }\r\n\r\n\r\n\r\n          arr = response.getDeadline().split('-')\r\n          if (arr[1] > 12) {\r\n            arr[1] = arr[1] - 12\r\n            end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n          } else {\r\n            end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n          }\r\n\r\n\r\n          that.setState(prevState => ({\r\n            data: [...prevState.data,\r\n            {\r\n              id: response.getBacklogid(),\r\n            title: response.getTitle(),\r\n            role: response.getRole(),\r\n            want: response.getWant(),\r\n            so: response.getSo(),\r\n            priority: response.getPriority(),\r\n            estimation: response.getEstimation(),\r\n            sprint: response.getSprintid(),\r\n            status: response.getStatusbacklog(),\r\n            start: start,\r\n            deadline: end\r\n            }]\r\n          }));\r\n  \r\n        }\r\n      })\r\n      response.on('status', function (status) {\r\n        if (status.code!=0) console.log(status)\r\n        setInStorage(\"sprints\",that.state.data)\r\n\r\n      });\r\n      response.on('end', function (end) {\r\n        console.log(\"end\")\r\n        console.log(end)\r\n      });\r\n  \r\n  \r\n  \r\n    }\r\n    handleBackToProductbacklog = () => {\r\n      \r\n    };\r\n    handleComplete = () => {\r\n      \r\n    };\r\n  render() {\r\n    let that=this;\r\n    return (\r\n      <Row>\r\n          <Col>    \r\n              <Card>\r\n              <div class=\"table-responsive\"> \r\n                <table class=\"table table-lg\">\r\n                  <thead class=\"thead\">\r\n                  <tr class=\"bg-primary\">\r\n                    <th>Title... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>As a... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>I want to be able to... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>So that... <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Priority <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Estimation <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Sprint <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Start <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Deadline <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Status <i class=\"fa fa-sort\"></i></th>\r\n                    <th></th>\r\n                  </tr>\r\n                  </thead>\r\n                    <tbody>{this.state.data.map(function(item, key) {    \r\n               return (\r\n                  <tr key = {key}>\r\n                      <td>{item.title}</td>\r\n                      <td>{item.role}</td>\r\n                      <td>{item.want}</td>\r\n                      <td>{item.so}</td>\r\n                      <td><center>{item.priority}</center></td>\r\n                      <td><center>{item.estimation}</center></td>\r\n                      <td><center>{item.sprint}</center></td>\r\n                      <td><center>{item.start}</center></td>\r\n                      <td><center>{item.deadline}</center></td>\r\n                      <td></td>\r\n                      <td>                        \r\n                      <Button size=\"sm\" color=\"danger\" onClick={that.handleBackToProductbacklog}><i class=\"fa fa-trash\"></i></Button>\r\n                      <Button size=\"sm\" color=\"success\" onClick={that.handleComplete}><i class=\"fa fa-check\"></i></Button>\r\n                      </td>\r\n                  </tr>\r\n                )\r\n             \r\n             })}</tbody>\r\n                </table>\r\n            </div>\r\n               </Card>\r\n          </Col>\r\n        </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SprintBacklog;\r\n","/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport isobject from 'lodash.isobject';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  push: deprecated(stringOrNumberProp, 'Please use the prop \"order\"'),\n  pull: deprecated(stringOrNumberProp, 'Please use the prop \"order\"'),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isobject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","/**\n * @fileoverview gRPC-Web generated client stub for sprintbacklog\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.sprintbacklog = require('./sprintbacklog_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprintbacklog.SprintBacklogClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprintbacklog.SprintBacklogPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.DeleteSprintBacklogReq,\n *   !proto.sprintbacklog.SprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_deleteSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.SprintBacklogRes,\n  /** @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.SprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.sprintbacklog.SprintBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.SprintBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.deleteSprintBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/deleteSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_deleteSprintBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.sprintbacklog.SprintBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.deleteSprintBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/deleteSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_deleteSprintBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.GetAllSprintBacklogReq,\n *   !proto.sprintbacklog.GetAllSprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_getAllSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.GetAllSprintBacklogRes,\n  /** @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.GetAllSprintBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.getAllSprintBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/getAllSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_getAllSprintBacklog);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.GetAllSprintBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.getAllSprintBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/getAllSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_getAllSprintBacklog);\n};\n\n\nmodule.exports = proto.sprintbacklog;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.sprintbacklog.DeleteSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.sprintbacklog.GetAllSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.sprintbacklog.GetAllSprintBacklogRes', null, global);\ngoog.exportSymbol('proto.sprintbacklog.SprintBacklogRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.DeleteSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.DeleteSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.DeleteSprintBacklogReq.displayName = 'proto.sprintbacklog.DeleteSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.DeleteSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    backlogid: msg.getBacklogid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.DeleteSprintBacklogReq;\n  return proto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq} The clone.\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.DeleteSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string teamId = 5;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.SprintBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.SprintBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.SprintBacklogRes.displayName = 'proto.sprintbacklog.SprintBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.SprintBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.SprintBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.SprintBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    backlogid: msg.getBacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.SprintBacklogRes}\n */\nproto.sprintbacklog.SprintBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.SprintBacklogRes;\n  return proto.sprintbacklog.SprintBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.SprintBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.SprintBacklogRes}\n */\nproto.sprintbacklog.SprintBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.SprintBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.SprintBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.SprintBacklogRes} The clone.\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.SprintBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.GetAllSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.GetAllSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.GetAllSprintBacklogReq.displayName = 'proto.sprintbacklog.GetAllSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.GetAllSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.GetAllSprintBacklogReq;\n  return proto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq} The clone.\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.GetAllSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string teamId = 4;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.GetAllSprintBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.GetAllSprintBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.GetAllSprintBacklogRes.displayName = 'proto.sprintbacklog.GetAllSprintBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.GetAllSprintBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    title: msg.getTitle(),\n    backlogid: msg.getBacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    status: msg.getStatus()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.GetAllSprintBacklogRes;\n  return proto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes} The clone.\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.GetAllSprintBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string title = 1;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string backlogId = 2;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 11;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string priority = 6;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string estimation = 7;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string sprintId = 8;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string start = 12;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string deadline = 10;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string status = 9;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\ngoog.object.extend(exports, proto.sprintbacklog);\n"],"sourceRoot":""}