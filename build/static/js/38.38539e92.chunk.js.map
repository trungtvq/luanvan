{"version":3,"sources":["../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/Workspace/Po/UserStory/Detail/Detail.js","gRPC/userstory/userstory_grpc_web_pb.js","gRPC/userstory/userstory_pb.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","noGutters","a","bool","className","string","cssModule","object","form","Row","props","Tag","attributes","Object","classes","createElement","defaultProps","__webpack_exports__","inverse","color","block","body","outline","innerRef","oneOfType","func","Card","ref","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","d","proto","userstory","require","Detail","_this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","resetAddForm","setState","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","state","name","as","want","so","toggleActionStatus","prevState","modalActionStatus","onTextboxChangenameUpdate","event","nameUpdate","target","value","onTextboxChangeasUpdate","asUpdate","onTextboxChangewantUpdate","wantUpdate","onTextboxChangesoUpdate","soUpdate","onTextboxChangeUserStoryIdUpdate","userstoryIdUpdate","onTextboxChangeUserStoryIdDelete","userstoryIdDelete","onGetUpdate","role","rouserstoryIdUpdate","handleAdd","console","log","userstoryService","UserStoryClient","AddNewUserStoryReq","setName","setAdderid","cookie","load","setProjectid","projectId","setRole","setWant","setSo","setCookie","addNewUserStory","err","response","getStatus","modalAdd","data","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","id","getId","actionStatus","handleDelete","DeleteUserStoryReq","setDeleterid","requesterId","setUserstoryid","deleteUserStory","filter","e","handleUpdate","UpdateUserStoryReq","setUpdaterid","toto","updateUserStory","modalEdit","tmpdata","map","p","toggleAdd","bind","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","toggleEdit","onTextboxChangename","onTextboxChangeas","onTextboxChangewant","onTextboxChangeso","_this$state","that","react__WEBPACK_IMPORTED_MODULE_8___default","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","size","isOpen","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","xs","md","reactstrap__WEBPACK_IMPORTED_MODULE_13__","type","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_14__","class","reactstrap__WEBPACK_IMPORTED_MODULE_15__","onClick","buttonLabel","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","row","reactstrap__WEBPACK_IMPORTED_MODULE_19__","htmlFor","onChange","rows","reactstrap__WEBPACK_IMPORTED_MODULE_20__","item","key","Component","connect","changeStatusProject","projectName","grpc","web","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","credentials_","options_","UserStoryPromiseClient","methodInfo_UserStory_addNewUserStory","AbstractClientBase","MethodInfo","UserStoryRes","request","serializeBinary","deserializeBinary","metadata","callback","rpcCall","unaryCall","methodInfo_UserStory_updateUserStory","methodInfo_UserStory_deleteUserStory","methodInfo_UserStory_getAllUserStory","GetAllUserStoryRes","getAllUserStory","serverStreaming","module","exports","jspb","goog","global","Function","exportSymbol","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","getName","adderid","getAdderid","projectid","getProjectid","getRole","getWant","getSo","getCookie","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","writeString","cloneMessage","getFieldProto3","setField","status","error","getError","setStatus","setId","setError","updaterid","getUpdaterid","userstoryid","getUserstoryid","deleterid","getDeleterid","GetAllUserStoryReq","getterid","getGetterid","setGetterid","extend"],"mappings":"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","file":"static/js/38.38539e92.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { Component } from 'react';\r\nimport { Card, Badge, Button, Col, Container, Input, InputGroup, \r\n  InputGroupAddon, InputGroupText, Row, Table, Pagination, PaginationItem, PaginationLink, \r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  ModalFooter,\r\n\r\n} from 'reactstrap';\r\nimport cookie from 'react-cookies';\r\nimport {getProject} from '../../../../../actions'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Link } from 'react-router-dom';\r\nconst proto = {};\r\nproto.userstory = require('./../../../../../gRPC/userstory/userstory_grpc_web_pb');\r\nclass Detail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleAdd = this.toggleAdd.bind(this);\r\n    this.toggleEdit = this.toggleEdit.bind(this);\r\n\r\n    this.onTextboxChangename = this.onTextboxChangename.bind(this);\r\n    this.onTextboxChangeas = this.onTextboxChangeas.bind(this);\r\n    this.onTextboxChangewant = this.onTextboxChangewant.bind(this);\r\n    this.onTextboxChangeso = this.onTextboxChangeso.bind(this);\r\n\r\n    this.state = {\r\n      data: [ \r\n              {\r\n                \"id\":'1',\r\n                \"name\":\"a\",\r\n                \"as\":\"admin\",\r\n                \"want\":\"See a list of all members and visitors\",\r\n                \"so\":\"I can monitor site visits\",\r\n              },\r\n              {\r\n                \"id\":'2',\r\n                \"name\":\"a\",\r\n                \"as\":\"admin\",\r\n                \"want\":\"Add new categories\",\r\n                \"so\":\"I can allow members to create engaging content\",\r\n              },\r\n              {\r\n                \"id\":'3',\r\n                \"name\":\"a\",\r\n                \"as\":\"admin\",\r\n                \"want\":\"Add new security groups\",\r\n                \"so\":\"Security levels are approriate\",\r\n              },\r\n              {\r\n                \"id\":'4',\r\n                \"name\":\"a\",\r\n                \"as\":\"admin\",\r\n                \"want\":\"Delete comment\",\r\n                \"so\":\"Offensive content is removed\",\r\n              },\r\n              {\r\n                \"id\":5,\r\n                \"name\":\"a\",\r\n                \"as\":\"admin\",\r\n                \"want\":\"Add new key words\",\r\n                \"so\":\"Content is easy to groups and search for\",\r\n              },\r\n              {\r\n                \"id\":'6',\r\n                \"name\":\"a\",\r\n                \"as\":\"member\",\r\n                \"want\":\"Update my account detail\",\r\n                \"so\":\"I can be contacted by admin\",\r\n              }\r\n            ],\r\n      requesterId:'',\r\n      projectId:'',\r\n      cookie:'',\r\n      actionStatus:'',              //success or show error when action add delete update\r\n      \r\n      modalAdd: false,\r\n      modalEdit: false,\r\n      modalActionStatus: false,     \r\n      \r\n      //add\r\n      name:'',\r\n      as:'',\r\n      want:'',\r\n      so:'',\r\n      \r\n      //update\r\n      userstoryIdUpdate:'',    \r\n      nameUpdate:'',\r\n      asUpdate:'',\r\n      wantUpdate:'',\r\n      soUpdate:'',\r\n      \r\n      //delete\r\n      userstoryIdDelete:'',\r\n      }\r\n    };\r\n  \r\n  resetAddForm=()=>{\r\n      this.setState({\r\n        ...this.state,\r\n        name:'',\r\n        as:'',\r\n        want:'',\r\n        so:'',\r\n      });\r\n  }\r\n  toggleAdd() {\r\n    {this.resetAddForm()};\r\n    this.setState(prevState => ({\r\n      modalAdd: !prevState.modalAdd\r\n    }));\r\n  }\r\n  toggleEdit() {\r\n    //{this.resetDataForm()};\r\n    this.setState(prevState => ({\r\n      modalEdit: !prevState.modalEdit\r\n    }));\r\n  }\r\n  toggleActionStatus=()=> {\r\n    this.setState(prevState => ({\r\n      modalActionStatus: !prevState.modalActionStatus\r\n    }));\r\n  }\r\n\r\n  onTextboxChangename(event) {\r\n    this.setState({\r\n      name: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeas(event) {\r\n    this.setState({\r\n      as: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangewant(event) {\r\n    this.setState({\r\n      want: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeso(event) {\r\n    this.setState({\r\n      so: event.target.value,\r\n    });\r\n  }\r\n\r\n  onTextboxChangenameUpdate=(event)=> {\r\n    this.setState({\r\n      nameUpdate: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeasUpdate=(event)=> {\r\n    this.setState({\r\n     asUpdate: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangewantUpdate=(event)=> {\r\n    this.setState({\r\n      wantUpdate: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangesoUpdate=(event)=> {\r\n    this.setState({\r\n      soUpdate: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeUserStoryIdUpdate=(event)=> {\r\n    this.setState({\r\n      userstoryIdUpdate: event.target.value,\r\n    });\r\n  }\r\n\r\n  onTextboxChangeUserStoryIdDelete=(event)=> {\r\n    this.setState({\r\n      userstoryIdDelete: event.target.value,\r\n    });\r\n  }\r\n  onGetUpdate=(userstoryIdUpdate,name,role,want,so)=>{\r\n    this.setState({\r\n      rouserstoryIdUpdate:userstoryIdUpdate,\r\n      asUpdate:role,\r\n      wantUpdate:want,\r\n      soUpdate:so,\r\n      nameUpdate:name\r\n    });\r\n  }\r\n  \r\n  handleAdd= () => {\r\n    console.log(\"handleAdd\")\r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    //some data of request (get that from frontend)\r\n    console.log(userstoryService)\r\n    \r\n    var metadata = {};\r\n    //make a request to server\r\n\r\n    var AddNewUserStoryReq= new proto.userstory.AddNewUserStoryReq();\r\n    //string name=7;\r\n    // string adderId = 1;\r\n    // string projectId = 2;\r\n    // string role = 3;\r\n    // string want = 4;\r\n    // string so = 5;\r\n    // string cookie = 6;\r\n    AddNewUserStoryReq.setName(this.state.name);\r\n    AddNewUserStoryReq.setAdderid(cookie.load(\"userId\"));\r\n    AddNewUserStoryReq.setProjectid(this.props.projectId);\r\n    AddNewUserStoryReq.setRole(this.state.as);\r\n    AddNewUserStoryReq.setWant(this.state.want);\r\n    AddNewUserStoryReq.setSo(this.state.so);\r\n    AddNewUserStoryReq.setCookie(this.state.cookie);\r\n\r\n    var toto=userstoryService.addNewUserStory(AddNewUserStoryReq, metadata, (err, response) => {\r\n      console.log(\"connect\")\r\n      if (err) { //if error\r\n         console.log(err);\r\n         console.log(\"error\")\r\n      } else { //if success\r\n              //get response\r\n              console.log(\"response\")\r\n              console.log(response);\r\n              if(response.getStatus()==\"SUCCESS\")\r\n              {\r\n                this.setState(prevState => ({\r\n                  modalAdd: !prevState.modalAdd,\r\n                  }));\r\n                this.setState(prevState=>({data:[...prevState.data,{id:response.getId(),name:this.state.name,as:this.state.as,want:this.state.want,so:this.state.so}]}));\r\n                            \r\n                this.setState({\r\n                  name:'',\r\n                  as:'',\r\n                  want:'',\r\n                  so:'',\r\n                  modalActionStatus:true,\r\n                  actionStatus:'SUCCESS'\r\n                });\r\n              }else{\r\n                this.setState({\r\n                  modalActionStatus:true,\r\n                  actionStatus:'FALSE',\r\n                });\r\n              }\r\n              \r\n            }\r\n          });\r\n        \r\n}\r\n  handleDelete = (id) => {\r\n    console.log(\"handleDelete\")\r\n\r\n    \r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    //some data of request (get that from frontend)\r\n    console.log(userstoryService)\r\n    \r\n    var metadata = {};\r\n    //make a request to server\r\n\r\n    var DeleteUserStoryReq= new proto.userstory.DeleteUserStoryReq();\r\n  //     string deleterId = 1;\r\n  //     string projectId = 2;\r\n  //     string userstoryId = 3;\r\n  //     string cookie = 4;\r\n    DeleteUserStoryReq.setDeleterid(this.state.requesterId);\r\n    DeleteUserStoryReq.setProjectid(this.props.projectId);\r\n    DeleteUserStoryReq.setUserstoryid(this.state.userstoryIdDelete);\r\n    DeleteUserStoryReq.setCookie(this.state.cookie);\r\n\r\n    var toto=userstoryService.deleteUserStory(DeleteUserStoryReq, metadata, (err, response) => {\r\n      console.log(\"connect\")\r\n      if (err) { //if error\r\n         console.log(err);\r\n         console.log(\"error\")\r\n         console.log(response);\r\n      } else { //if success\r\n              //get response\r\n              console.log(\"response\")\r\n              console.log(response);\r\n              if(response.getStatus()==\"SUCCESS\")\r\n              {\r\n               this.setState({\r\n                 actionStatus:\"SUCCESS\",\r\n                 modalActionStatus:true,\r\n               });\r\n               this.setState(prevState=>({data:[...prevState.data.filter(function(e) { return e.id !== id; })]}));\r\n              }else{\r\n                   this.setState({\r\n                     actionStatus:\"FALSE\",\r\n                   });\r\n                   this.setState(prevState => ({\r\n                     modalActionStatus:!prevState.modalActionStatus,\r\n                     }));\r\n                 }\r\n              }\r\n            \r\n          });\r\n         \r\n  };\r\n  handleUpdate = () => {\r\n    console.log(\"handleUpdate\")\r\n\r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    //some data of request (get that from frontend)\r\n    console.log(userstoryService)\r\n    var metadata = {};\r\n    //make a request to server\r\n\r\n    var UpdateUserStoryReq= new proto.userstory.UpdateUserStoryReq();\r\n//     string updaterId = 1;\r\n// \tstring projectId = 2;\r\n// \tstring userstoryId = 3;\r\n// \tstring role = 4;\r\n// \tstring want = 5;\r\n// \tstring so = 6;\r\n// string cookie = 7;\r\n    UpdateUserStoryReq.setUpdaterid(this.state.requesterId);\r\n    UpdateUserStoryReq.setProjectid(this.props.projectId);\r\n    UpdateUserStoryReq.setUserstoryid(this.state.userstoryIdUpdate);\r\n    UpdateUserStoryReq.setRole(this.state.asUpdate);\r\n    UpdateUserStoryReq.setWant(this.state.wantUpdate);\r\n    UpdateUserStoryReq.setSo(this.state.soUpdate);\r\n    UpdateUserStoryReq.setCookie(this.state.cookie);\r\n\r\n    var toto=userstoryService.updateUserStory(UpdateUserStoryReq, metadata, (err, response) => {\r\n      console.log(\"connect\")\r\n      if (err) { //if error\r\n         console.log(err);\r\n         console.log(\"error\")\r\n      } else { //if success\r\n              //get response\r\n              console.log(\"response\")\r\n              console.log(response);\r\n              console.log(response.getStatus());\r\n              if(response.getStatus()==\"SUCCESS\")\r\n              {\r\n                this.setState({\r\n                  actionStatus:\"SUCCESS\",\r\n                });\r\n                this.setState(prevState => ({\r\n                  modalEdit: !prevState.modalEdit,\r\n                  modalActionStatus:!prevState.modalActionStatus,\r\n                  }));\r\n                  const tmpdata = this.state.data.map(p =>\r\n                    p.id === this.state.userstoryIdUpdate\r\n                      ? { ...p, name: this.state.nameUpdate,as:this.state.asUpdate,\r\n                        want:this.state.wantUpdate,so:this.state.so}\r\n                      : p\r\n                  );\r\n                 \r\n                  this.setState({\r\n                    data:tmpdata,\r\n                  });\r\n                 \r\n                  \r\n              }else{\r\n                this.setState({\r\n                  actionStatus:\"FALSE\",\r\n                });\r\n                this.setState(prevState => ({\r\n                  modalEdit: !prevState.modalEdit,\r\n                  modalActionStatus:!prevState.modalActionStatus,\r\n                  }));\r\n              }\r\n            }\r\n          });\r\n          console.log(toto)\r\n  };\r\n\r\n  // componentDidMount(){\r\n  //   this.resetAddForm();\r\n  // }\r\n  render() {\r\n     const {\r\n      data,\r\n      name,\r\n      as,\r\n      want,\r\n      so,\r\n    } = this.state;\r\n    let that=this;\r\n    return (\r\n      <Row>\r\n        <Modal size=\"sm\"  isOpen={that.state.modalActionStatus} toggle={that.toggleActionStatus} className={that.props.className}>\r\n          <ModalBody>\r\n            <center><h4>{that.state.actionStatus}</h4></center>\r\n          </ModalBody>\r\n          </Modal>\r\n          <Col>       \r\n              <Row>       \r\n                          <Col xs=\"2\" md=\"2\">\r\n                            <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"Search\" /> \r\n                          </Col> \r\n                          \r\n                          <Col xs=\"0\" md=\"0\">\r\n                            <Button type=\"submit\" size=\"sm\" color=\"success\"><i class=\"fa fa-search\"></i></Button>\r\n                          </Col> \r\n              </Row>\r\n              \r\n              <Card>\r\n              <div class=\"table-responsive\">   \r\n                  <table class=\"table table-lg\">\r\n                    <thead class=\"thead\">\r\n                    <tr class=\"bg-primary\">\r\n                      <th>Name<i class=\"fa fa-sort\"></i></th>\r\n                      <th>As a...<i class=\"fa fa-sort\"></i></th>\r\n                      <th>I want to be able to... <i class=\"fa fa-sort\"></i></th>\r\n                      <th>So that... <i class=\"fa fa-sort\"></i></th>\r\n                      <th>\r\n                        <div>\r\n                            <Button color=\"primary\" size=\"sm\" className=\"mt-3\" onClick={that.toggleAdd}><i class=\"fa fa-plus-square\"></i>{this.props.buttonLabel}</Button>\r\n                            <Modal size=\"lg\" isOpen={that.state.modalAdd} toggle={that.toggleAdd}>\r\n                              <ModalHeader toggle={that.toggleAdd}>UserStory</ModalHeader>\r\n                              <ModalBody>\r\n                                  <Form className=\"form-horizontal\">    \r\n                                      <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">Name</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"text\" id=\"name\" name=\"name\" placeholder=\"name\" value={name} onChange={that.onTextboxChangename}/>\r\n                                          \r\n                                        </Col>\r\n                                      </FormGroup>           \r\n                                      <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">As a...</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"text\" id=\"as\" name=\"as\" placeholder=\"As a...\" value={as} onChange={that.onTextboxChangeas}/>\r\n                                          \r\n                                        </Col>\r\n                                      </FormGroup>\r\n                                       <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">I want to be able to...</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"text\" id=\"want\" name=\"want\" placeholder=\"I want to be able to...\" value={want} onChange={that.onTextboxChangewant}/>\r\n                                          \r\n                                        </Col>\r\n                                      </FormGroup>   \r\n                                       <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"textarea-input\">So that...</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"textarea\" name=\"so\" id=\"so\" rows=\"9\"\r\n                                                 placeholder=\"Content...\"  value={so} onChange={that.onTextboxChangeso}/>\r\n                                        </Col>\r\n                                      </FormGroup>                     \r\n                                  </Form>                           \r\n                              </ModalBody>\r\n                              <ModalFooter>\r\n                                <Button color=\"primary\" onClick={that.handleAdd}>Submit</Button>\r\n                                <Button color=\"secondary\" onClick={that.toggleAdd}>Cancel</Button>\r\n                              </ModalFooter>\r\n                            </Modal>\r\n                        </div>\r\n                      </th>\r\n                    </tr>\r\n                    </thead>\r\n                   <tbody>{data.map(function(item, key) {\r\n                 return (\r\n                    <tr key = {key}>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.as}</td>\r\n                        <td>{item.want}</td>\r\n                        <td>{item.so}</td>\r\n                        <td>\r\n                         \r\n                          <Button color=\"warning\" size=\"sm\" onClick={(event)=>{that.toggleEdit();that.onGetUpdate(item.id,item.name,item.as,item.want,item.so)}}><i class=\"fa fa-edit\"></i></Button>\r\n                          <Modal size=\"lg\" isOpen={that.state.modalEdit} toggle={that.toggleEdit} >\r\n                              <ModalHeader toggle={that.toggleEdit}>UserStory</ModalHeader>\r\n                              <ModalBody>\r\n                              <Form className=\"form-horizontal\">    \r\n                                      <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">Name</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"text\" id=\"name\" name=\"name\" placeholder=\"name\" value={item.name} onChange={that.onTextboxChangename}/>\r\n                                          \r\n                                        </Col>\r\n                                      </FormGroup>           \r\n                                      <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">As a...</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"text\" id=\"as\" name=\"as\" placeholder=\"As a...\" value={item.role} onChange={that.onTextboxChangeas}/>\r\n                                          \r\n                                        </Col>\r\n                                      </FormGroup>\r\n                                       <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">I want to be able to...</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"text\" id=\"want\" name=\"want\" placeholder=\"I want to be able to...\" value={item.want} onChange={that.onTextboxChangewant}/>\r\n                                          \r\n                                        </Col>\r\n                                      </FormGroup>   \r\n                                       <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"textarea-input\">So that...</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"textarea\" name=\"so\" id=\"so\" rows=\"9\"\r\n                                                 placeholder=\"Content...\"  value={item.so} onChange={that.onTextboxChangeso}/>\r\n                                        </Col>\r\n                                      </FormGroup>                     \r\n                                  </Form>                                       \r\n                              </ModalBody>\r\n                              <ModalFooter>\r\n                                <Button color=\"primary\" onClick={that.handleUpdate}>Submit</Button>{' '}\r\n                                <Button color=\"secondary\" onClick={that.toggleEdit}>Cancel</Button>\r\n                              </ModalFooter>\r\n                          </Modal>\r\n                          \r\n                          <Button type=\"submit\" size=\"sm\" color=\"danger\" onClick={(event) => {  that.handleDelete(item.id)}}><i class=\"fa fa-trash\"></i></Button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n               \r\n               })}</tbody>\r\n                  </table>\r\n              </div>\r\n            </  Card>  \r\n          </Col>\r\n        </Row>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { changeStatusProject } = state\r\n  const { projectId, projectName } = changeStatusProject\r\n  return {\r\n    projectId, projectName,\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Detail);\r\n","/**\n * @fileoverview gRPC-Web generated client stub for userstory\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.userstory = require('./userstory_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.userstory.UserStoryClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.userstory.UserStoryPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.AddNewUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_addNewUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.AddNewUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.AddNewUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.addNewUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/addNewUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_addNewUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.AddNewUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.addNewUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/addNewUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_addNewUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.UpdateUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_updateUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.UpdateUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.UpdateUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.updateUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/updateUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_updateUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.UpdateUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.updateUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/updateUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_updateUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.DeleteUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_deleteUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.DeleteUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.DeleteUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.deleteUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/deleteUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_deleteUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.DeleteUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.deleteUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/deleteUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_deleteUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.GetAllUserStoryReq,\n *   !proto.userstory.GetAllUserStoryRes>}\n */\nconst methodInfo_UserStory_getAllUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.GetAllUserStoryRes,\n  /** @param {!proto.userstory.GetAllUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.GetAllUserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.GetAllUserStoryReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.GetAllUserStoryRes>}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.getAllUserStory =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/userstory.UserStory/getAllUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_getAllUserStory);\n};\n\n\n/**\n * @param {!proto.userstory.GetAllUserStoryReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.GetAllUserStoryRes>}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryPromiseClient.prototype.getAllUserStory =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/userstory.UserStory/getAllUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_getAllUserStory);\n};\n\n\nmodule.exports = proto.userstory;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.userstory.AddNewUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.DeleteUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.GetAllUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.GetAllUserStoryRes', null, global);\ngoog.exportSymbol('proto.userstory.UpdateUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.UserStoryRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.AddNewUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.AddNewUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.AddNewUserStoryReq.displayName = 'proto.userstory.AddNewUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.AddNewUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.AddNewUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.AddNewUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.AddNewUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: msg.getName(),\n    adderid: msg.getAdderid(),\n    projectid: msg.getProjectid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.AddNewUserStoryReq}\n */\nproto.userstory.AddNewUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.AddNewUserStoryReq;\n  return proto.userstory.AddNewUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.AddNewUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.AddNewUserStoryReq}\n */\nproto.userstory.AddNewUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAdderid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.AddNewUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.AddNewUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.AddNewUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.AddNewUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getAdderid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.AddNewUserStoryReq} The clone.\n */\nproto.userstory.AddNewUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.AddNewUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string name = 7;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string adderId = 1;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getAdderid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setAdderid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string cookie = 6;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.UserStoryRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.UserStoryRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.UserStoryRes.displayName = 'proto.userstory.UserStoryRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.UserStoryRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.UserStoryRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.UserStoryRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.UserStoryRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    id: msg.getId(),\n    error: msg.getError()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.UserStoryRes}\n */\nproto.userstory.UserStoryRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.UserStoryRes;\n  return proto.userstory.UserStoryRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.UserStoryRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.UserStoryRes}\n */\nproto.userstory.UserStoryRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.UserStoryRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UserStoryRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.UserStoryRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UserStoryRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.UserStoryRes} The clone.\n */\nproto.userstory.UserStoryRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.UserStoryRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.userstory.UserStoryRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UserStoryRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string id = 2;\n * @return {string}\n */\nproto.userstory.UserStoryRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UserStoryRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string error = 3;\n * @return {string}\n */\nproto.userstory.UserStoryRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UserStoryRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.UpdateUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.UpdateUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.UpdateUserStoryReq.displayName = 'proto.userstory.UpdateUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.UpdateUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.UpdateUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.UpdateUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.UpdateUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    updaterid: msg.getUpdaterid(),\n    projectid: msg.getProjectid(),\n    userstoryid: msg.getUserstoryid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.UpdateUserStoryReq}\n */\nproto.userstory.UpdateUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.UpdateUserStoryReq;\n  return proto.userstory.UpdateUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.UpdateUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.UpdateUserStoryReq}\n */\nproto.userstory.UpdateUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdaterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserstoryid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.UpdateUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UpdateUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.UpdateUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UpdateUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUpdaterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getUserstoryid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.UpdateUserStoryReq} The clone.\n */\nproto.userstory.UpdateUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.UpdateUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string updaterId = 1;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getUpdaterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setUpdaterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string userStoryId = 3;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getUserstoryid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setUserstoryid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string role = 4;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string want = 5;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string so = 6;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string cookie = 7;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.DeleteUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.DeleteUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.DeleteUserStoryReq.displayName = 'proto.userstory.DeleteUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.DeleteUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.DeleteUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.DeleteUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.DeleteUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    deleterid: msg.getDeleterid(),\n    projectid: msg.getProjectid(),\n    userstoryid: msg.getUserstoryid(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.DeleteUserStoryReq}\n */\nproto.userstory.DeleteUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.DeleteUserStoryReq;\n  return proto.userstory.DeleteUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.DeleteUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.DeleteUserStoryReq}\n */\nproto.userstory.DeleteUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeleterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserstoryid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.DeleteUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.DeleteUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.DeleteUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.DeleteUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getDeleterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getUserstoryid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.DeleteUserStoryReq} The clone.\n */\nproto.userstory.DeleteUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.DeleteUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string deleterId = 1;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getDeleterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setDeleterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string userStoryId = 3;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getUserstoryid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setUserstoryid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string cookie = 4;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.GetAllUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.GetAllUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.GetAllUserStoryReq.displayName = 'proto.userstory.GetAllUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.GetAllUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.GetAllUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    getterid: msg.getGetterid(),\n    projectid: msg.getProjectid(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.GetAllUserStoryReq}\n */\nproto.userstory.GetAllUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.GetAllUserStoryReq;\n  return proto.userstory.GetAllUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.GetAllUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.GetAllUserStoryReq}\n */\nproto.userstory.GetAllUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setGetterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.GetAllUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.GetAllUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getGetterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.GetAllUserStoryReq} The clone.\n */\nproto.userstory.GetAllUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.GetAllUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string getterId = 1;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getGetterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setGetterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string cookie = 3;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.GetAllUserStoryRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.GetAllUserStoryRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.GetAllUserStoryRes.displayName = 'proto.userstory.GetAllUserStoryRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.GetAllUserStoryRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.GetAllUserStoryRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    status: msg.getStatus(),\n    error: msg.getError()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.GetAllUserStoryRes}\n */\nproto.userstory.GetAllUserStoryRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.GetAllUserStoryRes;\n  return proto.userstory.GetAllUserStoryRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.GetAllUserStoryRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.GetAllUserStoryRes}\n */\nproto.userstory.GetAllUserStoryRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.GetAllUserStoryRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.GetAllUserStoryRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.GetAllUserStoryRes} The clone.\n */\nproto.userstory.GetAllUserStoryRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.GetAllUserStoryRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string role = 1;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string want = 2;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string so = 3;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string status = 4;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string error = 5;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\ngoog.object.extend(exports, proto.userstory);\n"],"sourceRoot":""}