{"version":3,"sources":["gRPC/productbacklog/productbacklog_grpc_web_pb.js","gRPC/productbacklog/productbacklog_pb.js"],"names":["grpc","web","require","proto","productbacklog","ProductBacklogClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","credentials_","options_","ProductBacklogPromiseClient","methodInfo_ProductBacklog_addNewProductBacklog","AbstractClientBase","MethodInfo","ProductBacklogRes","request","serializeBinary","deserializeBinary","prototype","addNewProductBacklog","metadata","callback","rpcCall","unaryCall","methodInfo_ProductBacklog_updateProductBacklog","updateProductBacklog","methodInfo_ProductBacklog_deleteProductBacklog","deleteProductBacklog","methodInfo_ProductBacklog_sendToSprintBacklog","sendToSprintBacklog","methodInfo_ProductBacklog_sendToUserStory","sendToUserStory","methodInfo_ProductBacklog_getAllProductBacklog","GetAllProductBacklogRes","getAllProductBacklog","serverStreaming","module","exports","jspb","goog","global","Function","exportSymbol","AddNewProductBacklogReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","role","getRole","want","getWant","so","getSo","statusbacklog","getStatusbacklog","priority","getPriority","estimation","getEstimation","sprintid","getSprintid","accesstoken","getAccesstoken","title","getTitle","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setRequesterid","setProjectid","setRole","setWant","setSo","setStatusbacklog","setPriority","setEstimation","setSprintid","setAccesstoken","setTitle","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","length","writeString","cloneMessage","getFieldProto3","setField","error","getError","status","getStatus","productbacklogid","getProductbacklogid","setError","setStatus","setProductbacklogid","UpdateProductBacklogReq","sprint","getSprint","setSprint","DeleteProductBacklogReq","SendToSprintBacklogReq","start","getStart","deadline","getDeadline","teamid","getTeamid","setStart","setDeadline","setTeamid","GetAllProductBacklogReq","object","extend"],"mappings":"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","file":"static/js/8.e6db3caa.chunk.js","sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for productbacklog\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.productbacklog = require('./productbacklog_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.productbacklog.ProductBacklogClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.productbacklog.ProductBacklogPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.AddNewProductBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_addNewProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.AddNewProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.AddNewProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.addNewProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/addNewProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_addNewProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.AddNewProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.addNewProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/addNewProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_addNewProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.UpdateProductBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_updateProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.UpdateProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.UpdateProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.updateProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/updateProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_updateProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.UpdateProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.updateProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/updateProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_updateProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.DeleteProductBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_deleteProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.DeleteProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.DeleteProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.deleteProductBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/deleteProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_deleteProductBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.DeleteProductBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.deleteProductBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/deleteProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_deleteProductBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.SendToSprintBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_sendToSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.SendToSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.SendToSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.sendToSprintBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/sendToSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_sendToSprintBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.SendToSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.sendToSprintBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/sendToSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_sendToSprintBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.SendToSprintBacklogReq,\n *   !proto.productbacklog.ProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_sendToUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.ProductBacklogRes,\n  /** @param {!proto.productbacklog.SendToSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.ProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.SendToSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.productbacklog.ProductBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.ProductBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.sendToUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/sendToUserStory',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_sendToUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.productbacklog.SendToSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.productbacklog.ProductBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.sendToUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/productbacklog.ProductBacklog/sendToUserStory',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_sendToUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.productbacklog.GetAllProductBacklogReq,\n *   !proto.productbacklog.GetAllProductBacklogRes>}\n */\nconst methodInfo_ProductBacklog_getAllProductBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.productbacklog.GetAllProductBacklogRes,\n  /** @param {!proto.productbacklog.GetAllProductBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.productbacklog.GetAllProductBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.productbacklog.GetAllProductBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.GetAllProductBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogClient.prototype.getAllProductBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/productbacklog.ProductBacklog/getAllProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_getAllProductBacklog);\n};\n\n\n/**\n * @param {!proto.productbacklog.GetAllProductBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.productbacklog.GetAllProductBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.productbacklog.ProductBacklogPromiseClient.prototype.getAllProductBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/productbacklog.ProductBacklog/getAllProductBacklog',\n      request,\n      metadata || {},\n      methodInfo_ProductBacklog_getAllProductBacklog);\n};\n\n\nmodule.exports = proto.productbacklog;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.productbacklog.AddNewProductBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.DeleteProductBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.GetAllProductBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.GetAllProductBacklogRes', null, global);\ngoog.exportSymbol('proto.productbacklog.ProductBacklogRes', null, global);\ngoog.exportSymbol('proto.productbacklog.SendToSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.productbacklog.UpdateProductBacklogReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.AddNewProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.AddNewProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.AddNewProductBacklogReq.displayName = 'proto.productbacklog.AddNewProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.AddNewProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.AddNewProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.AddNewProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    accesstoken: msg.getAccesstoken(),\n    title: msg.getTitle()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.AddNewProductBacklogReq}\n */\nproto.productbacklog.AddNewProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.AddNewProductBacklogReq;\n  return proto.productbacklog.AddNewProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.AddNewProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.AddNewProductBacklogReq}\n */\nproto.productbacklog.AddNewProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.AddNewProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.AddNewProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.AddNewProductBacklogReq} The clone.\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.AddNewProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 6;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string priority = 7;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string estimation = 8;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string sprintId = 9;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string accessToken = 10;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string title = 11;\n * @return {string}\n */\nproto.productbacklog.AddNewProductBacklogReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.AddNewProductBacklogReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.ProductBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.ProductBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.ProductBacklogRes.displayName = 'proto.productbacklog.ProductBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.ProductBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.ProductBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.ProductBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.ProductBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    error: msg.getError(),\n    status: msg.getStatus(),\n    productbacklogid: msg.getProductbacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.ProductBacklogRes}\n */\nproto.productbacklog.ProductBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.ProductBacklogRes;\n  return proto.productbacklog.ProductBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.ProductBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.ProductBacklogRes}\n */\nproto.productbacklog.ProductBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.ProductBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.ProductBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.ProductBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.ProductBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.ProductBacklogRes} The clone.\n */\nproto.productbacklog.ProductBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.ProductBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string error = 1;\n * @return {string}\n */\nproto.productbacklog.ProductBacklogRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.ProductBacklogRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string status = 2;\n * @return {string}\n */\nproto.productbacklog.ProductBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.ProductBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.ProductBacklogRes.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.ProductBacklogRes.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.UpdateProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.UpdateProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.UpdateProductBacklogReq.displayName = 'proto.productbacklog.UpdateProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.UpdateProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.UpdateProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.UpdateProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    productbacklogid: msg.getProductbacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprint: msg.getSprint(),\n    accesstoken: msg.getAccesstoken(),\n    title: msg.getTitle(),\n    sprintid: msg.getSprintid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.UpdateProductBacklogReq}\n */\nproto.productbacklog.UpdateProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.UpdateProductBacklogReq;\n  return proto.productbacklog.UpdateProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.UpdateProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.UpdateProductBacklogReq}\n */\nproto.productbacklog.UpdateProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprint(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.UpdateProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.UpdateProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getSprint();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.UpdateProductBacklogReq} The clone.\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.UpdateProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string role = 4;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string want = 5;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string so = 6;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string statusBacklog = 7;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string priority = 8;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string estimation = 9;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string sprint = 10;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getSprint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setSprint = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string accessToken = 11;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string title = 12;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string sprintId = 13;\n * @return {string}\n */\nproto.productbacklog.UpdateProductBacklogReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.UpdateProductBacklogReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.DeleteProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.DeleteProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.DeleteProductBacklogReq.displayName = 'proto.productbacklog.DeleteProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.DeleteProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.DeleteProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.DeleteProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    productbacklogid: msg.getProductbacklogid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.DeleteProductBacklogReq}\n */\nproto.productbacklog.DeleteProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.DeleteProductBacklogReq;\n  return proto.productbacklog.DeleteProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.DeleteProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.DeleteProductBacklogReq}\n */\nproto.productbacklog.DeleteProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.DeleteProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.DeleteProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.DeleteProductBacklogReq} The clone.\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.DeleteProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.productbacklog.DeleteProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.DeleteProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.SendToSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.SendToSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.SendToSprintBacklogReq.displayName = 'proto.productbacklog.SendToSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.SendToSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.SendToSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.SendToSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    productbacklogid: msg.getProductbacklogid(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.SendToSprintBacklogReq}\n */\nproto.productbacklog.SendToSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.SendToSprintBacklogReq;\n  return proto.productbacklog.SendToSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.SendToSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.SendToSprintBacklogReq}\n */\nproto.productbacklog.SendToSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.SendToSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.SendToSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.SendToSprintBacklogReq} The clone.\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.SendToSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string productBacklogId = 3;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string start = 4;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string deadline = 5;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string accessToken = 6;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string teamId = 7;\n * @return {string}\n */\nproto.productbacklog.SendToSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.SendToSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.GetAllProductBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.GetAllProductBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.GetAllProductBacklogReq.displayName = 'proto.productbacklog.GetAllProductBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.GetAllProductBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.GetAllProductBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.GetAllProductBacklogReq}\n */\nproto.productbacklog.GetAllProductBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.GetAllProductBacklogReq;\n  return proto.productbacklog.GetAllProductBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.GetAllProductBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.GetAllProductBacklogReq}\n */\nproto.productbacklog.GetAllProductBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.GetAllProductBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.GetAllProductBacklogReq} The clone.\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.GetAllProductBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.productbacklog.GetAllProductBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.productbacklog.GetAllProductBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.productbacklog.GetAllProductBacklogRes.displayName = 'proto.productbacklog.GetAllProductBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.productbacklog.GetAllProductBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.productbacklog.GetAllProductBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.productbacklog.GetAllProductBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    productbacklogid: msg.getProductbacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    status: msg.getStatus(),\n    error: msg.getError(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    title: msg.getTitle()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.productbacklog.GetAllProductBacklogRes}\n */\nproto.productbacklog.GetAllProductBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.productbacklog.GetAllProductBacklogRes;\n  return proto.productbacklog.GetAllProductBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.productbacklog.GetAllProductBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.productbacklog.GetAllProductBacklogRes}\n */\nproto.productbacklog.GetAllProductBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductbacklogid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.productbacklog.GetAllProductBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getProductbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.productbacklog.GetAllProductBacklogRes} The clone.\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.productbacklog.GetAllProductBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string productBacklogId = 2;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getProductbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setProductbacklogid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 11;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string status = 9;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string error = 1;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string priority = 6;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string estimation = 7;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string sprintId = 8;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string title = 10;\n * @return {string}\n */\nproto.productbacklog.GetAllProductBacklogRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.productbacklog.GetAllProductBacklogRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\ngoog.object.extend(exports, proto.productbacklog);\n"],"sourceRoot":""}