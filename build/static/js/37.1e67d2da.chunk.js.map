{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","gRPC/userstory/userstory_grpc_web_pb.js","gRPC/userstory/userstory_pb.js","views/Workspace/Po/UserStory/Detail/Detail.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","__webpack_exports__","grpc","web","require","proto","userstory","UserStoryClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","credentials_","options_","UserStoryPromiseClient","methodInfo_UserStory_addNewUserStory","AbstractClientBase","MethodInfo","UserStoryRes","request","serializeBinary","deserializeBinary","addNewUserStory","metadata","callback","rpcCall","unaryCall","methodInfo_UserStory_updateUserStory","updateUserStory","methodInfo_UserStory_deleteUserStory","deleteUserStory","methodInfo_UserStory_getAllUserStory","GetAllUserStoryRes","getAllUserStory","serverStreaming","module","exports","jspb","goog","global","Function","exportSymbol","AddNewUserStoryReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","name","getName","adderid","getAdderid","projectid","getProjectid","role","getRole","want","getWant","so","getSo","cookie","getCookie","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setName","setAdderid","setProjectid","setRole","setWant","setSo","setCookie","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","writeString","cloneMessage","getFieldProto3","setField","status","getStatus","id","getId","error","getError","setStatus","setId","setError","UpdateUserStoryReq","updaterid","getUpdaterid","userstoryid","getUserstoryid","setUpdaterid","setUserstoryid","DeleteUserStoryReq","deleterid","getDeleterid","setDeleterid","GetAllUserStoryReq","getterid","getGetterid","setGetterid","object","extend","Detail","props","_this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","resetAddForm","setState","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","state","as","toggleActionStatus","prevState","modalActionStatus","onTextboxChangenameUpdate","event","nameUpdate","target","onTextboxChangeasUpdate","asUpdate","onTextboxChangewantUpdate","wantUpdate","onTextboxChangesoUpdate","soUpdate","onTextboxChangeUserStoryIdUpdate","userstoryIdUpdate","onTextboxChangeUserStoryIdDelete","userstoryIdDelete","onGetUpdate","rouserstoryIdUpdate","handleAdd","console","log","userstoryService","load","projectId","err","response","modalAdd","data","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","actionStatus","handleDelete","requesterId","filter","e","handleUpdate","toto","modalEdit","tmpdata","map","p","toggleAdd","bind","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","toggleEdit","onTextboxChangename","onTextboxChangeas","onTextboxChangewant","onTextboxChangeso","_this$state","that","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","size","isOpen","toggle","className","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","xs","md","reactstrap__WEBPACK_IMPORTED_MODULE_13__","type","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_14__","color","class","reactstrap__WEBPACK_IMPORTED_MODULE_15__","onClick","buttonLabel","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","row","reactstrap__WEBPACK_IMPORTED_MODULE_19__","htmlFor","onChange","rows","reactstrap__WEBPACK_IMPORTED_MODULE_20__","item","key","Component","connect","changeStatusProject","projectName","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","noGutters","bool","string","cssModule","form","Row","Tag","attributes","classes","defaultProps","inverse","block","body","outline","innerRef","oneOfType","func","Card","ref"],"mappings":"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","file":"static/js/37.1e67d2da.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","/**\n * @fileoverview gRPC-Web generated client stub for userstory\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.userstory = require('./userstory_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.userstory.UserStoryClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.userstory.UserStoryPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.AddNewUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_addNewUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.AddNewUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.AddNewUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.addNewUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/addNewUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_addNewUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.AddNewUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.addNewUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/addNewUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_addNewUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.UpdateUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_updateUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.UpdateUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.UpdateUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.updateUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/updateUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_updateUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.UpdateUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.updateUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/updateUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_updateUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.DeleteUserStoryReq,\n *   !proto.userstory.UserStoryRes>}\n */\nconst methodInfo_UserStory_deleteUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.UserStoryRes,\n  /** @param {!proto.userstory.DeleteUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.UserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.DeleteUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.userstory.UserStoryRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.UserStoryRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.deleteUserStory =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/userstory.UserStory/deleteUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_deleteUserStory,\n      callback);\n};\n\n\n/**\n * @param {!proto.userstory.DeleteUserStoryReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.userstory.UserStoryRes>}\n *     A native promise that resolves to the response\n */\nproto.userstory.UserStoryPromiseClient.prototype.deleteUserStory =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/userstory.UserStory/deleteUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_deleteUserStory);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.userstory.GetAllUserStoryReq,\n *   !proto.userstory.GetAllUserStoryRes>}\n */\nconst methodInfo_UserStory_getAllUserStory = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.userstory.GetAllUserStoryRes,\n  /** @param {!proto.userstory.GetAllUserStoryReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.userstory.GetAllUserStoryRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.userstory.GetAllUserStoryReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.GetAllUserStoryRes>}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryClient.prototype.getAllUserStory =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/userstory.UserStory/getAllUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_getAllUserStory);\n};\n\n\n/**\n * @param {!proto.userstory.GetAllUserStoryReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.userstory.GetAllUserStoryRes>}\n *     The XHR Node Readable Stream\n */\nproto.userstory.UserStoryPromiseClient.prototype.getAllUserStory =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/userstory.UserStory/getAllUserStory',\n      request,\n      metadata || {},\n      methodInfo_UserStory_getAllUserStory);\n};\n\n\nmodule.exports = proto.userstory;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.userstory.AddNewUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.DeleteUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.GetAllUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.GetAllUserStoryRes', null, global);\ngoog.exportSymbol('proto.userstory.UpdateUserStoryReq', null, global);\ngoog.exportSymbol('proto.userstory.UserStoryRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.AddNewUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.AddNewUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.AddNewUserStoryReq.displayName = 'proto.userstory.AddNewUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.AddNewUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.AddNewUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.AddNewUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.AddNewUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: msg.getName(),\n    adderid: msg.getAdderid(),\n    projectid: msg.getProjectid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.AddNewUserStoryReq}\n */\nproto.userstory.AddNewUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.AddNewUserStoryReq;\n  return proto.userstory.AddNewUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.AddNewUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.AddNewUserStoryReq}\n */\nproto.userstory.AddNewUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAdderid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.AddNewUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.AddNewUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.AddNewUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.AddNewUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getAdderid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.AddNewUserStoryReq} The clone.\n */\nproto.userstory.AddNewUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.AddNewUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string name = 7;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setName = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string adderId = 1;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getAdderid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setAdderid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string cookie = 6;\n * @return {string}\n */\nproto.userstory.AddNewUserStoryReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.AddNewUserStoryReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.UserStoryRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.UserStoryRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.UserStoryRes.displayName = 'proto.userstory.UserStoryRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.UserStoryRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.UserStoryRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.UserStoryRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.UserStoryRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    id: msg.getId(),\n    error: msg.getError()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.UserStoryRes}\n */\nproto.userstory.UserStoryRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.UserStoryRes;\n  return proto.userstory.UserStoryRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.UserStoryRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.UserStoryRes}\n */\nproto.userstory.UserStoryRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.UserStoryRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UserStoryRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.UserStoryRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UserStoryRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.UserStoryRes} The clone.\n */\nproto.userstory.UserStoryRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.UserStoryRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.userstory.UserStoryRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UserStoryRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string id = 2;\n * @return {string}\n */\nproto.userstory.UserStoryRes.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UserStoryRes.prototype.setId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string error = 3;\n * @return {string}\n */\nproto.userstory.UserStoryRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UserStoryRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.UpdateUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.UpdateUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.UpdateUserStoryReq.displayName = 'proto.userstory.UpdateUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.UpdateUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.UpdateUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.UpdateUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.UpdateUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    updaterid: msg.getUpdaterid(),\n    projectid: msg.getProjectid(),\n    userstoryid: msg.getUserstoryid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.UpdateUserStoryReq}\n */\nproto.userstory.UpdateUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.UpdateUserStoryReq;\n  return proto.userstory.UpdateUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.UpdateUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.UpdateUserStoryReq}\n */\nproto.userstory.UpdateUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdaterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserstoryid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.UpdateUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UpdateUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.UpdateUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.UpdateUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getUpdaterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getUserstoryid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.UpdateUserStoryReq} The clone.\n */\nproto.userstory.UpdateUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.UpdateUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string updaterId = 1;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getUpdaterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setUpdaterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string userStoryId = 3;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getUserstoryid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setUserstoryid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string role = 4;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string want = 5;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string so = 6;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string cookie = 7;\n * @return {string}\n */\nproto.userstory.UpdateUserStoryReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.UpdateUserStoryReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.DeleteUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.DeleteUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.DeleteUserStoryReq.displayName = 'proto.userstory.DeleteUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.DeleteUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.DeleteUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.DeleteUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.DeleteUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    deleterid: msg.getDeleterid(),\n    projectid: msg.getProjectid(),\n    userstoryid: msg.getUserstoryid(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.DeleteUserStoryReq}\n */\nproto.userstory.DeleteUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.DeleteUserStoryReq;\n  return proto.userstory.DeleteUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.DeleteUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.DeleteUserStoryReq}\n */\nproto.userstory.DeleteUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeleterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserstoryid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.DeleteUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.DeleteUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.DeleteUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.DeleteUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getDeleterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getUserstoryid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.DeleteUserStoryReq} The clone.\n */\nproto.userstory.DeleteUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.DeleteUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string deleterId = 1;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getDeleterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setDeleterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string userStoryId = 3;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getUserstoryid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setUserstoryid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string cookie = 4;\n * @return {string}\n */\nproto.userstory.DeleteUserStoryReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.DeleteUserStoryReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.GetAllUserStoryReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.GetAllUserStoryReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.GetAllUserStoryReq.displayName = 'proto.userstory.GetAllUserStoryReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.GetAllUserStoryReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.GetAllUserStoryReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    getterid: msg.getGetterid(),\n    projectid: msg.getProjectid(),\n    cookie: msg.getCookie()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.GetAllUserStoryReq}\n */\nproto.userstory.GetAllUserStoryReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.GetAllUserStoryReq;\n  return proto.userstory.GetAllUserStoryReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.GetAllUserStoryReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.GetAllUserStoryReq}\n */\nproto.userstory.GetAllUserStoryReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setGetterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCookie(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.GetAllUserStoryReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.GetAllUserStoryReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getGetterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getCookie();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.GetAllUserStoryReq} The clone.\n */\nproto.userstory.GetAllUserStoryReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.GetAllUserStoryReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string getterId = 1;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getGetterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setGetterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string cookie = 3;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryReq.prototype.getCookie = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryReq.prototype.setCookie = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.userstory.GetAllUserStoryRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.userstory.GetAllUserStoryRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.userstory.GetAllUserStoryRes.displayName = 'proto.userstory.GetAllUserStoryRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.userstory.GetAllUserStoryRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.userstory.GetAllUserStoryRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.userstory.GetAllUserStoryRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    status: msg.getStatus(),\n    error: msg.getError()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.userstory.GetAllUserStoryRes}\n */\nproto.userstory.GetAllUserStoryRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.userstory.GetAllUserStoryRes;\n  return proto.userstory.GetAllUserStoryRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.userstory.GetAllUserStoryRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.userstory.GetAllUserStoryRes}\n */\nproto.userstory.GetAllUserStoryRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.userstory.GetAllUserStoryRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.userstory.GetAllUserStoryRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.userstory.GetAllUserStoryRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.userstory.GetAllUserStoryRes} The clone.\n */\nproto.userstory.GetAllUserStoryRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.userstory.GetAllUserStoryRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string role = 1;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string want = 2;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string so = 3;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string status = 4;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string error = 5;\n * @return {string}\n */\nproto.userstory.GetAllUserStoryRes.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.userstory.GetAllUserStoryRes.prototype.setError = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\ngoog.object.extend(exports, proto.userstory);\n","import React, { Component } from 'react';\r\nimport { Card, Badge, Button, Col, Container, Input, InputGroup, \r\n  InputGroupAddon, InputGroupText, Row, Table, Pagination, PaginationItem, PaginationLink, \r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  ModalFooter,\r\n\r\n} from 'reactstrap';\r\nimport cookie from 'react-cookies';\r\nimport {getProject} from '../../../../../actions'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Link } from 'react-router-dom';\r\nconst proto = {};\r\nproto.userstory = require('./../../../../../gRPC/userstory/userstory_grpc_web_pb');\r\nclass Detail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleAdd = this.toggleAdd.bind(this);\r\n    this.toggleEdit = this.toggleEdit.bind(this);\r\n\r\n    this.onTextboxChangename = this.onTextboxChangename.bind(this);\r\n    this.onTextboxChangeas = this.onTextboxChangeas.bind(this);\r\n    this.onTextboxChangewant = this.onTextboxChangewant.bind(this);\r\n    this.onTextboxChangeso = this.onTextboxChangeso.bind(this);\r\n\r\n    this.state = {\r\n      data: [ \r\n              {\r\n                \"id\":'1',\r\n                \"name\":\"a\",\r\n                \"as\":\"admin\",\r\n                \"want\":\"See a list of all members and visitors\",\r\n                \"so\":\"I can monitor site visits\",\r\n              },\r\n              {\r\n                \"id\":'2',\r\n                \"name\":\"a\",\r\n                \"as\":\"admin\",\r\n                \"want\":\"Add new categories\",\r\n                \"so\":\"I can allow members to create engaging content\",\r\n              },\r\n              {\r\n                \"id\":'3',\r\n                \"name\":\"a\",\r\n                \"as\":\"admin\",\r\n                \"want\":\"Add new security groups\",\r\n                \"so\":\"Security levels are approriate\",\r\n              },\r\n              {\r\n                \"id\":'4',\r\n                \"name\":\"a\",\r\n                \"as\":\"admin\",\r\n                \"want\":\"Delete comment\",\r\n                \"so\":\"Offensive content is removed\",\r\n              },\r\n              {\r\n                \"id\":5,\r\n                \"name\":\"a\",\r\n                \"as\":\"admin\",\r\n                \"want\":\"Add new key words\",\r\n                \"so\":\"Content is easy to groups and search for\",\r\n              },\r\n              {\r\n                \"id\":'6',\r\n                \"name\":\"a\",\r\n                \"as\":\"member\",\r\n                \"want\":\"Update my account detail\",\r\n                \"so\":\"I can be contacted by admin\",\r\n              }\r\n            ],\r\n      requesterId:'',\r\n      projectId:'',\r\n      cookie:'',\r\n      actionStatus:'',              //success or show error when action add delete update\r\n      \r\n      modalAdd: false,\r\n      modalEdit: false,\r\n      modalActionStatus: false,     \r\n      \r\n      //add\r\n      name:'',\r\n      as:'',\r\n      want:'',\r\n      so:'',\r\n      \r\n      //update\r\n      userstoryIdUpdate:'',    \r\n      nameUpdate:'',\r\n      asUpdate:'',\r\n      wantUpdate:'',\r\n      soUpdate:'',\r\n      \r\n      //delete\r\n      userstoryIdDelete:'',\r\n      }\r\n    };\r\n  \r\n  resetAddForm=()=>{\r\n      this.setState({\r\n        ...this.state,\r\n        name:'',\r\n        as:'',\r\n        want:'',\r\n        so:'',\r\n      });\r\n  }\r\n  toggleAdd() {\r\n    {this.resetAddForm()};\r\n    this.setState(prevState => ({\r\n      modalAdd: !prevState.modalAdd\r\n    }));\r\n  }\r\n  toggleEdit() {\r\n    //{this.resetDataForm()};\r\n    this.setState(prevState => ({\r\n      modalEdit: !prevState.modalEdit\r\n    }));\r\n  }\r\n  toggleActionStatus=()=> {\r\n    this.setState(prevState => ({\r\n      modalActionStatus: !prevState.modalActionStatus\r\n    }));\r\n  }\r\n\r\n  onTextboxChangename(event) {\r\n    this.setState({\r\n      name: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeas(event) {\r\n    this.setState({\r\n      as: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangewant(event) {\r\n    this.setState({\r\n      want: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeso(event) {\r\n    this.setState({\r\n      so: event.target.value,\r\n    });\r\n  }\r\n\r\n  onTextboxChangenameUpdate=(event)=> {\r\n    this.setState({\r\n      nameUpdate: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeasUpdate=(event)=> {\r\n    this.setState({\r\n     asUpdate: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangewantUpdate=(event)=> {\r\n    this.setState({\r\n      wantUpdate: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangesoUpdate=(event)=> {\r\n    this.setState({\r\n      soUpdate: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeUserStoryIdUpdate=(event)=> {\r\n    this.setState({\r\n      userstoryIdUpdate: event.target.value,\r\n    });\r\n  }\r\n\r\n  onTextboxChangeUserStoryIdDelete=(event)=> {\r\n    this.setState({\r\n      userstoryIdDelete: event.target.value,\r\n    });\r\n  }\r\n  onGetUpdate=(userstoryIdUpdate,name,role,want,so)=>{\r\n    this.setState({\r\n      rouserstoryIdUpdate:userstoryIdUpdate,\r\n      asUpdate:role,\r\n      wantUpdate:want,\r\n      soUpdate:so,\r\n      nameUpdate:name\r\n    });\r\n  }\r\n  \r\n  handleAdd= () => {\r\n    console.log(\"handleAdd\")\r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    //some data of request (get that from frontend)\r\n    console.log(userstoryService)\r\n    \r\n    var metadata = {};\r\n    //make a request to server\r\n\r\n    var AddNewUserStoryReq= new proto.userstory.AddNewUserStoryReq();\r\n    //string name=7;\r\n    // string adderId = 1;\r\n    // string projectId = 2;\r\n    // string role = 3;\r\n    // string want = 4;\r\n    // string so = 5;\r\n    // string cookie = 6;\r\n    AddNewUserStoryReq.setName(this.state.name);\r\n    AddNewUserStoryReq.setAdderid(cookie.load(\"userId\"));\r\n    AddNewUserStoryReq.setProjectid(this.props.projectId);\r\n    AddNewUserStoryReq.setRole(this.state.as);\r\n    AddNewUserStoryReq.setWant(this.state.want);\r\n    AddNewUserStoryReq.setSo(this.state.so);\r\n    AddNewUserStoryReq.setCookie(this.state.cookie);\r\n\r\n    var toto=userstoryService.addNewUserStory(AddNewUserStoryReq, metadata, (err, response) => {\r\n      console.log(\"connect\")\r\n      if (err) { //if error\r\n         console.log(err);\r\n         console.log(\"error\")\r\n      } else { //if success\r\n              //get response\r\n              console.log(\"response\")\r\n              console.log(response);\r\n              if(response.getStatus()==\"SUCCESS\")\r\n              {\r\n                this.setState(prevState => ({\r\n                  modalAdd: !prevState.modalAdd,\r\n                  }));\r\n                this.setState(prevState=>({data:[...prevState.data,{id:response.getId(),name:this.state.name,as:this.state.as,want:this.state.want,so:this.state.so}]}));\r\n                            \r\n                this.setState({\r\n                  name:'',\r\n                  as:'',\r\n                  want:'',\r\n                  so:'',\r\n                  modalActionStatus:true,\r\n                  actionStatus:'SUCCESS'\r\n                });\r\n              }else{\r\n                this.setState({\r\n                  modalActionStatus:true,\r\n                  actionStatus:'FALSE',\r\n                });\r\n              }\r\n              \r\n            }\r\n          });\r\n        \r\n}\r\n  handleDelete = (id) => {\r\n    console.log(\"handleDelete\")\r\n\r\n    \r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    //some data of request (get that from frontend)\r\n    console.log(userstoryService)\r\n    \r\n    var metadata = {};\r\n    //make a request to server\r\n\r\n    var DeleteUserStoryReq= new proto.userstory.DeleteUserStoryReq();\r\n  //     string deleterId = 1;\r\n  //     string projectId = 2;\r\n  //     string userstoryId = 3;\r\n  //     string cookie = 4;\r\n    DeleteUserStoryReq.setDeleterid(this.state.requesterId);\r\n    DeleteUserStoryReq.setProjectid(this.props.projectId);\r\n    DeleteUserStoryReq.setUserstoryid(this.state.userstoryIdDelete);\r\n    DeleteUserStoryReq.setCookie(this.state.cookie);\r\n\r\n    var toto=userstoryService.deleteUserStory(DeleteUserStoryReq, metadata, (err, response) => {\r\n      console.log(\"connect\")\r\n      if (err) { //if error\r\n         console.log(err);\r\n         console.log(\"error\")\r\n         console.log(response);\r\n      } else { //if success\r\n              //get response\r\n              console.log(\"response\")\r\n              console.log(response);\r\n              if(response.getStatus()==\"SUCCESS\")\r\n              {\r\n               this.setState({\r\n                 actionStatus:\"SUCCESS\",\r\n                 modalActionStatus:true,\r\n               });\r\n               this.setState(prevState=>({data:[...prevState.data.filter(function(e) { return e.id !== id; })]}));\r\n              }else{\r\n                   this.setState({\r\n                     actionStatus:\"FALSE\",\r\n                   });\r\n                   this.setState(prevState => ({\r\n                     modalActionStatus:!prevState.modalActionStatus,\r\n                     }));\r\n                 }\r\n              }\r\n            \r\n          });\r\n         \r\n  };\r\n  handleUpdate = () => {\r\n    console.log(\"handleUpdate\")\r\n\r\n    const userstoryService = new proto.userstory.UserStoryClient('https://www.overlead.co');\r\n    //some data of request (get that from frontend)\r\n    console.log(userstoryService)\r\n    var metadata = {};\r\n    //make a request to server\r\n\r\n    var UpdateUserStoryReq= new proto.userstory.UpdateUserStoryReq();\r\n//     string updaterId = 1;\r\n// \tstring projectId = 2;\r\n// \tstring userstoryId = 3;\r\n// \tstring role = 4;\r\n// \tstring want = 5;\r\n// \tstring so = 6;\r\n// string cookie = 7;\r\n    UpdateUserStoryReq.setUpdaterid(this.state.requesterId);\r\n    UpdateUserStoryReq.setProjectid(this.props.projectId);\r\n    UpdateUserStoryReq.setUserstoryid(this.state.userstoryIdUpdate);\r\n    UpdateUserStoryReq.setRole(this.state.asUpdate);\r\n    UpdateUserStoryReq.setWant(this.state.wantUpdate);\r\n    UpdateUserStoryReq.setSo(this.state.soUpdate);\r\n    UpdateUserStoryReq.setCookie(this.state.cookie);\r\n\r\n    var toto=userstoryService.updateUserStory(UpdateUserStoryReq, metadata, (err, response) => {\r\n      console.log(\"connect\")\r\n      if (err) { //if error\r\n         console.log(err);\r\n         console.log(\"error\")\r\n      } else { //if success\r\n              //get response\r\n              console.log(\"response\")\r\n              console.log(response);\r\n              console.log(response.getStatus());\r\n              if(response.getStatus()==\"SUCCESS\")\r\n              {\r\n                this.setState({\r\n                  actionStatus:\"SUCCESS\",\r\n                });\r\n                this.setState(prevState => ({\r\n                  modalEdit: !prevState.modalEdit,\r\n                  modalActionStatus:!prevState.modalActionStatus,\r\n                  }));\r\n                  const tmpdata = this.state.data.map(p =>\r\n                    p.id === this.state.userstoryIdUpdate\r\n                      ? { ...p, name: this.state.nameUpdate,as:this.state.asUpdate,\r\n                        want:this.state.wantUpdate,so:this.state.so}\r\n                      : p\r\n                  );\r\n                 \r\n                  this.setState({\r\n                    data:tmpdata,\r\n                  });\r\n                 \r\n                  \r\n              }else{\r\n                this.setState({\r\n                  actionStatus:\"FALSE\",\r\n                });\r\n                this.setState(prevState => ({\r\n                  modalEdit: !prevState.modalEdit,\r\n                  modalActionStatus:!prevState.modalActionStatus,\r\n                  }));\r\n              }\r\n            }\r\n          });\r\n          console.log(toto)\r\n  };\r\n\r\n  // componentDidMount(){\r\n  //   this.resetAddForm();\r\n  // }\r\n  render() {\r\n     const {\r\n      data,\r\n      name,\r\n      as,\r\n      want,\r\n      so,\r\n    } = this.state;\r\n    let that=this;\r\n    return (\r\n      <Row>\r\n        <Modal size=\"sm\"  isOpen={that.state.modalActionStatus} toggle={that.toggleActionStatus} className={that.props.className}>\r\n          <ModalBody>\r\n            <center><h4>{that.state.actionStatus}</h4></center>\r\n          </ModalBody>\r\n          </Modal>\r\n          <Col>       \r\n              <Row>       \r\n                          <Col xs=\"2\" md=\"2\">\r\n                            <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"Search\" /> \r\n                          </Col> \r\n                          \r\n                          <Col xs=\"0\" md=\"0\">\r\n                            <Button type=\"submit\" size=\"sm\" color=\"success\"><i class=\"fa fa-search\"></i></Button>\r\n                          </Col> \r\n              </Row>\r\n              \r\n              <Card>\r\n              <div class=\"table-responsive\">   \r\n                  <table class=\"table table-lg\">\r\n                    <thead class=\"thead\">\r\n                    <tr class=\"bg-primary\">\r\n                      <th>Name<i class=\"fa fa-sort\"></i></th>\r\n                      <th>As a...<i class=\"fa fa-sort\"></i></th>\r\n                      <th>I want to be able to... <i class=\"fa fa-sort\"></i></th>\r\n                      <th>So that... <i class=\"fa fa-sort\"></i></th>\r\n                      <th>\r\n                        <div>\r\n                            <Button color=\"primary\" size=\"sm\" className=\"mt-3\" onClick={that.toggleAdd}><i class=\"fa fa-plus-square\"></i>{this.props.buttonLabel}</Button>\r\n                            <Modal size=\"lg\" isOpen={that.state.modalAdd} toggle={that.toggleAdd}>\r\n                              <ModalHeader toggle={that.toggleAdd}>UserStory</ModalHeader>\r\n                              <ModalBody>\r\n                                  <Form className=\"form-horizontal\">    \r\n                                      <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">Name</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"text\" id=\"name\" name=\"name\" placeholder=\"name\" value={name} onChange={that.onTextboxChangename}/>\r\n                                          \r\n                                        </Col>\r\n                                      </FormGroup>           \r\n                                      <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">As a...</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"text\" id=\"as\" name=\"as\" placeholder=\"As a...\" value={as} onChange={that.onTextboxChangeas}/>\r\n                                          \r\n                                        </Col>\r\n                                      </FormGroup>\r\n                                       <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">I want to be able to...</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"text\" id=\"want\" name=\"want\" placeholder=\"I want to be able to...\" value={want} onChange={that.onTextboxChangewant}/>\r\n                                          \r\n                                        </Col>\r\n                                      </FormGroup>   \r\n                                       <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"textarea-input\">So that...</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"textarea\" name=\"so\" id=\"so\" rows=\"9\"\r\n                                                 placeholder=\"Content...\"  value={so} onChange={that.onTextboxChangeso}/>\r\n                                        </Col>\r\n                                      </FormGroup>                     \r\n                                  </Form>                           \r\n                              </ModalBody>\r\n                              <ModalFooter>\r\n                                <Button color=\"primary\" onClick={that.handleAdd}>Submit</Button>\r\n                                <Button color=\"secondary\" onClick={that.toggleAdd}>Cancel</Button>\r\n                              </ModalFooter>\r\n                            </Modal>\r\n                        </div>\r\n                      </th>\r\n                    </tr>\r\n                    </thead>\r\n                   <tbody>{data.map(function(item, key) {\r\n                 return (\r\n                    <tr key = {key}>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.as}</td>\r\n                        <td>{item.want}</td>\r\n                        <td>{item.so}</td>\r\n                        <td>\r\n                         \r\n                          <Button color=\"warning\" size=\"sm\" onClick={(event)=>{that.toggleEdit();that.onGetUpdate(item.id,item.name,item.as,item.want,item.so)}}><i class=\"fa fa-edit\"></i></Button>\r\n                          <Modal size=\"lg\" isOpen={that.state.modalEdit} toggle={that.toggleEdit} >\r\n                              <ModalHeader toggle={that.toggleEdit}>UserStory</ModalHeader>\r\n                              <ModalBody>\r\n                              <Form className=\"form-horizontal\">    \r\n                                      <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">Name</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"text\" id=\"name\" name=\"name\" placeholder=\"name\" value={item.name} onChange={that.onTextboxChangename}/>\r\n                                          \r\n                                        </Col>\r\n                                      </FormGroup>           \r\n                                      <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">As a...</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"text\" id=\"as\" name=\"as\" placeholder=\"As a...\" value={item.role} onChange={that.onTextboxChangeas}/>\r\n                                          \r\n                                        </Col>\r\n                                      </FormGroup>\r\n                                       <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"text-input\">I want to be able to...</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"text\" id=\"want\" name=\"want\" placeholder=\"I want to be able to...\" value={item.want} onChange={that.onTextboxChangewant}/>\r\n                                          \r\n                                        </Col>\r\n                                      </FormGroup>   \r\n                                       <FormGroup row>\r\n                                        <Col md=\"3\">\r\n                                          <Label htmlFor=\"textarea-input\">So that...</Label>\r\n                                        </Col>\r\n                                        <Col xs=\"12\" md=\"9\">\r\n                                          <Input type=\"textarea\" name=\"so\" id=\"so\" rows=\"9\"\r\n                                                 placeholder=\"Content...\"  value={item.so} onChange={that.onTextboxChangeso}/>\r\n                                        </Col>\r\n                                      </FormGroup>                     \r\n                                  </Form>                                       \r\n                              </ModalBody>\r\n                              <ModalFooter>\r\n                                <Button color=\"primary\" onClick={that.handleUpdate}>Submit</Button>{' '}\r\n                                <Button color=\"secondary\" onClick={that.toggleEdit}>Cancel</Button>\r\n                              </ModalFooter>\r\n                          </Modal>\r\n                          \r\n                          <Button type=\"submit\" size=\"sm\" color=\"danger\" onClick={(event) => {  that.handleDelete(item.id)}}><i class=\"fa fa-trash\"></i></Button>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n               \r\n               })}</tbody>\r\n                  </table>\r\n              </div>\r\n            </  Card>  \r\n          </Col>\r\n        </Row>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { changeStatusProject } = state\r\n  const { projectId, projectName } = changeStatusProject\r\n  return {\r\n    projectId, projectName,\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Detail);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;"],"sourceRoot":""}