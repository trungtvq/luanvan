{"version":3,"sources":["../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/inheritsLoose.js","gRPC/sprintbacklog/sprintbacklog_grpc_web_pb.js","gRPC/sprintbacklog/sprintbacklog_pb.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/defineProperty.js","gRPC/teamtask/teamtask_grpc_web_pb.js","gRPC/teamtask/teamtask_pb.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","views/Workspace/Member/TeamTask/TeamTask.js"],"names":["module","exports","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","subClass","superClass","prototype","create","constructor","__proto__","grpc","web","require","proto","sprintbacklog","SprintBacklogClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","credentials_","options_","SprintBacklogPromiseClient","methodInfo_SprintBacklog_deleteSprintBacklog","AbstractClientBase","MethodInfo","SprintBacklogRes","request","serializeBinary","deserializeBinary","deleteSprintBacklog","metadata","callback","rpcCall","unaryCall","methodInfo_SprintBacklog_getAllSprintBacklog","GetAllSprintBacklogRes","getAllSprintBacklog","serverStreaming","jspb","goog","global","Function","exportSymbol","DeleteSprintBacklogReq","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","obj","requesterid","getRequesterid","projectid","getProjectid","backlogid","getBacklogid","accesstoken","getAccesstoken","teamid","getTeamid","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setRequesterid","setProjectid","setBacklogid","setAccesstoken","setTeamid","skipField","serializeBinaryToWriter","message","writer","BinaryWriter","getResultBuffer","f","undefined","writeString","cloneMessage","getFieldProto3","setField","status","getStatus","setStatus","GetAllSprintBacklogReq","title","getTitle","role","getRole","want","getWant","so","getSo","statusbacklog","getStatusbacklog","priority","getPriority","estimation","getEstimation","sprintid","getSprintid","start","getStart","deadline","getDeadline","setTitle","setRole","setWant","setSo","setStatusbacklog","setPriority","setEstimation","setSprintid","setStart","setDeadline","object","extend","_extends","assign","arguments","hasOwnProperty","call","apply","defineProperty","enumerable","configurable","writable","teamtask","TeamTaskClient","TeamTaskPromiseClient","methodInfo_TeamTask_addNewTeamTask","TeamTaskRes","addNewTeamTask","methodInfo_TeamTask_updateTeamTask","updateTeamTask","methodInfo_TeamTask_registerTeamTask","registerTeamTask","methodInfo_TeamTask_cancelTeamTask","cancelTeamTask","methodInfo_TeamTask_getAllTeamTask","GetAllTeamTaskRes","getAllTeamTask","AddNewTeamTaskReq","description","getDescription","assigneearray","getAssigneearray","comment","getComment","review","getReview","sprintbacklogid","getSprintbacklogid","setDescription","setAssigneearray","setComment","setReview","setSprintbacklogid","teamtaskid","getTeamtaskid","setTeamtaskid","UpdateTeamTaskReq","RegisterTeamTaskReq","assigner","getAssigner","setAssigner","CancelTeamTaskReq","GetAllTeamTaskReq","statusteamtask","getStatusteamtask","setStatusteamtask","self","ReferenceError","TeamTask","props","_this$state","_this","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","toastId","notify","toast","autoClose","success","update","render","type","TYPE","SUCCESS","failed","ERROR","onChangeStartDate","date","setState","startDate","onChangeEndDate","endDate","toggle","collapse","state","toggleAdd","prevState","modalAdd","toggleAddOpen","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","assignee","updateId","toggleEdit","modalEdit","toggleEditOpen","event","currentTarget","dataset","id","sprintBacklog","onTextboxChangeTitle","onTextboxChangeDescription","onTextboxChangePriority","onTextboxChangeSprintBacklog","onTextboxChangeAssignee","onTextboxChangeComment","onTextboxChangeReview","onTextboxChangeStatus","loadAllSprint","sprintbacklogService","getFromStorage","sprints","response","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","on","arr","split","end","parseInt","push","sprint","code","console","log","setInStorage","loadAllTask","setDate","getDate","d","getMinutes","getHours","getMonth","getFullYear","teamtaskService","that","str","slice","data","concat","C_Users_Trung_Desktop_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","handleAdd","handleDelete","err","newData","filter","p","handleAssignToMe","map","handleUpdate","fadeIn","Date","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","xs","md","reactstrap__WEBPACK_IMPORTED_MODULE_11__","name","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_12__","size","color","class","reactstrap__WEBPACK_IMPORTED_MODULE_13__","className","onClick","buttonLabel","reactstrap__WEBPACK_IMPORTED_MODULE_14__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","row","reactstrap__WEBPACK_IMPORTED_MODULE_19__","htmlFor","onChange","rows","disable","react_datepicker__WEBPACK_IMPORTED_MODULE_22__","selected","timeInputLabel","dateFormat","showTimeInput","mem","username","reactstrap__WEBPACK_IMPORTED_MODULE_20__","item","data-id","data-title","data-description","data-priority","data-start","data-deadline","data-assignee","data-comment","data-status","data-review","data-sprintbacklog","S","action","Component"],"mappings":"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","file":"static/js/27.a3949f9d.chunk.js","sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;","/**\n * @fileoverview gRPC-Web generated client stub for sprintbacklog\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.sprintbacklog = require('./sprintbacklog_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprintbacklog.SprintBacklogClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.sprintbacklog.SprintBacklogPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.DeleteSprintBacklogReq,\n *   !proto.sprintbacklog.SprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_deleteSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.SprintBacklogRes,\n  /** @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.SprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.sprintbacklog.SprintBacklogRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.SprintBacklogRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.deleteSprintBacklog =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/deleteSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_deleteSprintBacklog,\n      callback);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.sprintbacklog.SprintBacklogRes>}\n *     A native promise that resolves to the response\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.deleteSprintBacklog =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/deleteSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_deleteSprintBacklog);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.sprintbacklog.GetAllSprintBacklogReq,\n *   !proto.sprintbacklog.GetAllSprintBacklogRes>}\n */\nconst methodInfo_SprintBacklog_getAllSprintBacklog = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.sprintbacklog.GetAllSprintBacklogRes,\n  /** @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.GetAllSprintBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogClient.prototype.getAllSprintBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/getAllSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_getAllSprintBacklog);\n};\n\n\n/**\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.sprintbacklog.GetAllSprintBacklogRes>}\n *     The XHR Node Readable Stream\n */\nproto.sprintbacklog.SprintBacklogPromiseClient.prototype.getAllSprintBacklog =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/sprintbacklog.SprintBacklog/getAllSprintBacklog',\n      request,\n      metadata || {},\n      methodInfo_SprintBacklog_getAllSprintBacklog);\n};\n\n\nmodule.exports = proto.sprintbacklog;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.sprintbacklog.DeleteSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.sprintbacklog.GetAllSprintBacklogReq', null, global);\ngoog.exportSymbol('proto.sprintbacklog.GetAllSprintBacklogRes', null, global);\ngoog.exportSymbol('proto.sprintbacklog.SprintBacklogRes', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.DeleteSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.DeleteSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.DeleteSprintBacklogReq.displayName = 'proto.sprintbacklog.DeleteSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.DeleteSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    backlogid: msg.getBacklogid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.DeleteSprintBacklogReq;\n  return proto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.DeleteSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.DeleteSprintBacklogReq} The clone.\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.DeleteSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string teamId = 5;\n * @return {string}\n */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.DeleteSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.SprintBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.SprintBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.SprintBacklogRes.displayName = 'proto.sprintbacklog.SprintBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.SprintBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.SprintBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.SprintBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    backlogid: msg.getBacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.SprintBacklogRes}\n */\nproto.sprintbacklog.SprintBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.SprintBacklogRes;\n  return proto.sprintbacklog.SprintBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.SprintBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.SprintBacklogRes}\n */\nproto.sprintbacklog.SprintBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.SprintBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.SprintBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.SprintBacklogRes} The clone.\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.SprintBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string backlogId = 3;\n * @return {string}\n */\nproto.sprintbacklog.SprintBacklogRes.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.SprintBacklogRes.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.GetAllSprintBacklogReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.GetAllSprintBacklogReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.GetAllSprintBacklogReq.displayName = 'proto.sprintbacklog.GetAllSprintBacklogReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.GetAllSprintBacklogReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.GetAllSprintBacklogReq;\n  return proto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogReq} The clone.\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.GetAllSprintBacklogReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string teamId = 4;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.sprintbacklog.GetAllSprintBacklogRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.sprintbacklog.GetAllSprintBacklogRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.sprintbacklog.GetAllSprintBacklogRes.displayName = 'proto.sprintbacklog.GetAllSprintBacklogRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.sprintbacklog.GetAllSprintBacklogRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    title: msg.getTitle(),\n    backlogid: msg.getBacklogid(),\n    role: msg.getRole(),\n    want: msg.getWant(),\n    so: msg.getSo(),\n    statusbacklog: msg.getStatusbacklog(),\n    priority: msg.getPriority(),\n    estimation: msg.getEstimation(),\n    sprintid: msg.getSprintid(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    status: msg.getStatus()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.sprintbacklog.GetAllSprintBacklogRes;\n  return proto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBacklogid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setWant(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSo(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusbacklog(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEstimation(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.sprintbacklog.GetAllSprintBacklogRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getBacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getWant();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getSo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStatusbacklog();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getEstimation();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.sprintbacklog.GetAllSprintBacklogRes} The clone.\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.sprintbacklog.GetAllSprintBacklogRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string title = 1;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string backlogId = 2;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getBacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setBacklogid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string role = 3;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setRole = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string want = 4;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getWant = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setWant = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string so = 5;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string statusBacklog = 11;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStatusbacklog = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStatusbacklog = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string priority = 6;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string estimation = 7;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getEstimation = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setEstimation = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string sprintId = 8;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string start = 12;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string deadline = 10;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string status = 9;\n * @return {string}\n */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.sprintbacklog.GetAllSprintBacklogRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\ngoog.object.extend(exports, proto.sprintbacklog);\n","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","/**\n * @fileoverview gRPC-Web generated client stub for teamtask\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.teamtask = require('./teamtask_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.teamtask.TeamTaskClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.teamtask.TeamTaskPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n  /**\n   * @private @const {?Object} The credentials to be used to connect\n   *    to the server\n   */\n  this.credentials_ = credentials;\n\n  /**\n   * @private @const {?Object} Options for the client\n   */\n  this.options_ = options;\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.AddNewTeamTaskReq,\n *   !proto.teamtask.TeamTaskRes>}\n */\nconst methodInfo_TeamTask_addNewTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamTaskRes,\n  /** @param {!proto.teamtask.AddNewTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.AddNewTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.addNewTeamTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.TeamTask/addNewTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_addNewTeamTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.AddNewTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.addNewTeamTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.TeamTask/addNewTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_addNewTeamTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.UpdateTeamTaskReq,\n *   !proto.teamtask.TeamTaskRes>}\n */\nconst methodInfo_TeamTask_updateTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamTaskRes,\n  /** @param {!proto.teamtask.UpdateTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.UpdateTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.updateTeamTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.TeamTask/updateTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_updateTeamTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.UpdateTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.updateTeamTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.TeamTask/updateTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_updateTeamTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.RegisterTeamTaskReq,\n *   !proto.teamtask.TeamTaskRes>}\n */\nconst methodInfo_TeamTask_registerTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamTaskRes,\n  /** @param {!proto.teamtask.RegisterTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.RegisterTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.registerTeamTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.TeamTask/registerTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_registerTeamTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.RegisterTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.registerTeamTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.TeamTask/registerTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_registerTeamTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.CancelTeamTaskReq,\n *   !proto.teamtask.TeamTaskRes>}\n */\nconst methodInfo_TeamTask_cancelTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.TeamTaskRes,\n  /** @param {!proto.teamtask.CancelTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.TeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.CancelTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.teamtask.TeamTaskRes)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.TeamTaskRes>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.cancelTeamTask =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/teamtask.TeamTask/cancelTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_cancelTeamTask,\n      callback);\n};\n\n\n/**\n * @param {!proto.teamtask.CancelTeamTaskReq} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.teamtask.TeamTaskRes>}\n *     A native promise that resolves to the response\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.cancelTeamTask =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/teamtask.TeamTask/cancelTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_cancelTeamTask);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.teamtask.GetAllTeamTaskReq,\n *   !proto.teamtask.GetAllTeamTaskRes>}\n */\nconst methodInfo_TeamTask_getAllTeamTask = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.teamtask.GetAllTeamTaskRes,\n  /** @param {!proto.teamtask.GetAllTeamTaskReq} request */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.teamtask.GetAllTeamTaskRes.deserializeBinary\n);\n\n\n/**\n * @param {!proto.teamtask.GetAllTeamTaskReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.GetAllTeamTaskRes>}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskClient.prototype.getAllTeamTask =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/teamtask.TeamTask/getAllTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_getAllTeamTask);\n};\n\n\n/**\n * @param {!proto.teamtask.GetAllTeamTaskReq} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.teamtask.GetAllTeamTaskRes>}\n *     The XHR Node Readable Stream\n */\nproto.teamtask.TeamTaskPromiseClient.prototype.getAllTeamTask =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/teamtask.TeamTask/getAllTeamTask',\n      request,\n      metadata || {},\n      methodInfo_TeamTask_getAllTeamTask);\n};\n\n\nmodule.exports = proto.teamtask;\n\n","/**\n * @fileoverview\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.teamtask.AddNewTeamTaskReq', null, global);\ngoog.exportSymbol('proto.teamtask.CancelTeamTaskReq', null, global);\ngoog.exportSymbol('proto.teamtask.GetAllTeamTaskReq', null, global);\ngoog.exportSymbol('proto.teamtask.GetAllTeamTaskRes', null, global);\ngoog.exportSymbol('proto.teamtask.RegisterTeamTaskReq', null, global);\ngoog.exportSymbol('proto.teamtask.TeamTaskRes', null, global);\ngoog.exportSymbol('proto.teamtask.UpdateTeamTaskReq', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.AddNewTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.AddNewTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.AddNewTeamTaskReq.displayName = 'proto.teamtask.AddNewTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.AddNewTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.AddNewTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.AddNewTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    title: msg.getTitle(),\n    description: msg.getDescription(),\n    priority: msg.getPriority(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    assigneearray: msg.getAssigneearray(),\n    comment: msg.getComment(),\n    status: msg.getStatus(),\n    review: msg.getReview(),\n    accesstoken: msg.getAccesstoken(),\n    sprintid: msg.getSprintid(),\n    teamid: msg.getTeamid(),\n    sprintbacklogid: msg.getSprintbacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.AddNewTeamTaskReq}\n */\nproto.teamtask.AddNewTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.AddNewTeamTaskReq;\n  return proto.teamtask.AddNewTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.AddNewTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.AddNewTeamTaskReq}\n */\nproto.teamtask.AddNewTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssigneearray(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setComment(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReview(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 15:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintbacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.AddNewTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.AddNewTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getAssigneearray();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getComment();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getReview();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getSprintbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      15,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.AddNewTeamTaskReq} The clone.\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.AddNewTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string title = 3;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string description = 4;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string priority = 5;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string start = 6;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string deadline = 7;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string assigneeArray = 8;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getAssigneearray = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setAssigneearray = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string comment = 9;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getComment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setComment = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string status = 10;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string review = 11;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getReview = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setReview = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string accessToken = 12;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string sprintId = 14;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 14, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string sprintBacklogId = 15;\n * @return {string}\n */\nproto.teamtask.AddNewTeamTaskReq.prototype.getSprintbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 15, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.AddNewTeamTaskReq.prototype.setSprintbacklogid = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.TeamTaskRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.TeamTaskRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.TeamTaskRes.displayName = 'proto.teamtask.TeamTaskRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.TeamTaskRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.TeamTaskRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.TeamTaskRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.TeamTaskRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: msg.getStatus(),\n    teamtaskid: msg.getTeamtaskid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.TeamTaskRes}\n */\nproto.teamtask.TeamTaskRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.TeamTaskRes;\n  return proto.teamtask.TeamTaskRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.TeamTaskRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.TeamTaskRes}\n */\nproto.teamtask.TeamTaskRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.TeamTaskRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.TeamTaskRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.TeamTaskRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.TeamTaskRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.TeamTaskRes} The clone.\n */\nproto.teamtask.TeamTaskRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.TeamTaskRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string status = 1;\n * @return {string}\n */\nproto.teamtask.TeamTaskRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamTaskRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string teamTaskId = 2;\n * @return {string}\n */\nproto.teamtask.TeamTaskRes.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.TeamTaskRes.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.UpdateTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.UpdateTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.UpdateTeamTaskReq.displayName = 'proto.teamtask.UpdateTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.UpdateTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.UpdateTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.UpdateTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamtaskid: msg.getTeamtaskid(),\n    title: msg.getTitle(),\n    description: msg.getDescription(),\n    priority: msg.getPriority(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    assigneearray: msg.getAssigneearray(),\n    comment: msg.getComment(),\n    status: msg.getStatus(),\n    review: msg.getReview(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid(),\n    sprintid: msg.getSprintid(),\n    sprintbacklogid: msg.getSprintbacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.UpdateTeamTaskReq}\n */\nproto.teamtask.UpdateTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.UpdateTeamTaskReq;\n  return proto.teamtask.UpdateTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.UpdateTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.UpdateTeamTaskReq}\n */\nproto.teamtask.UpdateTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssigneearray(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setComment(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReview(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 15:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    case 16:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintbacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.UpdateTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.UpdateTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getAssigneearray();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getComment();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = this.getReview();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      15,\n      f\n    );\n  }\n  f = this.getSprintbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      16,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.UpdateTeamTaskReq} The clone.\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.UpdateTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamTaskId = 3;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string title = 4;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string description = 5;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string priority = 6;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string start = 7;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string deadline = 8;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string assigneeArray = 9;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getAssigneearray = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setAssigneearray = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string comment = 10;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getComment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setComment = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string status = 11;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 11, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string review = 12;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getReview = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setReview = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string accessToken = 13;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string teamId = 14;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 14, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * optional string sprintId = 15;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 15, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * optional string sprintBacklogId = 16;\n * @return {string}\n */\nproto.teamtask.UpdateTeamTaskReq.prototype.getSprintbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 16, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.UpdateTeamTaskReq.prototype.setSprintbacklogid = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.RegisterTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.RegisterTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.RegisterTeamTaskReq.displayName = 'proto.teamtask.RegisterTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.RegisterTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.RegisterTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.RegisterTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamtaskid: msg.getTeamtaskid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid(),\n    assigner: msg.getAssigner()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.RegisterTeamTaskReq}\n */\nproto.teamtask.RegisterTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.RegisterTeamTaskReq;\n  return proto.teamtask.RegisterTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.RegisterTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.RegisterTeamTaskReq}\n */\nproto.teamtask.RegisterTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssigner(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.RegisterTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.RegisterTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getAssigner();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.RegisterTeamTaskReq} The clone.\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.RegisterTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamTaskId = 3;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string assigner = 5;\n * @return {string}\n */\nproto.teamtask.RegisterTeamTaskReq.prototype.getAssigner = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.RegisterTeamTaskReq.prototype.setAssigner = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.CancelTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.CancelTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.CancelTeamTaskReq.displayName = 'proto.teamtask.CancelTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.CancelTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.CancelTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.CancelTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    teamtaskid: msg.getTeamtaskid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.CancelTeamTaskReq}\n */\nproto.teamtask.CancelTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.CancelTeamTaskReq;\n  return proto.teamtask.CancelTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.CancelTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.CancelTeamTaskReq}\n */\nproto.teamtask.CancelTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.CancelTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.CancelTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.CancelTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.CancelTeamTaskReq} The clone.\n */\nproto.teamtask.CancelTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.CancelTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string teamTaskId = 3;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string accessToken = 4;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.CancelTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.CancelTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.GetAllTeamTaskReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.GetAllTeamTaskReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.GetAllTeamTaskReq.displayName = 'proto.teamtask.GetAllTeamTaskReq';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.GetAllTeamTaskReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.GetAllTeamTaskReq} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamTaskReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requesterid: msg.getRequesterid(),\n    projectid: msg.getProjectid(),\n    accesstoken: msg.getAccesstoken(),\n    teamid: msg.getTeamid(),\n    sprintid: msg.getSprintid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.GetAllTeamTaskReq}\n */\nproto.teamtask.GetAllTeamTaskReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.GetAllTeamTaskReq;\n  return proto.teamtask.GetAllTeamTaskReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.GetAllTeamTaskReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.GetAllTeamTaskReq}\n */\nproto.teamtask.GetAllTeamTaskReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequesterid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProjectid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccesstoken(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.GetAllTeamTaskReq} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamTaskReq.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getRequesterid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getProjectid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getAccesstoken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getSprintid();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.GetAllTeamTaskReq} The clone.\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.GetAllTeamTaskReq} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string requesterId = 1;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getRequesterid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setRequesterid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string projectId = 2;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getProjectid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setProjectid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string accessToken = 3;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getAccesstoken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setAccesstoken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string sprintId = 4;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskReq.prototype.getSprintid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskReq.prototype.setSprintid = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.teamtask.GetAllTeamTaskRes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.teamtask.GetAllTeamTaskRes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.teamtask.GetAllTeamTaskRes.displayName = 'proto.teamtask.GetAllTeamTaskRes';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.toObject = function(opt_includeInstance) {\n  return proto.teamtask.GetAllTeamTaskRes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.teamtask.GetAllTeamTaskRes} msg The msg instance to transform.\n * @return {!Object}\n */\nproto.teamtask.GetAllTeamTaskRes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    teamtaskid: msg.getTeamtaskid(),\n    title: msg.getTitle(),\n    description: msg.getDescription(),\n    priority: msg.getPriority(),\n    start: msg.getStart(),\n    deadline: msg.getDeadline(),\n    assigneearray: msg.getAssigneearray(),\n    comment: msg.getComment(),\n    statusteamtask: msg.getStatusteamtask(),\n    status: msg.getStatus(),\n    review: msg.getReview(),\n    teamid: msg.getTeamid(),\n    sprintbacklogid: msg.getSprintbacklogid()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.teamtask.GetAllTeamTaskRes}\n */\nproto.teamtask.GetAllTeamTaskRes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.teamtask.GetAllTeamTaskRes;\n  return proto.teamtask.GetAllTeamTaskRes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.teamtask.GetAllTeamTaskRes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.teamtask.GetAllTeamTaskRes}\n */\nproto.teamtask.GetAllTeamTaskRes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamtaskid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPriority(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStart(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeadline(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAssigneearray(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setComment(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatusteamtask(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReview(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTeamid(value);\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSprintbacklogid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Class method variant: serializes the given message to binary data\n * (in protobuf wire format), writing to the given BinaryWriter.\n * @param {!proto.teamtask.GetAllTeamTaskRes} message\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamTaskRes.serializeBinaryToWriter = function(message, writer) {\n  message.serializeBinaryToWriter(writer);\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  this.serializeBinaryToWriter(writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format),\n * writing to the given BinaryWriter.\n * @param {!jspb.BinaryWriter} writer\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.serializeBinaryToWriter = function (writer) {\n  var f = undefined;\n  f = this.getTeamtaskid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = this.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = this.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = this.getPriority();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = this.getStart();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = this.getDeadline();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = this.getAssigneearray();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = this.getComment();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = this.getStatusteamtask();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = this.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = this.getReview();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = this.getTeamid();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = this.getSprintbacklogid();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n};\n\n\n/**\n * Creates a deep clone of this proto. No data is shared with the original.\n * @return {!proto.teamtask.GetAllTeamTaskRes} The clone.\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.cloneMessage = function() {\n  return /** @type {!proto.teamtask.GetAllTeamTaskRes} */ (jspb.Message.cloneMessage(this));\n};\n\n\n/**\n * optional string teamTaskId = 1;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getTeamtaskid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setTeamtaskid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string title = 2;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setTitle = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string description = 3;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string priority = 4;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getPriority = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setPriority = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string start = 5;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getStart = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setStart = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string deadline = 6;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getDeadline = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setDeadline = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string assigneeArray = 7;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getAssigneearray = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setAssigneearray = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string comment = 8;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getComment = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setComment = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string statusTeamTask = 12;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getStatusteamtask = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 12, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setStatusteamtask = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string status = 9;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string review = 10;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getReview = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setReview = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional string teamId = 13;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getTeamid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 13, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setTeamid = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string sprintBacklogId = 14;\n * @return {string}\n */\nproto.teamtask.GetAllTeamTaskRes.prototype.getSprintbacklogid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 14, \"\"));\n};\n\n\n/** @param {string} value  */\nproto.teamtask.GetAllTeamTaskRes.prototype.setSprintbacklogid = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\ngoog.object.extend(exports, proto.teamtask);\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","import React, { Component } from 'react';\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Card,\r\n  Button,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from 'reactstrap';\r\nimport cookie from 'react-cookies';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport {\r\n  getFromStorage,\r\n  setInStorage\r\n} from '../../../../service/storage'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst proto = {};\r\nproto.teamtask = require('./../../../../gRPC/teamtask/teamtask_grpc_web_pb');\r\nproto.sprintbacklog = require('./../../../../gRPC/sprintbacklog/sprintbacklog_grpc_web_pb');\r\n\r\nclass TeamTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = {\r\n      collapse: true,\r\n      fadeIn: true,\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      data: [],\r\n      modalAdd: false,\r\n      modalEdit: false,\r\n      title: '',\r\n      description: '',\r\n      priority: \"\",      \r\n      assignee: \"\",\r\n      comment: '',\r\n      status: \"\",\r\n      review: \"\",\r\n      updateId:\"\",\r\n      status:\"\",\r\n      mem:getFromStorage('members'),\r\n      sprintBacklog:\"\"\r\n\r\n    };\r\n  }\r\n  toastId = null;\r\n\r\n  notify = () => this.toastId = toast(\"Processing... please wait...\", { autoClose: false });\r\n\r\n  success = () => toast.update(this.toastId, { render: \"Success\", type: toast.TYPE.SUCCESS, autoClose: 3000 });\r\n  failed = () => toast.update(this.toastId, { render: \"Failed\", type: toast.TYPE.ERROR, autoClose: 3000 });\r\n\r\n  onChangeStartDate = (date) => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  }\r\n  onChangeEndDate = (date) => {\r\n    this.setState({\r\n      endDate: date\r\n    });\r\n  }\r\n  \r\n  toggle = () => {\r\n    this.setState({ collapse: !this.state.collapse });\r\n  }\r\n  toggleAdd = () => {\r\n    this.setState(prevState => ({\r\n      modalAdd: !prevState.modalAdd\r\n    }));\r\n  }\r\n  toggleAddOpen = () => {\r\n    this.setState(prevState => ({\r\n      modalAdd: !prevState.modalAdd,\r\n      title: '',\r\n      description: '',\r\n      priority: \"\",      \r\n      assignee: \"\",\r\n      comment: '',\r\n      status: \"\",\r\n      review: \"\",\r\n      updateId:\"\",\r\n      status:\"\",\r\n    }));\r\n  }\r\n  toggleEdit = () => {\r\n    this.setState(prevState => ({\r\n      modalEdit: !prevState.modalEdit\r\n    }));\r\n  }\r\n  toggleEditOpen = (event) => {\r\n    let updateId=event.currentTarget.dataset.id\r\n    let   title=event.currentTarget.dataset.title\r\n    let  description=event.currentTarget.dataset.description\r\n    let  start=event.currentTarget.dataset.start\r\n    let   deadline=event.currentTarget.dataset.deadline\r\n    let   priority=event.currentTarget.dataset.priority\r\n    let   status=event.currentTarget.dataset.status\r\n    let   assignee=event.currentTarget.dataset.assignee\r\n    let sprintBacklog=event.currentTarget.dataset.sprintbacklog\r\n    this.setState(prevState => ({\r\n      modalEdit: !prevState.modalEdit,\r\n      updateId,\r\n      title,\r\n      description,\r\n      start,\r\n      deadline,\r\n      priority,\r\n      status,\r\n      assignee,\r\n      sprintBacklog\r\n    }));\r\n  }\r\n\r\n  onTextboxChangeTitle = (event) => {\r\n    this.setState({\r\n      title: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeDescription = (event) => {\r\n    this.setState({\r\n      description: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangePriority = (event) => {\r\n    this.setState({\r\n      priority: event.target.value,\r\n    });\r\n\r\n  }\r\n  onTextboxChangeSprintBacklog = (event) => {\r\n    this.setState({\r\n      sprintBacklog: event.target.value,\r\n    });\r\n\r\n  }\r\n\r\n \r\n  onTextboxChangeAssignee = (event) => {\r\n    this.setState({\r\n      assignee: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeComment = (event) => {\r\n    this.setState({\r\n      comment: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeReview = (event) => {\r\n    this.setState({\r\n      review: event.target.value,\r\n    });\r\n  }\r\n  onTextboxChangeStatus = (event) => {\r\n    this.setState({\r\n      status: event.target.value,\r\n    });\r\n  }\r\n  loadAllSprint=()=>{\r\n    const sprintbacklogService = new proto.sprintbacklog.SprintBacklogClient('https://www.overlead.co');\r\n    var metadata = {};\r\n    var GetAllSprintBacklogReq = new proto.sprintbacklog.GetAllSprintBacklogReq();\r\n    GetAllSprintBacklogReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllSprintBacklogReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllSprintBacklogReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    GetAllSprintBacklogReq.setTeamid(getFromStorage(\"teamId\"));\r\n    let sprints=[]\r\n    var response = sprintbacklogService.getAllSprintBacklog(GetAllSprintBacklogReq, metadata)\r\n    let that = this\r\n    \r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        let arr = response.getStart().split('-');\r\n        let start = \"\"\r\n        let end = \"\"\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n\r\n        arr = response.getDeadline().split('-')\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n        sprints.push({\r\n          id: response.getBacklogid(),\r\n          title: response.getTitle(),\r\n          role: response.getRole(),\r\n          want: response.getWant(),\r\n          so: response.getSo(),\r\n          priority: response.getPriority(),\r\n          estimation: response.getEstimation(),\r\n          sprint: response.getSprintid(),\r\n          status: response.getStatusbacklog(),\r\n          start: start,\r\n          deadline: end,\r\n        })      \r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n      setInStorage(\"sprints\",sprints)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n\r\n  }\r\n  loadAllTask=()=>{\r\n    \r\n    let end = this.state.endDate;\r\n    end.setDate(end.getDate() + 15);\r\n    this.setState({\r\n      endDate: end\r\n    })\r\n//this.notify()\r\n    let d = this.state.startDate;\r\n    let start = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n    d = this.state.endDate;\r\n     end = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var GetAllTeamTaskReq = new proto.teamtask.GetAllTeamTaskReq();\r\n    GetAllTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    GetAllTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    GetAllTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    GetAllTeamTaskReq.setTeamid(getFromStorage(\"teamId\"));\r\n    GetAllTeamTaskReq.setSprintid(\"this.state.sprintId\");\r\n    \r\n    var response = teamtaskService.getAllTeamTask(GetAllTeamTaskReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        let arr = response.getStart().split('-');\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n        arr = response.getDeadline().split('-')\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n        //processing assign array\r\n          let str=response.getAssigneearray()\r\n          str=str.slice(1,-1)\r\n          arr=str.split(', ')\r\n\r\n      \r\n\r\n          // that.state.mem.map(p=>{\r\n          //   if (arr.indexOf(p.id)!=-1){\r\n          //     console.log(\"exist\")\r\n          //     arr[arr.indexOf(p.id)]=p.username\r\n          //   }\r\n          //   return p\r\n          // })\r\n\r\n        that.setState(prevState => ({\r\n          data: [...prevState.data,\r\n          {\r\n            id: response.getTeamtaskid(),\r\n            title: response.getTitle(),\r\n            description: response.getDescription(),\r\n            assignee: arr,\r\n            priority: response.getPriority(),\r\n            review: response.getReview(),\r\n            comment: response.getComment(),\r\n            status: response.getStatusteamtask(),\r\n            start: start,\r\n            deadline: end,\r\n            sprintBacklog: response.getSprintbacklogid()\r\n          }]\r\n        }));\r\n\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n \r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n  }\r\n  componentDidMount() {   \r\n    this.loadAllSprint()\r\n    this.loadAllTask()\r\n\r\n  }\r\n  handleAdd = () => {\r\n    console.log(\"handle add\")\r\n    let sprint=this.state.sprintBacklog\r\n    console.log(getFromStorage(\"sprints\").length>0)\r\n    console.log(sprint==\"\")\r\n    console.log(getFromStorage('sprints')[0])\r\n    if (sprint==\"\" && getFromStorage(\"sprints\").length>0){\r\n      sprint=getFromStorage('sprints')[0].title\r\n    }\r\n    this.notify()\r\n    let d = this.state.startDate;\r\n    let start = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n    d = this.state.endDate;\r\n    let end = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var AddNewTeamTaskReq = new proto.teamtask.AddNewTeamTaskReq();\r\n    AddNewTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    AddNewTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    AddNewTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    AddNewTeamTaskReq.setTeamid(getFromStorage(\"teamId\"));\r\n    AddNewTeamTaskReq.setPriority(this.state.priority);\r\n    AddNewTeamTaskReq.setStart(start);\r\n    AddNewTeamTaskReq.setDeadline(end);\r\n    AddNewTeamTaskReq.setAssigneearray(this.state.assignee)\r\n    AddNewTeamTaskReq.setComment(\"\");\r\n    AddNewTeamTaskReq.setStatus(\"todos\");\r\n    AddNewTeamTaskReq.setReview(\"\");\r\n    AddNewTeamTaskReq.setTitle(this.state.title);\r\n    AddNewTeamTaskReq.setDescription(this.state.description);\r\n    AddNewTeamTaskReq.setSprintid(getFromStorage('currentSprintId'));\r\n    AddNewTeamTaskReq.setSprintbacklogid(sprint);\r\n\r\n    \r\n    var response = teamtaskService.addNewTeamTask(AddNewTeamTaskReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      console.log(response.getStatus())\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.toggleAdd()\r\n        that.success()\r\n        let arr = start.split('-');\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n\r\n        arr = end.split('-')\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n        that.setState(prevState => ({\r\n          data: [...prevState.data,\r\n          {\r\n            id: response.getTeamtaskid(),\r\n            title: that.state.title,\r\n            description: that.state.description,\r\n            assignee: that.state.assignee,\r\n            priority: that.state.priority,\r\n            review: \"\",\r\n            comment: \"\",\r\n            status: \"todos\",\r\n            start: start,\r\n            deadline: end,\r\n            sprintBacklog:sprint,\r\n          }]\r\n        }));\r\n\r\n      }else{\r\n        that.failed()\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n\r\n  };\r\n  handleDelete = (event) => {\r\n    let id = event.currentTarget.dataset.id\r\n    console.log(\"delete\")\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    this.notify()\r\n    var metadata = {};\r\n    var CancelTeamTaskReq = new proto.teamtask.CancelTeamTaskReq();\r\n    CancelTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    CancelTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    CancelTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    CancelTeamTaskReq.setTeamtaskid(id)\r\n    CancelTeamTaskReq.setTeamid(getFromStorage(\"teamId\"))\r\n    let that=this\r\n    teamtaskService.cancelTeamTask(CancelTeamTaskReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n        console.log(\"error\")\r\n      } else { //if success\r\n        //get response\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n            that.success()\r\n            let newData=that.state.data;\r\n            that.setState({\r\n              data:newData.filter(p=>{\r\n                if (p.id==id) return false\r\n                return true\r\n              })\r\n            })\r\n        }else {\r\n          that.failed()\r\n        }\r\n       \r\n      }\r\n    });\r\n  };\r\n  handleAssignToMe=(event)=>{\r\n    let id = event.currentTarget.dataset.id\r\n    console.log(\"handleAssignToMe\")\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    this.notify()\r\n    var metadata = {};\r\n    var RegisterTeamTaskReq = new proto.teamtask.RegisterTeamTaskReq();\r\n    RegisterTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    RegisterTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    RegisterTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    RegisterTeamTaskReq.setTeamtaskid(id)\r\n    RegisterTeamTaskReq.setTeamid(getFromStorage(\"teamId\"))\r\n    RegisterTeamTaskReq.setAssigner(getFromStorage(\"username\"))\r\n    let that=this\r\n    teamtaskService.registerTeamTask(RegisterTeamTaskReq, metadata, (err, response) => {\r\n      if (err) { //if error\r\n        console.log(err);\r\n        console.log(\"error\")\r\n      } else { //if success\r\n        //get response\r\n        if (response.getStatus() == \"SUCCESS\") {\r\n            that.success()\r\n            let newData=that.state.data;\r\n            that.setState({\r\n              data:newData.map(p=>{\r\n                if (p.id==id){\r\n                  return Object.assign(p,{assignee:getFromStorage(\"username\")})\r\n                } \r\n                return p\r\n              })\r\n            })\r\n        }else {\r\n          that.failed()\r\n        }\r\n       \r\n      }\r\n    });\r\n  }\r\n  \r\n  //TODO: update at assign\r\n  handleUpdate = () => {\r\n    this.notify()\r\n    let d = this.state.startDate;\r\n    let start = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n    d = this.state.endDate;\r\n    let end = d.getMinutes() + \"-\" + d.getHours() + \"-\" + d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\r\n\r\n    const teamtaskService = new proto.teamtask.TeamTaskClient('https://www.overlead.co');\r\n    var metadata = {};\r\n\r\n    var UpdateTeamTaskReq = new proto.teamtask.UpdateTeamTaskReq();\r\n    UpdateTeamTaskReq.setRequesterid(getFromStorage(\"userId\"));\r\n    UpdateTeamTaskReq.setAccesstoken(getFromStorage(\"accessToken\"));\r\n    UpdateTeamTaskReq.setProjectid(getFromStorage(\"currentProject\"));\r\n    UpdateTeamTaskReq.setTeamid(getFromStorage(\"teamId\"));\r\n    UpdateTeamTaskReq.setTeamtaskid(this.state.updateId);\r\n\r\n    UpdateTeamTaskReq.setPriority(this.state.priority);\r\n    UpdateTeamTaskReq.setStart(start);\r\n    UpdateTeamTaskReq.setDeadline(end);\r\n    UpdateTeamTaskReq.setAssigneearray(this.state.assignee)\r\n    UpdateTeamTaskReq.setComment(this.state.comment);\r\n    UpdateTeamTaskReq.setStatus(this.state.status);\r\n    UpdateTeamTaskReq.setReview(this.state.review);\r\n    UpdateTeamTaskReq.setTitle(this.state.title);\r\n    UpdateTeamTaskReq.setDescription(this.state.description);\r\n    UpdateTeamTaskReq.setSprintid(getFromStorage(\"currentSprintId\"));\r\n    UpdateTeamTaskReq.setSprintbacklogid(this.state.sprintBacklog)\r\n    var response = teamtaskService.updateTeamTask(UpdateTeamTaskReq, metadata)\r\n    let that = this\r\n    response.on('data', function (response) {\r\n      console.log(response.getStatus())\r\n      if (response.getStatus() == \"SUCCESS\") {\r\n        that.toggleEdit()\r\n        that.success()\r\n        let arr = start.split('-');\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          start = (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n\r\n        arr = end.split('-')\r\n        if (arr[1] > 12) {\r\n          arr[1] = arr[1] - 12\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"PM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        } else {\r\n          end = \"\\xa0\" + (arr[1].length == 1 ? \"0\" + arr[1] : arr[1]) + \":\" + (arr[0].length == 1 ? \"0\" + arr[0] : arr[0]) + \"AM\" + `\\xa0\\xa0` + arr[2] + \"/\" + (parseInt(arr[3], 10)+1) + \"/\" + arr[4]\r\n        }\r\n\r\n\r\n\r\n        \r\n        let newData=that.state.data        \r\n        that.setState({\r\n          data:newData.map(p=>{\r\n            if (p.id==that.state.updateId)    {\r\n              return {\r\n                id: that.state.updateId,\r\n                title: that.state.title,\r\n                description: that.state.description,\r\n                assignee: that.state.assignee,\r\n                priority: that.state.priority,\r\n                review: \"\",\r\n                comment: \"\",\r\n                status: that.state.status,\r\n                start: start,\r\n                deadline: end,\r\n                sprintBacklog:that.state.sprintBacklog\r\n              }\r\n            }                 \r\n            \r\n            return p\r\n          }) \r\n        });\r\n\r\n      }else{\r\n        that.failed()\r\n      }\r\n    })\r\n    response.on('status', function (status) {\r\n      if (status.code!=0) console.log(status)\r\n\r\n    });\r\n    response.on('end', function (end) {\r\n      console.log(\"end\")\r\n      console.log(end)\r\n    });\r\n\r\n  };\r\n \r\n  // componentDidUpdate(){\r\n  //   let mem=getFromStorage('members')\r\n  //   let arr=this.state.data\r\n  //   mem.map(p=>{\r\n  //     if (arr.indexOf(p.id)!=-1){\r\n  //       console.log(\"exist\")\r\n  //       arr[arr.indexOf(p.id)]=p.username\r\n  //     }\r\n  //     return p\r\n  //   })\r\n  // }\r\n  render() {    \r\n    let that = this;\r\n    let sprints=getFromStorage('sprints')\r\n    console.log(\"sprints\")\r\n    console.log(sprints)\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Row>\r\n            <Col xs=\"2\" md=\"2\">\r\n              <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"Search\" />\r\n            </Col>\r\n\r\n            <Col xs=\"0\" md=\"0\">\r\n              <Button type=\"submit\" size=\"sm\" color=\"success\"><i class=\"fa fa-search\"></i></Button>\r\n            </Col>\r\n          </Row>\r\n          <Card>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-lg\">\r\n                <thead class=\"thead\">\r\n                  <tr class=\"bg-primary\">\r\n                    <th>Title <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Description <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Sprint <i class=\"fa fa-sort\"></i></th>\r\n\r\n                    <th>Priority <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Start day <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Deadline <i class=\"fa fa-sort\"></i></th>\r\n                    <th>Assignee</th>\r\n                    <th>Comment</th>\r\n                    <th>Status</th>\r\n                    <th>Review</th>\r\n                    <th>\r\n                      <div>\r\n                        <Button color=\"primary\" size=\"sm\" className=\"mt-3\" onClick={that.toggleAddOpen}><i class=\"fa fa-plus-square\"></i>{this.props.buttonLabel}</Button>\r\n                       \r\n                        <Modal size=\"lg\" isOpen={that.state.modalAdd} toggle={that.toggleAdd} className={that.props.className}>\r\n                          <ModalHeader toggle={that.toggleAdd}>Team Task</ModalHeader>\r\n                          <ModalBody>\r\n                            <Form className=\"form-horizontal\">\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">title</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"text\" id=\"title\" name=\"title\" placeholder=\"title\" value={that.state.title} onChange={that.onTextboxChangeTitle} />\r\n\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"textarea-input\">description</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"9\">\r\n                                  <Input type=\"textarea\" name=\"description\" id=\"description\" rows=\"9\"\r\n                                    placeholder=\"Content...\" value={that.state.description} onChange={that.onTextboxChangeDescription} />\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">Sprint backlog</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"3\">\r\n                                  <Input type=\"select\" name=\"select\" id=\"select\"  onChange={that.onTextboxChangeSprintBacklog}>                                    \r\n                                    { \r\n                                      (sprints!=undefined)?\r\n                                      sprints.map(p=>{\r\n                                        return(\r\n                                          <option value={p.title}>{p.title}</option>\r\n                                        )\r\n                                      }):\r\n                                      \r\n                                        <option disable={true} value=\"\">not have any sprint backlog</option>\r\n                                      \r\n                                    }\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">priority</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"3\">\r\n                                  <Input type=\"select\" name=\"select\" id=\"select\"  onChange={that.onTextboxChangePriority}>\r\n                                    <option value=\"0\">Please select</option>\r\n                                    <option value=\"High\">High</option>\r\n                                    <option value=\"Medium\">Medium</option>\r\n                                    <option value=\"Low\">Low</option>\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"date-input\">Start  </Label>\r\n                                </Col>\r\n                                <Col xs=\"3\" md=\"3\">\r\n                                  <DatePicker\r\n\r\n                                    selected={that.state.startDate}\r\n                                    timeInputLabel=\"Time:\"\r\n                                    onChange={that.onChangeStartDate}\r\n                                    dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                                    showTimeInput\r\n                                  /> </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"date-input\">Deadline </Label>\r\n                                </Col>\r\n                                <Col xs=\"3\" md=\"3\">\r\n                                  <DatePicker\r\n\r\n\r\n                                    selected={that.state.endDate}\r\n                                    timeInputLabel=\"Time:\"\r\n                                    onChange={that.onChangeEndDate}\r\n                                    dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                                    showTimeInput\r\n                                  /> </Col>\r\n                              </FormGroup>\r\n\r\n                              <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">Assignee</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"3\">\r\n                                  <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangeAssignee}>\r\n                                  <option value=\"0\">Please select</option>\r\n                                    { (that.state.mem!=undefined)?\r\n                                      that.state.mem.map(p=>{\r\n                                        return(\r\n                                          <option value={p.username}>{p.username}</option>\r\n                                        )\r\n                                      }):{\r\n                                        \r\n                                      }\r\n                                    }\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n                            </Form>\r\n                          </ModalBody>\r\n                          <ModalFooter>\r\n                            <Button color=\"primary\" onClick={that.handleAdd}>Submit</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={that.toggleAdd}>Cancel</Button>\r\n                          </ModalFooter>\r\n                        </Modal>\r\n                      </div>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n\r\n\r\n\r\n\r\n\r\n                <tbody>{this.state.data.map(function (item, key) {\r\n\r\n                  return (\r\n                    <tr key={key}>\r\n                      <td>{item.title}</td>\r\n                      <td>{item.description}</td>\r\n                      <td>{item.sprintBacklog}</td>\r\n                      <td>{item.priority}</td>\r\n                      <td>{item.start}</td>\r\n                      <td>{item.deadline}</td>\r\n                      <td>{item.assignee}</td>\r\n                      <td>{item.comment}</td>\r\n                      <td>{item.status}</td>\r\n                      <td>{item.review}</td>\r\n                      <td>\r\n                        <div>\r\n                          <div data-id={item.id} \r\n                           data-title={item.title} data-description={item.description}\r\n                            data-priority={item.priority} data-start={item.start} data-deadline={item.deadline}\r\n                             data-assignee={item.assignee}  data-comment={item.comment}\r\n                              data-status={item.status} data-review={item.review} data-sprintbacklog={item.sprintBacklog} onClick={that.toggleEditOpen}>\r\n                          <Button color=\"warning\" size=\"sm\" S ><i class=\"fa fa-edit\"></i>{that.props.buttonLabel}</Button>\r\n                          </div>\r\n                          <Modal size=\"lg\" isOpen={that.state.modalEdit} toggle={that.toggleEdit} className={that.props.className}>\r\n                            <ModalHeader toggle={that.toggleEdit}>Team task</ModalHeader>\r\n                            <ModalBody>\r\n                              <Form action=\"\" className=\"form-horizontal\">\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"text-input\">Title</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <Input type=\"text\" id=\"text-input\" name=\"text-input\" placeholder=\"title\" value={that.state.title} onChange={that.onTextboxChangeTitle}/>\r\n\r\n                                  </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"textarea-input\">Description</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <Input type=\"textarea\" name=\"textarea-input\" id=\"textarea-input\" rows=\"9\"\r\n                                      placeholder=\"Content...\" value={that.state.description} onChange={that.onTextboxChangeDescription} />\r\n                                  </Col>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup row>\r\n                                <Col md=\"3\">\r\n                                  <Label htmlFor=\"text-input\">Sprint backlog</Label>\r\n                                </Col>\r\n                                <Col xs=\"12\" md=\"3\">\r\n                                  <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangeSprintBacklog}>\r\n                                  <option value={that.state.sprintBacklog}>{that.state.sprintBacklog}</option>\r\n             \r\n                                    { (sprints!=undefined)?\r\n                                      sprints.map(p=>{\r\n                                        return(\r\n                                          <option value={p.title}>{p.title}</option>\r\n                                        )\r\n                                      }):\r\n                                      \r\n                                        <option disable={true} value=\"\">not have any sprint backlog</option>\r\n                                      \r\n                                    }\r\n                                  </Input>\r\n                                </Col>\r\n                              </FormGroup>\r\n\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label>Priority</Label>\r\n                                  </Col>\r\n                                  <Col md=\"3\">\r\n                                    <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangePriority}>\r\n                                      <option value={that.state.priority}>{that.state.priority}</option>\r\n                                      <option value=\"High\">High</option>\r\n                                      <option value=\"Medium\">Medium</option>\r\n                                      <option value=\"Low\">Low</option>\r\n                                    </Input>\r\n                                  </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"date-input\">Start time</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <DatePicker\r\n\r\n\r\n                                      selected={that.state.startDate}\r\n                                      timeInputLabel=\"Time:\"\r\n                                      onChange={that.onChangeStartDate}\r\n                                      dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                                      showTimeInput\r\n                                    /></Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"date-input\">Deadline </Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"9\">\r\n                                    <DatePicker\r\n\r\n\r\n                                      selected={that.state.endDate}\r\n                                      timeInputLabel=\"Time:\"\r\n                                      onChange={that.onChangeEndDate}\r\n                                      dateFormat=\"dd/MM/yyyy h:mm aa\"\r\n                                      showTimeInput\r\n                                    />    </Col>\r\n                                </FormGroup>\r\n                                <FormGroup row>\r\n                                      <Col md=\"3\">\r\n                                        <Label htmlFor=\"text-input\">Assignee</Label>\r\n                                      </Col>\r\n                                     <Col xs=\"12\" md=\"3\">\r\n                                        <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangeAssignee}>\r\n                                        <option value={that.state.assignee}>{that.state.assignee}</option>\r\n                                    { (that.state.mem!=undefined)?\r\n                                      that.state.mem.map(p=>{\r\n                                        return(\r\n                                          <option value={p.username}>{p.username}</option>\r\n                                        )\r\n                                      }):{\r\n                                        \r\n                                      }\r\n                                    }\r\n                                        </Input>\r\n                                      </Col>\r\n                                    </FormGroup>   \r\n                                <FormGroup row>\r\n                                  <Col md=\"3\">\r\n                                    <Label htmlFor=\"text-input\">Status</Label>\r\n                                  </Col>\r\n                                  <Col xs=\"12\" md=\"3\">\r\n                                    <Input type=\"select\" name=\"select\" id=\"select\" onChange={that.onTextboxChangeStatus}>\r\n                                      <option value={that.state.status}>{that.state.status}</option>\r\n                                      <option value=\"done\">done</option>\r\n                                      <option value=\"inprogress\">inprogress</option>\r\n                                      <option value=\"todos\">to do</option>\r\n                                    </Input>\r\n                                  </Col>\r\n                                </FormGroup>\r\n                              </Form>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                              <Button color=\"primary\" onClick={that.handleUpdate}>Submit</Button>{' '}\r\n                              <Button color=\"secondary\" onClick={that.toggleEdit}>Cancel</Button>\r\n                            </ModalFooter>\r\n                          </Modal>\r\n                        </div>\r\n                        <div data-id={item.id} onClick={that.handleAssignToMe}>\r\n                        <Button size=\"sm\" color=\"success\"><i class=\"fa fa-plus\"> Assign to me</i></Button>\r\n                        </div>\r\n                        <div data-id={item.id} onClick={that.handleDelete}>\r\n\r\n                        <Button size=\"sm\" color=\"danger\"><i class=\"fa fa-minus\"> Delete</i></Button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  )\r\n\r\n                })}</tbody>\r\n              </table>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamTask;\r\n"],"sourceRoot":""}